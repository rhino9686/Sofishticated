
lil_fish_tanks_arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001da  00800100  000042aa  0000433e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000042aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002d2  008002da  008002da  00004518  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00004518  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004548  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000ab0  00000000  00000000  00004588  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00016500  00000000  00000000  00005038  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000435a  00000000  00000000  0001b538  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000072e0  00000000  00000000  0001f892  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000020b0  00000000  00000000  00026b74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00005104  00000000  00000000  00028c24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000c4fd  00000000  00000000  0002dd28  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a08  00000000  00000000  0003a225  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 80 00 	jmp	0x100	; 0x100 <__dtors_end>
       4:	0c 94 fa 10 	jmp	0x21f4	; 0x21f4 <__vector_1>
       8:	0c 94 21 11 	jmp	0x2242	; 0x2242 <__vector_2>
       c:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <__vector_3>
      10:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <__vector_3>
      14:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <__vector_3>
      18:	0c 94 8a 1f 	jmp	0x3f14	; 0x3f14 <__vector_6>
      1c:	0c 94 06 1d 	jmp	0x3a0c	; 0x3a0c <__vector_7>
      20:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      24:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      28:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      2c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      30:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      34:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      38:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      3c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      40:	0c 94 48 11 	jmp	0x2290	; 0x2290 <__vector_16>
      44:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      48:	0c 94 58 0e 	jmp	0x1cb0	; 0x1cb0 <__vector_18>
      4c:	0c 94 8a 0e 	jmp	0x1d14	; 0x1d14 <__vector_19>
      50:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      54:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      58:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      5c:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      60:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      64:	0c 94 a8 00 	jmp	0x150	; 0x150 <__bad_interrupt>
      68:	9a 1c       	adc	r9, r10
      6a:	9a 1c       	adc	r9, r10
      6c:	9a 1c       	adc	r9, r10
      6e:	d9 1c       	adc	r13, r9
      70:	c4 1c       	adc	r12, r4
      72:	d3 1c       	adc	r13, r3
      74:	9a 1c       	adc	r9, r10
      76:	9a 1c       	adc	r9, r10
      78:	d9 1c       	adc	r13, r9
      7a:	c4 1c       	adc	r12, r4

0000007c <__trampolines_end>:
      7c:	00 5e       	subi	r16, 0xE0	; 224
      7e:	bc e2       	ldi	r27, 0x2C	; 44
      80:	61 3f       	cpi	r22, 0xF1	; 241
      82:	dd 83       	std	Y+5, r29	; 0x05
      84:	c2 9c       	mul	r12, r2
      86:	7e 20       	and	r7, r14
      88:	a3 fd       	sbrc	r26, 3
      8a:	1f 41       	sbci	r17, 0x1F	; 31
      8c:	00 9d       	mul	r16, r0
      8e:	23 be       	out	0x33, r2	; 51
      90:	46 db       	rcall	.-2420   	; 0xfffff71e <__eeprom_end+0xff7ef71e>
      92:	65 f8       	bld	r6, 5
      94:	8c 11       	cpse	r24, r12
      96:	af 32       	cpi	r26, 0x2F	; 47
      98:	ca 57       	subi	r28, 0x7A	; 122
      9a:	e9 74       	andi	r30, 0x49	; 73

0000009c <digital_pin_to_timer_PGM>:
      9c:	00 00 00 08 00 02 01 00 00 03 04 07 00 00 00 00     ................
      ac:	00 00 00 00                                         ....

000000b0 <digital_pin_to_bit_mask_PGM>:
      b0:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      c0:	04 08 10 20                                         ... 

000000c4 <digital_pin_to_port_PGM>:
      c4:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      d4:	03 03 03 03                                         ....

000000d8 <port_to_input_PGM>:
      d8:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000000e2 <port_to_output_PGM>:
      e2:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000ec <port_to_mode_PGM>:
      ec:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000f6 <__ctors_start>:
      f6:	ec 04       	cpc	r14, r12
      f8:	28 08       	sbc	r2, r8
      fa:	ba 0e       	add	r11, r26

000000fc <__ctors_end>:
      fc:	ff 04       	cpc	r15, r15
      fe:	2c 08       	sbc	r2, r12

00000100 <__dtors_end>:
     100:	11 24       	eor	r1, r1
     102:	1f be       	out	0x3f, r1	; 63
     104:	cf ef       	ldi	r28, 0xFF	; 255
     106:	d8 e0       	ldi	r29, 0x08	; 8
     108:	de bf       	out	0x3e, r29	; 62
     10a:	cd bf       	out	0x3d, r28	; 61

0000010c <__do_copy_data>:
     10c:	12 e0       	ldi	r17, 0x02	; 2
     10e:	a0 e0       	ldi	r26, 0x00	; 0
     110:	b1 e0       	ldi	r27, 0x01	; 1
     112:	ea ea       	ldi	r30, 0xAA	; 170
     114:	f2 e4       	ldi	r31, 0x42	; 66
     116:	02 c0       	rjmp	.+4      	; 0x11c <__do_copy_data+0x10>
     118:	05 90       	lpm	r0, Z+
     11a:	0d 92       	st	X+, r0
     11c:	aa 3d       	cpi	r26, 0xDA	; 218
     11e:	b1 07       	cpc	r27, r17
     120:	d9 f7       	brne	.-10     	; 0x118 <__do_copy_data+0xc>

00000122 <__do_clear_bss>:
     122:	25 e0       	ldi	r18, 0x05	; 5
     124:	aa ed       	ldi	r26, 0xDA	; 218
     126:	b2 e0       	ldi	r27, 0x02	; 2
     128:	01 c0       	rjmp	.+2      	; 0x12c <.do_clear_bss_start>

0000012a <.do_clear_bss_loop>:
     12a:	1d 92       	st	X+, r1

0000012c <.do_clear_bss_start>:
     12c:	ac 3a       	cpi	r26, 0xAC	; 172
     12e:	b2 07       	cpc	r27, r18
     130:	e1 f7       	brne	.-8      	; 0x12a <.do_clear_bss_loop>

00000132 <__do_global_ctors>:
     132:	10 e0       	ldi	r17, 0x00	; 0
     134:	ce e7       	ldi	r28, 0x7E	; 126
     136:	d0 e0       	ldi	r29, 0x00	; 0
     138:	04 c0       	rjmp	.+8      	; 0x142 <__do_global_ctors+0x10>
     13a:	21 97       	sbiw	r28, 0x01	; 1
     13c:	fe 01       	movw	r30, r28
     13e:	0e 94 e7 1f 	call	0x3fce	; 0x3fce <__tablejump2__>
     142:	cb 37       	cpi	r28, 0x7B	; 123
     144:	d1 07       	cpc	r29, r17
     146:	c9 f7       	brne	.-14     	; 0x13a <__do_global_ctors+0x8>
     148:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <main>
     14c:	0c 94 48 21 	jmp	0x4290	; 0x4290 <__do_global_dtors>

00000150 <__bad_interrupt>:
     150:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000154 <_ZN11EEPROMClass4readEi.isra.0>:

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
     154:	0c 94 32 21 	jmp	0x4264	; 0x4264 <eeprom_read_byte>

00000158 <_ZN10DFRobot_PHC1Ev>:
#define EEPROM_read(address, p)  {int i = 0; byte *pp = (byte*)&(p);for(; i < sizeof(p); i++) pp[i]=EEPROM.read(address+i);}

#define PHVALUEADDR 0x00    //the start address of the pH calibration parameters stored in the EEPROM


DFRobot_PH::DFRobot_PH()
     158:	fc 01       	movw	r30, r24
{
    this->_temperature    = 25.0;
     15a:	80 e0       	ldi	r24, 0x00	; 0
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	a8 ec       	ldi	r26, 0xC8	; 200
     160:	b1 e4       	ldi	r27, 0x41	; 65
     162:	80 8b       	std	Z+16, r24	; 0x10
     164:	91 8b       	std	Z+17, r25	; 0x11
     166:	a2 8b       	std	Z+18, r26	; 0x12
     168:	b3 8b       	std	Z+19, r27	; 0x13
    this->_phValue        = 7.0;
     16a:	80 e0       	ldi	r24, 0x00	; 0
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	a0 ee       	ldi	r26, 0xE0	; 224
     170:	b0 e4       	ldi	r27, 0x40	; 64
     172:	80 83       	st	Z, r24
     174:	91 83       	std	Z+1, r25	; 0x01
     176:	a2 83       	std	Z+2, r26	; 0x02
     178:	b3 83       	std	Z+3, r27	; 0x03
    this->_acidVoltage    = 2032.44;    //buffer solution 4.0 at 25C
     17a:	84 e1       	ldi	r24, 0x14	; 20
     17c:	9e e0       	ldi	r25, 0x0E	; 14
     17e:	ae ef       	ldi	r26, 0xFE	; 254
     180:	b4 e4       	ldi	r27, 0x44	; 68
     182:	84 83       	std	Z+4, r24	; 0x04
     184:	95 83       	std	Z+5, r25	; 0x05
     186:	a6 83       	std	Z+6, r26	; 0x06
     188:	b7 83       	std	Z+7, r27	; 0x07
    this->_neutralVoltage = 1500.0;     //buffer solution 7.0 at 25C
     18a:	80 e0       	ldi	r24, 0x00	; 0
     18c:	90 e8       	ldi	r25, 0x80	; 128
     18e:	ab eb       	ldi	r26, 0xBB	; 187
     190:	b4 e4       	ldi	r27, 0x44	; 68
     192:	80 87       	std	Z+8, r24	; 0x08
     194:	91 87       	std	Z+9, r25	; 0x09
     196:	a2 87       	std	Z+10, r26	; 0x0a
     198:	b3 87       	std	Z+11, r27	; 0x0b
    this->_voltage        = 1500.0;
     19a:	84 87       	std	Z+12, r24	; 0x0c
     19c:	95 87       	std	Z+13, r25	; 0x0d
     19e:	a6 87       	std	Z+14, r26	; 0x0e
     1a0:	b7 87       	std	Z+15, r27	; 0x0f
     1a2:	08 95       	ret

000001a4 <_ZN10DFRobot_PHD1Ev>:
}

DFRobot_PH::~DFRobot_PH()
     1a4:	08 95       	ret

000001a6 <_ZN10DFRobot_PH5beginEv>:
{

}

void DFRobot_PH::begin()
{
     1a6:	cf 92       	push	r12
     1a8:	df 92       	push	r13
     1aa:	ef 92       	push	r14
     1ac:	ff 92       	push	r15
     1ae:	0f 93       	push	r16
     1b0:	1f 93       	push	r17
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	ec 01       	movw	r28, r24
    EEPROM_read(PHVALUEADDR, this->_neutralVoltage);  //load the neutral (pH = 7.0)voltage of the pH board from the EEPROM
     1b8:	7c 01       	movw	r14, r24
     1ba:	88 e0       	ldi	r24, 0x08	; 8
     1bc:	e8 0e       	add	r14, r24
     1be:	f1 1c       	adc	r15, r1
     1c0:	67 01       	movw	r12, r14
     1c2:	00 e0       	ldi	r16, 0x00	; 0
     1c4:	10 e0       	ldi	r17, 0x00	; 0
     1c6:	c8 01       	movw	r24, r16
     1c8:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     1cc:	f6 01       	movw	r30, r12
     1ce:	81 93       	st	Z+, r24
     1d0:	6f 01       	movw	r12, r30
     1d2:	0f 5f       	subi	r16, 0xFF	; 255
     1d4:	1f 4f       	sbci	r17, 0xFF	; 255
     1d6:	04 30       	cpi	r16, 0x04	; 4
     1d8:	11 05       	cpc	r17, r1
     1da:	a9 f7       	brne	.-22     	; 0x1c6 <_ZN10DFRobot_PH5beginEv+0x20>
    Serial.print("_neutralVoltage:");
     1dc:	66 e2       	ldi	r22, 0x26	; 38
     1de:	71 e0       	ldi	r23, 0x01	; 1
     1e0:	81 e7       	ldi	r24, 0x71	; 113
     1e2:	94 e0       	ldi	r25, 0x04	; 4
     1e4:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <_ZN5Print5printEPKc>
    Serial.println(this->_neutralVoltage);
     1e8:	48 85       	ldd	r20, Y+8	; 0x08
     1ea:	59 85       	ldd	r21, Y+9	; 0x09
     1ec:	6a 85       	ldd	r22, Y+10	; 0x0a
     1ee:	7b 85       	ldd	r23, Y+11	; 0x0b
     1f0:	22 e0       	ldi	r18, 0x02	; 2
     1f2:	30 e0       	ldi	r19, 0x00	; 0
     1f4:	81 e7       	ldi	r24, 0x71	; 113
     1f6:	94 e0       	ldi	r25, 0x04	; 4
     1f8:	0e 94 c7 10 	call	0x218e	; 0x218e <_ZN5Print7printlnEdi>
    if(EEPROM.read(PHVALUEADDR)==0xFF && EEPROM.read(PHVALUEADDR+1)==0xFF && EEPROM.read(PHVALUEADDR+2)==0xFF && EEPROM.read(PHVALUEADDR+3)==0xFF){
     1fc:	80 e0       	ldi	r24, 0x00	; 0
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     204:	8f 3f       	cpi	r24, 0xFF	; 255
     206:	39 f5       	brne	.+78     	; 0x256 <_ZN10DFRobot_PH5beginEv+0xb0>
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     210:	8f 3f       	cpi	r24, 0xFF	; 255
     212:	09 f5       	brne	.+66     	; 0x256 <_ZN10DFRobot_PH5beginEv+0xb0>
     214:	82 e0       	ldi	r24, 0x02	; 2
     216:	90 e0       	ldi	r25, 0x00	; 0
     218:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     21c:	8f 3f       	cpi	r24, 0xFF	; 255
     21e:	d9 f4       	brne	.+54     	; 0x256 <_ZN10DFRobot_PH5beginEv+0xb0>
     220:	83 e0       	ldi	r24, 0x03	; 3
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     228:	8f 3f       	cpi	r24, 0xFF	; 255
     22a:	a9 f4       	brne	.+42     	; 0x256 <_ZN10DFRobot_PH5beginEv+0xb0>
        this->_neutralVoltage = 1500.0;  // new EEPROM, write typical voltage
     22c:	80 e0       	ldi	r24, 0x00	; 0
     22e:	90 e8       	ldi	r25, 0x80	; 128
     230:	ab eb       	ldi	r26, 0xBB	; 187
     232:	b4 e4       	ldi	r27, 0x44	; 68
     234:	88 87       	std	Y+8, r24	; 0x08
     236:	99 87       	std	Y+9, r25	; 0x09
     238:	aa 87       	std	Y+10, r26	; 0x0a
     23a:	bb 87       	std	Y+11, r27	; 0x0b
        EEPROM_write(PHVALUEADDR, this->_neutralVoltage);
     23c:	00 e0       	ldi	r16, 0x00	; 0
     23e:	10 e0       	ldi	r17, 0x00	; 0
     240:	f7 01       	movw	r30, r14
     242:	61 91       	ld	r22, Z+
     244:	7f 01       	movw	r14, r30
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
     246:	c8 01       	movw	r24, r16
     248:	0e 94 3a 21 	call	0x4274	; 0x4274 <eeprom_write_byte>
     24c:	0f 5f       	subi	r16, 0xFF	; 255
     24e:	1f 4f       	sbci	r17, 0xFF	; 255
     250:	04 30       	cpi	r16, 0x04	; 4
     252:	11 05       	cpc	r17, r1
     254:	a9 f7       	brne	.-22     	; 0x240 <_ZN10DFRobot_PH5beginEv+0x9a>
    }
    EEPROM_read(PHVALUEADDR+4, this->_acidVoltage);//load the acid (pH = 4.0) voltage of the pH board from the EEPROM
     256:	7e 01       	movw	r14, r28
     258:	f4 e0       	ldi	r31, 0x04	; 4
     25a:	ef 0e       	add	r14, r31
     25c:	f1 1c       	adc	r15, r1
     25e:	67 01       	movw	r12, r14
     260:	04 e0       	ldi	r16, 0x04	; 4
     262:	10 e0       	ldi	r17, 0x00	; 0
     264:	c8 01       	movw	r24, r16
     266:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     26a:	f6 01       	movw	r30, r12
     26c:	81 93       	st	Z+, r24
     26e:	6f 01       	movw	r12, r30
     270:	0f 5f       	subi	r16, 0xFF	; 255
     272:	1f 4f       	sbci	r17, 0xFF	; 255
     274:	08 30       	cpi	r16, 0x08	; 8
     276:	11 05       	cpc	r17, r1
     278:	a9 f7       	brne	.-22     	; 0x264 <_ZN10DFRobot_PH5beginEv+0xbe>
    Serial.print("_acidVoltage:");
     27a:	67 e3       	ldi	r22, 0x37	; 55
     27c:	71 e0       	ldi	r23, 0x01	; 1
     27e:	81 e7       	ldi	r24, 0x71	; 113
     280:	94 e0       	ldi	r25, 0x04	; 4
     282:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <_ZN5Print5printEPKc>
    Serial.println(this->_acidVoltage);
     286:	4c 81       	ldd	r20, Y+4	; 0x04
     288:	5d 81       	ldd	r21, Y+5	; 0x05
     28a:	6e 81       	ldd	r22, Y+6	; 0x06
     28c:	7f 81       	ldd	r23, Y+7	; 0x07
     28e:	22 e0       	ldi	r18, 0x02	; 2
     290:	30 e0       	ldi	r19, 0x00	; 0
     292:	81 e7       	ldi	r24, 0x71	; 113
     294:	94 e0       	ldi	r25, 0x04	; 4
     296:	0e 94 c7 10 	call	0x218e	; 0x218e <_ZN5Print7printlnEdi>
    if(EEPROM.read(PHVALUEADDR+4)==0xFF && EEPROM.read(PHVALUEADDR+5)==0xFF && EEPROM.read(PHVALUEADDR+6)==0xFF && EEPROM.read(PHVALUEADDR+7)==0xFF){
     29a:	84 e0       	ldi	r24, 0x04	; 4
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     2a2:	8f 3f       	cpi	r24, 0xFF	; 255
     2a4:	31 f5       	brne	.+76     	; 0x2f2 <_ZN10DFRobot_PH5beginEv+0x14c>
     2a6:	85 e0       	ldi	r24, 0x05	; 5
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     2ae:	8f 3f       	cpi	r24, 0xFF	; 255
     2b0:	01 f5       	brne	.+64     	; 0x2f2 <_ZN10DFRobot_PH5beginEv+0x14c>
     2b2:	86 e0       	ldi	r24, 0x06	; 6
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     2ba:	8f 3f       	cpi	r24, 0xFF	; 255
     2bc:	d1 f4       	brne	.+52     	; 0x2f2 <_ZN10DFRobot_PH5beginEv+0x14c>
     2be:	87 e0       	ldi	r24, 0x07	; 7
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	0e 94 aa 00 	call	0x154	; 0x154 <_ZN11EEPROMClass4readEi.isra.0>
     2c6:	8f 3f       	cpi	r24, 0xFF	; 255
     2c8:	a1 f4       	brne	.+40     	; 0x2f2 <_ZN10DFRobot_PH5beginEv+0x14c>
        this->_acidVoltage = 2032.44;  // new EEPROM, write typical voltage
     2ca:	84 e1       	ldi	r24, 0x14	; 20
     2cc:	9e e0       	ldi	r25, 0x0E	; 14
     2ce:	ae ef       	ldi	r26, 0xFE	; 254
     2d0:	b4 e4       	ldi	r27, 0x44	; 68
     2d2:	8c 83       	std	Y+4, r24	; 0x04
     2d4:	9d 83       	std	Y+5, r25	; 0x05
     2d6:	ae 83       	std	Y+6, r26	; 0x06
     2d8:	bf 83       	std	Y+7, r27	; 0x07
     2da:	c4 e0       	ldi	r28, 0x04	; 4
     2dc:	d0 e0       	ldi	r29, 0x00	; 0
        EEPROM_write(PHVALUEADDR+4, this->_acidVoltage);
     2de:	f7 01       	movw	r30, r14
     2e0:	61 91       	ld	r22, Z+
     2e2:	7f 01       	movw	r14, r30
     2e4:	ce 01       	movw	r24, r28
     2e6:	0e 94 3a 21 	call	0x4274	; 0x4274 <eeprom_write_byte>
     2ea:	21 96       	adiw	r28, 0x01	; 1
     2ec:	c8 30       	cpi	r28, 0x08	; 8
     2ee:	d1 05       	cpc	r29, r1
     2f0:	b1 f7       	brne	.-20     	; 0x2de <_ZN10DFRobot_PH5beginEv+0x138>
    }
}
     2f2:	df 91       	pop	r29
     2f4:	cf 91       	pop	r28
     2f6:	1f 91       	pop	r17
     2f8:	0f 91       	pop	r16
     2fa:	ff 90       	pop	r15
     2fc:	ef 90       	pop	r14
     2fe:	df 90       	pop	r13
     300:	cf 90       	pop	r12
     302:	08 95       	ret

00000304 <_ZN5Print5writeEPKc>:
void TaskColorSensor(void *pvParameters)
{
	(void) pvParameters;
  
	TickType_t xLastWakeTime = xTaskGetTickCount();
	for (;;) // A Task shall never return or exit.
     304:	61 15       	cp	r22, r1
     306:	71 05       	cpc	r23, r1
     308:	79 f0       	breq	.+30     	; 0x328 <_ZN5Print5writeEPKc+0x24>
     30a:	fb 01       	movw	r30, r22
     30c:	01 90       	ld	r0, Z+
     30e:	00 20       	and	r0, r0
     310:	e9 f7       	brne	.-6      	; 0x30c <_ZN5Print5writeEPKc+0x8>
     312:	31 97       	sbiw	r30, 0x01	; 1
     314:	af 01       	movw	r20, r30
     316:	46 1b       	sub	r20, r22
     318:	57 0b       	sbc	r21, r23
     31a:	dc 01       	movw	r26, r24
     31c:	ed 91       	ld	r30, X+
     31e:	fc 91       	ld	r31, X
     320:	02 80       	ldd	r0, Z+2	; 0x02
     322:	f3 81       	ldd	r31, Z+3	; 0x03
     324:	e0 2d       	mov	r30, r0
     326:	09 94       	ijmp
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	08 95       	ret

0000032e <_Z11measureTempv>:
     32e:	cf 92       	push	r12
     330:	df 92       	push	r13
     332:	ff 92       	push	r15
     334:	0f 93       	push	r16
     336:	1f 93       	push	r17
     338:	cf 93       	push	r28
     33a:	df 93       	push	r29
     33c:	cd b7       	in	r28, 0x3d	; 61
     33e:	de b7       	in	r29, 0x3e	; 62
     340:	64 97       	sbiw	r28, 0x14	; 20
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	f8 94       	cli
     346:	de bf       	out	0x3e, r29	; 62
     348:	0f be       	out	0x3f, r0	; 63
     34a:	cd bf       	out	0x3d, r28	; 61
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	94 e0       	ldi	r25, 0x04	; 4
     350:	0e 94 c2 06 	call	0xd84	; 0xd84 <_ZN7OneWire12reset_searchEv>
     354:	6a ef       	ldi	r22, 0xFA	; 250
     356:	70 e0       	ldi	r23, 0x00	; 0
     358:	80 e0       	ldi	r24, 0x00	; 0
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	0e 94 b7 11 	call	0x236e	; 0x236e <delay>
     360:	41 e0       	ldi	r20, 0x01	; 1
     362:	be 01       	movw	r22, r28
     364:	63 5f       	subi	r22, 0xF3	; 243
     366:	7f 4f       	sbci	r23, 0xFF	; 255
     368:	80 e0       	ldi	r24, 0x00	; 0
     36a:	94 e0       	ldi	r25, 0x04	; 4
     36c:	0e 94 f1 06 	call	0xde2	; 0xde2 <_ZN7OneWire6searchEPhb>
     370:	67 e0       	ldi	r22, 0x07	; 7
     372:	ce 01       	movw	r24, r28
     374:	0d 96       	adiw	r24, 0x0d	; 13
     376:	0e 94 78 07 	call	0xef0	; 0xef0 <_ZN7OneWire4crc8EPKhh>
     37a:	9c 89       	ldd	r25, Y+20	; 0x14
     37c:	89 17       	cp	r24, r25
     37e:	19 f0       	breq	.+6      	; 0x386 <_Z11measureTempv+0x58>
     380:	6a e5       	ldi	r22, 0x5A	; 90
     382:	71 e0       	ldi	r23, 0x01	; 1
     384:	09 c0       	rjmp	.+18     	; 0x398 <_Z11measureTempv+0x6a>
     386:	8d 85       	ldd	r24, Y+13	; 0x0d
     388:	82 32       	cpi	r24, 0x22	; 34
     38a:	91 f0       	breq	.+36     	; 0x3b0 <_Z11measureTempv+0x82>
     38c:	88 32       	cpi	r24, 0x28	; 40
     38e:	81 f0       	breq	.+32     	; 0x3b0 <_Z11measureTempv+0x82>
     390:	80 31       	cpi	r24, 0x10	; 16
     392:	59 f0       	breq	.+22     	; 0x3aa <_Z11measureTempv+0x7c>
     394:	6c e6       	ldi	r22, 0x6C	; 108
     396:	71 e0       	ldi	r23, 0x01	; 1
     398:	81 e7       	ldi	r24, 0x71	; 113
     39a:	94 e0       	ldi	r25, 0x04	; 4
     39c:	0e 94 2d 0f 	call	0x1e5a	; 0x1e5a <_ZN5Print7printlnEPKc>
     3a0:	60 e0       	ldi	r22, 0x00	; 0
     3a2:	70 e0       	ldi	r23, 0x00	; 0
     3a4:	80 e8       	ldi	r24, 0x80	; 128
     3a6:	9f eb       	ldi	r25, 0xBF	; 191
     3a8:	6a c0       	rjmp	.+212    	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     3aa:	ff 24       	eor	r15, r15
     3ac:	f3 94       	inc	r15
     3ae:	01 c0       	rjmp	.+2      	; 0x3b2 <_Z11measureTempv+0x84>
     3b0:	f1 2c       	mov	r15, r1
     3b2:	80 e0       	ldi	r24, 0x00	; 0
     3b4:	94 e0       	ldi	r25, 0x04	; 4
     3b6:	0e 94 b6 05 	call	0xb6c	; 0xb6c <_ZN7OneWire5resetEv>
     3ba:	be 01       	movw	r22, r28
     3bc:	63 5f       	subi	r22, 0xF3	; 243
     3be:	7f 4f       	sbci	r23, 0xFF	; 255
     3c0:	80 e0       	ldi	r24, 0x00	; 0
     3c2:	94 e0       	ldi	r25, 0x04	; 4
     3c4:	0e 94 a3 06 	call	0xd46	; 0xd46 <_ZN7OneWire6selectEPKh>
     3c8:	41 e0       	ldi	r20, 0x01	; 1
     3ca:	64 e4       	ldi	r22, 0x44	; 68
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	94 e0       	ldi	r25, 0x04	; 4
     3d0:	0e 94 53 06 	call	0xca6	; 0xca6 <_ZN7OneWire5writeEhh>
     3d4:	68 ee       	ldi	r22, 0xE8	; 232
     3d6:	73 e0       	ldi	r23, 0x03	; 3
     3d8:	80 e0       	ldi	r24, 0x00	; 0
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	0e 94 b7 11 	call	0x236e	; 0x236e <delay>
     3e0:	80 e0       	ldi	r24, 0x00	; 0
     3e2:	94 e0       	ldi	r25, 0x04	; 4
     3e4:	0e 94 b6 05 	call	0xb6c	; 0xb6c <_ZN7OneWire5resetEv>
     3e8:	be 01       	movw	r22, r28
     3ea:	63 5f       	subi	r22, 0xF3	; 243
     3ec:	7f 4f       	sbci	r23, 0xFF	; 255
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	94 e0       	ldi	r25, 0x04	; 4
     3f2:	0e 94 a3 06 	call	0xd46	; 0xd46 <_ZN7OneWire6selectEPKh>
     3f6:	40 e0       	ldi	r20, 0x00	; 0
     3f8:	6e eb       	ldi	r22, 0xBE	; 190
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	94 e0       	ldi	r25, 0x04	; 4
     3fe:	0e 94 53 06 	call	0xca6	; 0xca6 <_ZN7OneWire5writeEhh>
     402:	8e 01       	movw	r16, r28
     404:	0f 5f       	subi	r16, 0xFF	; 255
     406:	1f 4f       	sbci	r17, 0xFF	; 255
     408:	6e 01       	movw	r12, r28
     40a:	8a e0       	ldi	r24, 0x0A	; 10
     40c:	c8 0e       	add	r12, r24
     40e:	d1 1c       	adc	r13, r1
     410:	80 e0       	ldi	r24, 0x00	; 0
     412:	94 e0       	ldi	r25, 0x04	; 4
     414:	0e 94 87 06 	call	0xd0e	; 0xd0e <_ZN7OneWire4readEv>
     418:	f8 01       	movw	r30, r16
     41a:	81 93       	st	Z+, r24
     41c:	8f 01       	movw	r16, r30
     41e:	ec 15       	cp	r30, r12
     420:	fd 05       	cpc	r31, r13
     422:	b1 f7       	brne	.-20     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     424:	69 81       	ldd	r22, Y+1	; 0x01
     426:	7a 81       	ldd	r23, Y+2	; 0x02
     428:	ff 20       	and	r15, r15
     42a:	89 f0       	breq	.+34     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     42c:	83 e0       	ldi	r24, 0x03	; 3
     42e:	66 0f       	add	r22, r22
     430:	77 1f       	adc	r23, r23
     432:	8a 95       	dec	r24
     434:	e1 f7       	brne	.-8      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     436:	88 85       	ldd	r24, Y+8	; 0x08
     438:	80 31       	cpi	r24, 0x10	; 16
     43a:	a9 f4       	brne	.+42     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     43c:	2f 81       	ldd	r18, Y+7	; 0x07
     43e:	8c e0       	ldi	r24, 0x0C	; 12
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	82 1b       	sub	r24, r18
     444:	91 09       	sbc	r25, r1
     446:	60 7f       	andi	r22, 0xF0	; 240
     448:	68 0f       	add	r22, r24
     44a:	79 1f       	adc	r23, r25
     44c:	0c c0       	rjmp	.+24     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     44e:	8d 81       	ldd	r24, Y+5	; 0x05
     450:	80 76       	andi	r24, 0x60	; 96
     452:	11 f4       	brne	.+4      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     454:	68 7f       	andi	r22, 0xF8	; 248
     456:	07 c0       	rjmp	.+14     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     458:	80 32       	cpi	r24, 0x20	; 32
     45a:	11 f4       	brne	.+4      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     45c:	6c 7f       	andi	r22, 0xFC	; 252
     45e:	03 c0       	rjmp	.+6      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     460:	80 34       	cpi	r24, 0x40	; 64
     462:	09 f4       	brne	.+2      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     464:	6e 7f       	andi	r22, 0xFE	; 254
     466:	07 2e       	mov	r0, r23
     468:	00 0c       	add	r0, r0
     46a:	88 0b       	sbc	r24, r24
     46c:	99 0b       	sbc	r25, r25
     46e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__floatsisf>
     472:	20 e0       	ldi	r18, 0x00	; 0
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	40 e8       	ldi	r20, 0x80	; 128
     478:	5d e3       	ldi	r21, 0x3D	; 61
     47a:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__mulsf3>
     47e:	64 96       	adiw	r28, 0x14	; 20
     480:	0f b6       	in	r0, 0x3f	; 63
     482:	f8 94       	cli
     484:	de bf       	out	0x3e, r29	; 62
     486:	0f be       	out	0x3f, r0	; 63
     488:	cd bf       	out	0x3d, r28	; 61
     48a:	df 91       	pop	r29
     48c:	cf 91       	pop	r28
     48e:	1f 91       	pop	r17
     490:	0f 91       	pop	r16
     492:	ff 90       	pop	r15
     494:	df 90       	pop	r13
     496:	cf 90       	pop	r12
     498:	08 95       	ret

0000049a <_Z9addColorsv>:
     49a:	0f 93       	push	r16
     49c:	1f 93       	push	r17
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	ce ec       	ldi	r28, 0xCE	; 206
     4a4:	d3 e0       	ldi	r29, 0x03	; 3
     4a6:	18 82       	st	Y, r1
     4a8:	19 82       	std	Y+1, r1	; 0x01
     4aa:	1a 82       	std	Y+2, r1	; 0x02
     4ac:	1b 82       	std	Y+3, r1	; 0x03
     4ae:	87 e3       	ldi	r24, 0x37	; 55
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	9d 83       	std	Y+5, r25	; 0x05
     4b4:	8c 83       	std	Y+4, r24	; 0x04
     4b6:	9f 83       	std	Y+7, r25	; 0x07
     4b8:	8e 83       	std	Y+6, r24	; 0x06
     4ba:	80 e5       	ldi	r24, 0x50	; 80
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	99 87       	std	Y+9, r25	; 0x09
     4c0:	88 87       	std	Y+8, r24	; 0x08
     4c2:	a8 e8       	ldi	r26, 0x88	; 136
     4c4:	b3 e0       	ldi	r27, 0x03	; 3
     4c6:	1d 92       	st	X+, r1
     4c8:	1d 92       	st	X+, r1
     4ca:	1d 92       	st	X+, r1
     4cc:	1c 92       	st	X, r1
     4ce:	13 97       	sbiw	r26, 0x03	; 3
     4d0:	81 e4       	ldi	r24, 0x41	; 65
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	15 96       	adiw	r26, 0x05	; 5
     4d6:	9c 93       	st	X, r25
     4d8:	8e 93       	st	-X, r24
     4da:	14 97       	sbiw	r26, 0x04	; 4
     4dc:	17 96       	adiw	r26, 0x07	; 7
     4de:	9c 93       	st	X, r25
     4e0:	8e 93       	st	-X, r24
     4e2:	16 97       	sbiw	r26, 0x06	; 6
     4e4:	8e e6       	ldi	r24, 0x6E	; 110
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	19 96       	adiw	r26, 0x09	; 9
     4ea:	9c 93       	st	X, r25
     4ec:	8e 93       	st	-X, r24
     4ee:	18 97       	sbiw	r26, 0x08	; 8
     4f0:	e2 e4       	ldi	r30, 0x42	; 66
     4f2:	f3 e0       	ldi	r31, 0x03	; 3
     4f4:	10 82       	st	Z, r1
     4f6:	11 82       	std	Z+1, r1	; 0x01
     4f8:	12 82       	std	Z+2, r1	; 0x02
     4fa:	13 82       	std	Z+3, r1	; 0x03
     4fc:	81 e3       	ldi	r24, 0x31	; 49
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	95 83       	std	Z+5, r25	; 0x05
     502:	84 83       	std	Z+4, r24	; 0x04
     504:	82 e3       	ldi	r24, 0x32	; 50
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	97 83       	std	Z+7, r25	; 0x07
     50a:	86 83       	std	Z+6, r24	; 0x06
     50c:	8a e5       	ldi	r24, 0x5A	; 90
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	91 87       	std	Z+9, r25	; 0x09
     512:	80 87       	std	Z+8, r24	; 0x08
     514:	40 e0       	ldi	r20, 0x00	; 0
     516:	50 e0       	ldi	r21, 0x00	; 0
     518:	60 e0       	ldi	r22, 0x00	; 0
     51a:	7f e3       	ldi	r23, 0x3F	; 63
     51c:	4a 87       	std	Y+10, r20	; 0x0a
     51e:	5b 87       	std	Y+11, r21	; 0x0b
     520:	6c 87       	std	Y+12, r22	; 0x0c
     522:	7d 87       	std	Y+13, r23	; 0x0d
     524:	1f 86       	std	Y+15, r1	; 0x0f
     526:	1e 86       	std	Y+14, r1	; 0x0e
     528:	19 8a       	std	Y+17, r1	; 0x11
     52a:	18 8a       	std	Y+16, r1	; 0x10
     52c:	1b 8a       	std	Y+19, r1	; 0x13
     52e:	1a 8a       	std	Y+18, r1	; 0x12
     530:	0a e9       	ldi	r16, 0x9A	; 154
     532:	19 e9       	ldi	r17, 0x99	; 153
     534:	29 e1       	ldi	r18, 0x19	; 25
     536:	3e e3       	ldi	r19, 0x3E	; 62
     538:	1a 96       	adiw	r26, 0x0a	; 10
     53a:	0d 93       	st	X+, r16
     53c:	1d 93       	st	X+, r17
     53e:	2d 93       	st	X+, r18
     540:	3c 93       	st	X, r19
     542:	1d 97       	sbiw	r26, 0x0d	; 13
     544:	1f 96       	adiw	r26, 0x0f	; 15
     546:	1c 92       	st	X, r1
     548:	1e 92       	st	-X, r1
     54a:	1e 97       	sbiw	r26, 0x0e	; 14
     54c:	51 96       	adiw	r26, 0x11	; 17
     54e:	1c 92       	st	X, r1
     550:	1e 92       	st	-X, r1
     552:	50 97       	sbiw	r26, 0x10	; 16
     554:	53 96       	adiw	r26, 0x13	; 19
     556:	1c 92       	st	X, r1
     558:	1e 92       	st	-X, r1
     55a:	52 97       	sbiw	r26, 0x12	; 18
     55c:	42 87       	std	Z+10, r20	; 0x0a
     55e:	53 87       	std	Z+11, r21	; 0x0b
     560:	64 87       	std	Z+12, r22	; 0x0c
     562:	75 87       	std	Z+13, r23	; 0x0d
     564:	17 86       	std	Z+15, r1	; 0x0f
     566:	16 86       	std	Z+14, r1	; 0x0e
     568:	11 8a       	std	Z+17, r1	; 0x11
     56a:	10 8a       	std	Z+16, r1	; 0x10
     56c:	13 8a       	std	Z+19, r1	; 0x13
     56e:	12 8a       	std	Z+18, r1	; 0x12
     570:	40 e0       	ldi	r20, 0x00	; 0
     572:	50 e0       	ldi	r21, 0x00	; 0
     574:	60 e8       	ldi	r22, 0x80	; 128
     576:	7f e3       	ldi	r23, 0x3F	; 63
     578:	4c 8b       	std	Y+20, r20	; 0x14
     57a:	5d 8b       	std	Y+21, r21	; 0x15
     57c:	6e 8b       	std	Y+22, r22	; 0x16
     57e:	7f 8b       	std	Y+23, r23	; 0x17
     580:	89 e3       	ldi	r24, 0x39	; 57
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	99 8f       	std	Y+25, r25	; 0x19
     586:	88 8f       	std	Y+24, r24	; 0x18
     588:	8a e3       	ldi	r24, 0x3A	; 58
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	9b 8f       	std	Y+27, r25	; 0x1b
     58e:	8a 8f       	std	Y+26, r24	; 0x1a
     590:	85 e5       	ldi	r24, 0x55	; 85
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	9d 8f       	std	Y+29, r25	; 0x1d
     596:	8c 8f       	std	Y+28, r24	; 0x1c
     598:	0a e9       	ldi	r16, 0x9A	; 154
     59a:	19 e9       	ldi	r17, 0x99	; 153
     59c:	29 e9       	ldi	r18, 0x99	; 153
     59e:	3e e3       	ldi	r19, 0x3E	; 62
     5a0:	54 96       	adiw	r26, 0x14	; 20
     5a2:	0d 93       	st	X+, r16
     5a4:	1d 93       	st	X+, r17
     5a6:	2d 93       	st	X+, r18
     5a8:	3c 93       	st	X, r19
     5aa:	57 97       	sbiw	r26, 0x17	; 23
     5ac:	59 96       	adiw	r26, 0x19	; 25
     5ae:	1c 92       	st	X, r1
     5b0:	1e 92       	st	-X, r1
     5b2:	58 97       	sbiw	r26, 0x18	; 24
     5b4:	5b 96       	adiw	r26, 0x1b	; 27
     5b6:	1c 92       	st	X, r1
     5b8:	1e 92       	st	-X, r1
     5ba:	5a 97       	sbiw	r26, 0x1a	; 26
     5bc:	5d 96       	adiw	r26, 0x1d	; 29
     5be:	1c 92       	st	X, r1
     5c0:	1e 92       	st	-X, r1
     5c2:	5c 97       	sbiw	r26, 0x1c	; 28
     5c4:	00 e0       	ldi	r16, 0x00	; 0
     5c6:	10 e0       	ldi	r17, 0x00	; 0
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	30 e4       	ldi	r19, 0x40	; 64
     5cc:	04 8b       	std	Z+20, r16	; 0x14
     5ce:	15 8b       	std	Z+21, r17	; 0x15
     5d0:	26 8b       	std	Z+22, r18	; 0x16
     5d2:	37 8b       	std	Z+23, r19	; 0x17
     5d4:	11 8e       	std	Z+25, r1	; 0x19
     5d6:	10 8e       	std	Z+24, r1	; 0x18
     5d8:	13 8e       	std	Z+27, r1	; 0x1b
     5da:	12 8e       	std	Z+26, r1	; 0x1a
     5dc:	15 8e       	std	Z+29, r1	; 0x1d
     5de:	14 8e       	std	Z+28, r1	; 0x1c
     5e0:	00 e0       	ldi	r16, 0x00	; 0
     5e2:	10 e0       	ldi	r17, 0x00	; 0
     5e4:	20 e4       	ldi	r18, 0x40	; 64
     5e6:	30 e4       	ldi	r19, 0x40	; 64
     5e8:	0e 8f       	std	Y+30, r16	; 0x1e
     5ea:	1f 8f       	std	Y+31, r17	; 0x1f
     5ec:	28 a3       	std	Y+32, r18	; 0x20
     5ee:	39 a3       	std	Y+33, r19	; 0x21
     5f0:	1b a2       	std	Y+35, r1	; 0x23
     5f2:	1a a2       	std	Y+34, r1	; 0x22
     5f4:	1d a2       	std	Y+37, r1	; 0x25
     5f6:	1c a2       	std	Y+36, r1	; 0x24
     5f8:	1f a2       	std	Y+39, r1	; 0x27
     5fa:	1e a2       	std	Y+38, r1	; 0x26
     5fc:	5e 96       	adiw	r26, 0x1e	; 30
     5fe:	4d 93       	st	X+, r20
     600:	5d 93       	st	X+, r21
     602:	6d 93       	st	X+, r22
     604:	7c 93       	st	X, r23
     606:	91 97       	sbiw	r26, 0x21	; 33
     608:	93 96       	adiw	r26, 0x23	; 35
     60a:	1c 92       	st	X, r1
     60c:	1e 92       	st	-X, r1
     60e:	92 97       	sbiw	r26, 0x22	; 34
     610:	95 96       	adiw	r26, 0x25	; 37
     612:	1c 92       	st	X, r1
     614:	1e 92       	st	-X, r1
     616:	94 97       	sbiw	r26, 0x24	; 36
     618:	97 96       	adiw	r26, 0x27	; 39
     61a:	1c 92       	st	X, r1
     61c:	1e 92       	st	-X, r1
     61e:	96 97       	sbiw	r26, 0x26	; 38
     620:	40 e0       	ldi	r20, 0x00	; 0
     622:	50 e0       	ldi	r21, 0x00	; 0
     624:	60 ea       	ldi	r22, 0xA0	; 160
     626:	70 e4       	ldi	r23, 0x40	; 64
     628:	46 8f       	std	Z+30, r20	; 0x1e
     62a:	57 8f       	std	Z+31, r21	; 0x1f
     62c:	60 a3       	std	Z+32, r22	; 0x20
     62e:	71 a3       	std	Z+33, r23	; 0x21
     630:	13 a2       	std	Z+35, r1	; 0x23
     632:	12 a2       	std	Z+34, r1	; 0x22
     634:	15 a2       	std	Z+37, r1	; 0x25
     636:	14 a2       	std	Z+36, r1	; 0x24
     638:	17 a2       	std	Z+39, r1	; 0x27
     63a:	16 a2       	std	Z+38, r1	; 0x26
     63c:	40 e0       	ldi	r20, 0x00	; 0
     63e:	50 e0       	ldi	r21, 0x00	; 0
     640:	60 ec       	ldi	r22, 0xC0	; 192
     642:	70 e4       	ldi	r23, 0x40	; 64
     644:	48 a7       	std	Y+40, r20	; 0x28
     646:	59 a7       	std	Y+41, r21	; 0x29
     648:	6a a7       	std	Y+42, r22	; 0x2a
     64a:	7b a7       	std	Y+43, r23	; 0x2b
     64c:	1d a6       	std	Y+45, r1	; 0x2d
     64e:	1c a6       	std	Y+44, r1	; 0x2c
     650:	1f a6       	std	Y+47, r1	; 0x2f
     652:	1e a6       	std	Y+46, r1	; 0x2e
     654:	19 aa       	std	Y+49, r1	; 0x31
     656:	18 aa       	std	Y+48, r1	; 0x30
     658:	40 e0       	ldi	r20, 0x00	; 0
     65a:	50 e0       	ldi	r21, 0x00	; 0
     65c:	60 ec       	ldi	r22, 0xC0	; 192
     65e:	7f e3       	ldi	r23, 0x3F	; 63
     660:	98 96       	adiw	r26, 0x28	; 40
     662:	4d 93       	st	X+, r20
     664:	5d 93       	st	X+, r21
     666:	6d 93       	st	X+, r22
     668:	7c 93       	st	X, r23
     66a:	9b 97       	sbiw	r26, 0x2b	; 43
     66c:	9d 96       	adiw	r26, 0x2d	; 45
     66e:	1c 92       	st	X, r1
     670:	1e 92       	st	-X, r1
     672:	9c 97       	sbiw	r26, 0x2c	; 44
     674:	9f 96       	adiw	r26, 0x2f	; 47
     676:	1c 92       	st	X, r1
     678:	1e 92       	st	-X, r1
     67a:	9e 97       	sbiw	r26, 0x2e	; 46
     67c:	d1 96       	adiw	r26, 0x31	; 49
     67e:	1c 92       	st	X, r1
     680:	1e 92       	st	-X, r1
     682:	d0 97       	sbiw	r26, 0x30	; 48
     684:	40 e0       	ldi	r20, 0x00	; 0
     686:	50 e0       	ldi	r21, 0x00	; 0
     688:	60 e2       	ldi	r22, 0x20	; 32
     68a:	71 e4       	ldi	r23, 0x41	; 65
     68c:	40 a7       	std	Z+40, r20	; 0x28
     68e:	51 a7       	std	Z+41, r21	; 0x29
     690:	62 a7       	std	Z+42, r22	; 0x2a
     692:	73 a7       	std	Z+43, r23	; 0x2b
     694:	15 a6       	std	Z+45, r1	; 0x2d
     696:	14 a6       	std	Z+44, r1	; 0x2c
     698:	17 a6       	std	Z+47, r1	; 0x2f
     69a:	16 a6       	std	Z+46, r1	; 0x2e
     69c:	11 aa       	std	Z+49, r1	; 0x31
     69e:	10 aa       	std	Z+48, r1	; 0x30
     6a0:	d2 96       	adiw	r26, 0x32	; 50
     6a2:	0d 93       	st	X+, r16
     6a4:	1d 93       	st	X+, r17
     6a6:	2d 93       	st	X+, r18
     6a8:	3c 93       	st	X, r19
     6aa:	d5 97       	sbiw	r26, 0x35	; 53
     6ac:	d7 96       	adiw	r26, 0x37	; 55
     6ae:	1c 92       	st	X, r1
     6b0:	1e 92       	st	-X, r1
     6b2:	d6 97       	sbiw	r26, 0x36	; 54
     6b4:	d9 96       	adiw	r26, 0x39	; 57
     6b6:	1c 92       	st	X, r1
     6b8:	1e 92       	st	-X, r1
     6ba:	d8 97       	sbiw	r26, 0x38	; 56
     6bc:	db 96       	adiw	r26, 0x3b	; 59
     6be:	1c 92       	st	X, r1
     6c0:	1e 92       	st	-X, r1
     6c2:	da 97       	sbiw	r26, 0x3a	; 58
     6c4:	00 e0       	ldi	r16, 0x00	; 0
     6c6:	10 e0       	ldi	r17, 0x00	; 0
     6c8:	20 ea       	ldi	r18, 0xA0	; 160
     6ca:	31 e4       	ldi	r19, 0x41	; 65
     6cc:	02 ab       	std	Z+50, r16	; 0x32
     6ce:	13 ab       	std	Z+51, r17	; 0x33
     6d0:	24 ab       	std	Z+52, r18	; 0x34
     6d2:	35 ab       	std	Z+53, r19	; 0x35
     6d4:	17 aa       	std	Z+55, r1	; 0x37
     6d6:	16 aa       	std	Z+54, r1	; 0x36
     6d8:	11 ae       	std	Z+57, r1	; 0x39
     6da:	10 ae       	std	Z+56, r1	; 0x38
     6dc:	13 ae       	std	Z+59, r1	; 0x3b
     6de:	12 ae       	std	Z+58, r1	; 0x3a
     6e0:	dc 96       	adiw	r26, 0x3c	; 60
     6e2:	4d 93       	st	X+, r20
     6e4:	5d 93       	st	X+, r21
     6e6:	6d 93       	st	X+, r22
     6e8:	7c 93       	st	X, r23
     6ea:	df 97       	sbiw	r26, 0x3f	; 63
     6ec:	10 92 c9 03 	sts	0x03C9, r1	; 0x8003c9 <Nitrite+0x41>
     6f0:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <Nitrite+0x40>
     6f4:	10 92 cb 03 	sts	0x03CB, r1	; 0x8003cb <Nitrite+0x43>
     6f8:	10 92 ca 03 	sts	0x03CA, r1	; 0x8003ca <Nitrite+0x42>
     6fc:	10 92 cd 03 	sts	0x03CD, r1	; 0x8003cd <Nitrite+0x45>
     700:	10 92 cc 03 	sts	0x03CC, r1	; 0x8003cc <Nitrite+0x44>
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	a8 e4       	ldi	r26, 0x48	; 72
     70a:	b2 e4       	ldi	r27, 0x42	; 66
     70c:	84 af       	std	Z+60, r24	; 0x3c
     70e:	95 af       	std	Z+61, r25	; 0x3d
     710:	a6 af       	std	Z+62, r26	; 0x3e
     712:	b7 af       	std	Z+63, r27	; 0x3f
     714:	10 92 83 03 	sts	0x0383, r1	; 0x800383 <Nitrate+0x41>
     718:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <Nitrate+0x40>
     71c:	10 92 85 03 	sts	0x0385, r1	; 0x800385 <Nitrate+0x43>
     720:	10 92 84 03 	sts	0x0384, r1	; 0x800384 <Nitrate+0x42>
     724:	10 92 87 03 	sts	0x0387, r1	; 0x800387 <Nitrate+0x45>
     728:	10 92 86 03 	sts	0x0386, r1	; 0x800386 <Nitrate+0x44>
     72c:	df 91       	pop	r29
     72e:	cf 91       	pop	r28
     730:	1f 91       	pop	r17
     732:	0f 91       	pop	r16
     734:	08 95       	ret

00000736 <_Z6setLED8LEDColor>:
     736:	cf 93       	push	r28
     738:	df 93       	push	r29
     73a:	00 d0       	rcall	.+0      	; 0x73c <_Z6setLED8LEDColor+0x6>
     73c:	00 d0       	rcall	.+0      	; 0x73e <_Z6setLED8LEDColor+0x8>
     73e:	00 d0       	rcall	.+0      	; 0x740 <_Z6setLED8LEDColor+0xa>
     740:	cd b7       	in	r28, 0x3d	; 61
     742:	de b7       	in	r29, 0x3e	; 62
     744:	49 83       	std	Y+1, r20	; 0x01
     746:	5a 83       	std	Y+2, r21	; 0x02
     748:	6b 83       	std	Y+3, r22	; 0x03
     74a:	7c 83       	std	Y+4, r23	; 0x04
     74c:	8d 83       	std	Y+5, r24	; 0x05
     74e:	9e 83       	std	Y+6, r25	; 0x06
     750:	69 81       	ldd	r22, Y+1	; 0x01
     752:	7a 81       	ldd	r23, Y+2	; 0x02
     754:	8f e0       	ldi	r24, 0x0F	; 15
     756:	0e 94 56 12 	call	0x24ac	; 0x24ac <analogWrite>
     75a:	6b 81       	ldd	r22, Y+3	; 0x03
     75c:	7c 81       	ldd	r23, Y+4	; 0x04
     75e:	80 e1       	ldi	r24, 0x10	; 16
     760:	0e 94 56 12 	call	0x24ac	; 0x24ac <analogWrite>
     764:	6d 81       	ldd	r22, Y+5	; 0x05
     766:	7e 81       	ldd	r23, Y+6	; 0x06
     768:	81 e1       	ldi	r24, 0x11	; 17
     76a:	26 96       	adiw	r28, 0x06	; 6
     76c:	0f b6       	in	r0, 0x3f	; 63
     76e:	f8 94       	cli
     770:	de bf       	out	0x3e, r29	; 62
     772:	0f be       	out	0x3f, r0	; 63
     774:	cd bf       	out	0x3d, r28	; 61
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	0c 94 56 12 	jmp	0x24ac	; 0x24ac <analogWrite>

0000077e <_Z20TaskPHandTemperaturePv>:
     77e:	cf 93       	push	r28
     780:	df 93       	push	r29
     782:	00 d0       	rcall	.+0      	; 0x784 <_Z20TaskPHandTemperaturePv+0x6>
     784:	cd b7       	in	r28, 0x3d	; 61
     786:	de b7       	in	r29, 0x3e	; 62
     788:	0e 94 2a 18 	call	0x3054	; 0x3054 <xTaskGetTickCount>
     78c:	9a 83       	std	Y+2, r25	; 0x02
     78e:	89 83       	std	Y+1, r24	; 0x01
     790:	40 91 0d 01 	lds	r20, 0x010D	; 0x80010d <Green>
     794:	50 91 0e 01 	lds	r21, 0x010E	; 0x80010e <Green+0x1>
     798:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <Green+0x2>
     79c:	70 91 10 01 	lds	r23, 0x0110	; 0x800110 <Green+0x3>
     7a0:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <Green+0x4>
     7a4:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <Green+0x5>
     7a8:	0e 94 9b 03 	call	0x736	; 0x736 <_Z6setLED8LEDColor>
     7ac:	60 ed       	ldi	r22, 0xD0	; 208
     7ae:	71 e0       	ldi	r23, 0x01	; 1
     7b0:	8b ed       	ldi	r24, 0xDB	; 219
     7b2:	92 e0       	ldi	r25, 0x02	; 2
     7b4:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <_ZN5Print5printEPKc>
     7b8:	0e 94 94 07 	call	0xf28	; 0xf28 <_Z6calcPHv>
     7bc:	20 e0       	ldi	r18, 0x00	; 0
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	48 ec       	ldi	r20, 0xC8	; 200
     7c2:	52 e4       	ldi	r21, 0x42	; 66
     7c4:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__mulsf3>
     7c8:	0e 94 22 0c 	call	0x1844	; 0x1844 <__fixsfsi>
     7cc:	60 93 09 03 	sts	0x0309, r22	; 0x800309 <phValue>
     7d0:	70 93 0a 03 	sts	0x030A, r23	; 0x80030a <phValue+0x1>
     7d4:	80 93 0b 03 	sts	0x030B, r24	; 0x80030b <phValue+0x2>
     7d8:	90 93 0c 03 	sts	0x030C, r25	; 0x80030c <phValue+0x3>
     7dc:	63 ed       	ldi	r22, 0xD3	; 211
     7de:	71 e0       	ldi	r23, 0x01	; 1
     7e0:	8b ed       	ldi	r24, 0xDB	; 219
     7e2:	92 e0       	ldi	r25, 0x02	; 2
     7e4:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <_ZN5Print5printEPKc>
     7e8:	40 91 09 03 	lds	r20, 0x0309	; 0x800309 <phValue>
     7ec:	50 91 0a 03 	lds	r21, 0x030A	; 0x80030a <phValue+0x1>
     7f0:	60 91 0b 03 	lds	r22, 0x030B	; 0x80030b <phValue+0x2>
     7f4:	70 91 0c 03 	lds	r23, 0x030C	; 0x80030c <phValue+0x3>
     7f8:	2a e0       	ldi	r18, 0x0A	; 10
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	8b ed       	ldi	r24, 0xDB	; 219
     7fe:	92 e0       	ldi	r25, 0x02	; 2
     800:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <_ZN5Print5printEli>
     804:	6a ef       	ldi	r22, 0xFA	; 250
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	80 e0       	ldi	r24, 0x00	; 0
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	0e 94 b7 11 	call	0x236e	; 0x236e <delay>
     810:	40 91 0d 03 	lds	r20, 0x030D	; 0x80030d <Off>
     814:	50 91 0e 03 	lds	r21, 0x030E	; 0x80030e <Off+0x1>
     818:	60 91 0f 03 	lds	r22, 0x030F	; 0x80030f <Off+0x2>
     81c:	70 91 10 03 	lds	r23, 0x0310	; 0x800310 <Off+0x3>
     820:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <Off+0x4>
     824:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <Off+0x5>
     828:	0e 94 9b 03 	call	0x736	; 0x736 <_Z6setLED8LEDColor>
     82c:	40 91 13 01 	lds	r20, 0x0113	; 0x800113 <Red>
     830:	50 91 14 01 	lds	r21, 0x0114	; 0x800114 <Red+0x1>
     834:	60 91 15 01 	lds	r22, 0x0115	; 0x800115 <Red+0x2>
     838:	70 91 16 01 	lds	r23, 0x0116	; 0x800116 <Red+0x3>
     83c:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <Red+0x4>
     840:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <Red+0x5>
     844:	0e 94 9b 03 	call	0x736	; 0x736 <_Z6setLED8LEDColor>
     848:	0e 94 97 01 	call	0x32e	; 0x32e <_Z11measureTempv>
     84c:	20 e0       	ldi	r18, 0x00	; 0
     84e:	30 e0       	ldi	r19, 0x00	; 0
     850:	48 ec       	ldi	r20, 0xC8	; 200
     852:	52 e4       	ldi	r21, 0x42	; 66
     854:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__mulsf3>
     858:	0e 94 22 0c 	call	0x1844	; 0x1844 <__fixsfsi>
     85c:	70 93 08 03 	sts	0x0308, r23	; 0x800308 <tempValue+0x1>
     860:	60 93 07 03 	sts	0x0307, r22	; 0x800307 <tempValue>
     864:	6e ed       	ldi	r22, 0xDE	; 222
     866:	71 e0       	ldi	r23, 0x01	; 1
     868:	8b ed       	ldi	r24, 0xDB	; 219
     86a:	92 e0       	ldi	r25, 0x02	; 2
     86c:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
     870:	60 91 07 03 	lds	r22, 0x0307	; 0x800307 <tempValue>
     874:	70 91 08 03 	lds	r23, 0x0308	; 0x800308 <tempValue+0x1>
     878:	4a e0       	ldi	r20, 0x0A	; 10
     87a:	50 e0       	ldi	r21, 0x00	; 0
     87c:	8b ed       	ldi	r24, 0xDB	; 219
     87e:	92 e0       	ldi	r25, 0x02	; 2
     880:	0e 94 e3 0f 	call	0x1fc6	; 0x1fc6 <_ZN5Print5printEii>
     884:	64 e6       	ldi	r22, 0x64	; 100
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	0e 94 b7 11 	call	0x236e	; 0x236e <delay>
     890:	40 91 0d 03 	lds	r20, 0x030D	; 0x80030d <Off>
     894:	50 91 0e 03 	lds	r21, 0x030E	; 0x80030e <Off+0x1>
     898:	60 91 0f 03 	lds	r22, 0x030F	; 0x80030f <Off+0x2>
     89c:	70 91 10 03 	lds	r23, 0x0310	; 0x800310 <Off+0x3>
     8a0:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <Off+0x4>
     8a4:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <Off+0x5>
     8a8:	0e 94 9b 03 	call	0x736	; 0x736 <_Z6setLED8LEDColor>
     8ac:	6e e3       	ldi	r22, 0x3E	; 62
     8ae:	70 e0       	ldi	r23, 0x00	; 0
     8b0:	ce 01       	movw	r24, r28
     8b2:	01 96       	adiw	r24, 0x01	; 1
     8b4:	0e 94 4f 19 	call	0x329e	; 0x329e <vTaskDelayUntil>
     8b8:	6b cf       	rjmp	.-298    	; 0x790 <_Z20TaskPHandTemperaturePv+0x12>

000008ba <_Z8setupLEDv>:
     8ba:	61 e0       	ldi	r22, 0x01	; 1
     8bc:	8f e0       	ldi	r24, 0x0F	; 15
     8be:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
     8c2:	61 e0       	ldi	r22, 0x01	; 1
     8c4:	80 e1       	ldi	r24, 0x10	; 16
     8c6:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
     8ca:	61 e0       	ldi	r22, 0x01	; 1
     8cc:	81 e1       	ldi	r24, 0x11	; 17
     8ce:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
     8d2:	40 91 0d 03 	lds	r20, 0x030D	; 0x80030d <Off>
     8d6:	50 91 0e 03 	lds	r21, 0x030E	; 0x80030e <Off+0x1>
     8da:	60 91 0f 03 	lds	r22, 0x030F	; 0x80030f <Off+0x2>
     8de:	70 91 10 03 	lds	r23, 0x0310	; 0x800310 <Off+0x3>
     8e2:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <Off+0x4>
     8e6:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <Off+0x5>
     8ea:	0c 94 9b 03 	jmp	0x736	; 0x736 <_Z6setLED8LEDColor>

000008ee <setup>:
     8ee:	ef 92       	push	r14
     8f0:	ff 92       	push	r15
     8f2:	0f 93       	push	r16
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	52 ec       	ldi	r21, 0xC2	; 194
     8f8:	61 e0       	ldi	r22, 0x01	; 1
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	8b ed       	ldi	r24, 0xDB	; 219
     8fe:	92 e0       	ldi	r25, 0x02	; 2
     900:	0e 94 b0 0a 	call	0x1560	; 0x1560 <_ZN14SoftwareSerial5beginEl>
     904:	83 e1       	ldi	r24, 0x13	; 19
     906:	93 e0       	ldi	r25, 0x03	; 3
     908:	0e 94 a3 08 	call	0x1146	; 0x1146 <_ZN9MD_TCS2305beginEv>
     90c:	0e 94 4d 02 	call	0x49a	; 0x49a <_Z9addColorsv>
     910:	0e 94 5d 04 	call	0x8ba	; 0x8ba <_Z8setupLEDv>
     914:	61 ee       	ldi	r22, 0xE1	; 225
     916:	71 e0       	ldi	r23, 0x01	; 1
     918:	8b ed       	ldi	r24, 0xDB	; 219
     91a:	92 e0       	ldi	r25, 0x02	; 2
     91c:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <_ZN5Print5printEPKc>
     920:	40 91 0d 01 	lds	r20, 0x010D	; 0x80010d <Green>
     924:	50 91 0e 01 	lds	r21, 0x010E	; 0x80010e <Green+0x1>
     928:	60 91 0f 01 	lds	r22, 0x010F	; 0x80010f <Green+0x2>
     92c:	70 91 10 01 	lds	r23, 0x0110	; 0x800110 <Green+0x3>
     930:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <Green+0x4>
     934:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <Green+0x5>
     938:	0e 94 9b 03 	call	0x736	; 0x736 <_Z6setLED8LEDColor>
     93c:	0e 94 90 07 	call	0xf20	; 0xf20 <_Z6phInitv>
     940:	43 e0       	ldi	r20, 0x03	; 3
     942:	50 e0       	ldi	r21, 0x00	; 0
     944:	67 e0       	ldi	r22, 0x07	; 7
     946:	75 e0       	ldi	r23, 0x05	; 5
     948:	80 e0       	ldi	r24, 0x00	; 0
     94a:	0e 94 da 10 	call	0x21b4	; 0x21b4 <attachInterrupt>
     94e:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <xSerialSemaphoreColorSensor>
     952:	90 91 ff 02 	lds	r25, 0x02FF	; 0x8002ff <xSerialSemaphoreColorSensor+0x1>
     956:	89 2b       	or	r24, r25
     958:	91 f4       	brne	.+36     	; 0x97e <__stack+0x7f>
     95a:	43 e0       	ldi	r20, 0x03	; 3
     95c:	60 e0       	ldi	r22, 0x00	; 0
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	0e 94 3e 14 	call	0x287c	; 0x287c <xQueueGenericCreate>
     964:	90 93 ff 02 	sts	0x02FF, r25	; 0x8002ff <xSerialSemaphoreColorSensor+0x1>
     968:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <xSerialSemaphoreColorSensor>
     96c:	00 97       	sbiw	r24, 0x00	; 0
     96e:	39 f0       	breq	.+14     	; 0x97e <__stack+0x7f>
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	40 e0       	ldi	r20, 0x00	; 0
     974:	50 e0       	ldi	r21, 0x00	; 0
     976:	60 e0       	ldi	r22, 0x00	; 0
     978:	70 e0       	ldi	r23, 0x00	; 0
     97a:	0e 94 66 14 	call	0x28cc	; 0x28cc <xQueueGenericSend>
     97e:	8a ef       	ldi	r24, 0xFA	; 250
     980:	e8 2e       	mov	r14, r24
     982:	82 e0       	ldi	r24, 0x02	; 2
     984:	f8 2e       	mov	r15, r24
     986:	02 e0       	ldi	r16, 0x02	; 2
     988:	20 e0       	ldi	r18, 0x00	; 0
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	40 e8       	ldi	r20, 0x80	; 128
     98e:	50 e0       	ldi	r21, 0x00	; 0
     990:	60 ef       	ldi	r22, 0xF0	; 240
     992:	71 e0       	ldi	r23, 0x01	; 1
     994:	8f eb       	ldi	r24, 0xBF	; 191
     996:	93 e0       	ldi	r25, 0x03	; 3
     998:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <xTaskCreate>
     99c:	68 ee       	ldi	r22, 0xE8	; 232
     99e:	73 e0       	ldi	r23, 0x03	; 3
     9a0:	80 e0       	ldi	r24, 0x00	; 0
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	0e 94 b7 11 	call	0x236e	; 0x236e <delay>
     9a8:	40 91 0d 03 	lds	r20, 0x030D	; 0x80030d <Off>
     9ac:	50 91 0e 03 	lds	r21, 0x030E	; 0x80030e <Off+0x1>
     9b0:	60 91 0f 03 	lds	r22, 0x030F	; 0x80030f <Off+0x2>
     9b4:	70 91 10 03 	lds	r23, 0x0310	; 0x800310 <Off+0x3>
     9b8:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <Off+0x4>
     9bc:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <Off+0x5>
     9c0:	0e 94 9b 03 	call	0x736	; 0x736 <_Z6setLED8LEDColor>
     9c4:	61 e0       	ldi	r22, 0x01	; 1
     9c6:	72 e0       	ldi	r23, 0x02	; 2
     9c8:	8b ed       	ldi	r24, 0xDB	; 219
     9ca:	92 e0       	ldi	r25, 0x02	; 2
     9cc:	0f 91       	pop	r16
     9ce:	ff 90       	pop	r15
     9d0:	ef 90       	pop	r14
     9d2:	0c 94 20 0f 	jmp	0x1e40	; 0x1e40 <_ZN5Print5printEPKc>

000009d6 <loop>:
     9d6:	08 95       	ret

000009d8 <_GLOBAL__sub_I_ds>:
    bool LastDeviceFlag;
#endif

  public:
    OneWire() { }
    OneWire(uint8_t pin) { begin(pin); }
     9d8:	66 e0       	ldi	r22, 0x06	; 6
     9da:	80 e0       	ldi	r24, 0x00	; 0
     9dc:	94 e0       	ldi	r25, 0x04	; 4
     9de:	0e 94 ce 06 	call	0xd9c	; 0xd9c <_ZN7OneWire5beginEh>

uint8_t greenScanned;
uint8_t redScanned;
uint8_t blueScanned;

MD_TCS230  CS(S2, S3, OE);
     9e2:	28 e0       	ldi	r18, 0x08	; 8
     9e4:	4d e0       	ldi	r20, 0x0D	; 13
     9e6:	6c e0       	ldi	r22, 0x0C	; 12
     9e8:	83 e1       	ldi	r24, 0x13	; 19
     9ea:	93 e0       	ldi	r25, 0x03	; 3
     9ec:	0e 94 57 08 	call	0x10ae	; 0x10ae <_ZN9MD_TCS230C1Ehhh>
SemaphoreHandle_t xSerialSemaphoreColorSensor;

TaskHandle_t xColorSensor;
TaskHandle_t xPHandTemperature;

SoftwareSerial serial(rxPin, txPin);
     9f0:	20 e0       	ldi	r18, 0x00	; 0
     9f2:	43 e0       	ldi	r20, 0x03	; 3
     9f4:	62 e0       	ldi	r22, 0x02	; 2
     9f6:	8b ed       	ldi	r24, 0xDB	; 219
     9f8:	92 e0       	ldi	r25, 0x02	; 2
     9fa:	0c 94 85 0a 	jmp	0x150a	; 0x150a <_ZN14SoftwareSerialC1Ehhb>

000009fe <_GLOBAL__sub_D_ds>:
     9fe:	8b ed       	ldi	r24, 0xDB	; 219
     a00:	92 e0       	ldi	r25, 0x02	; 2
     a02:	0e 94 2c 0a 	call	0x1458	; 0x1458 <_ZN14SoftwareSerialD1Ev>
     a06:	83 e1       	ldi	r24, 0x13	; 19
     a08:	93 e0       	ldi	r25, 0x03	; 3
     a0a:	0c 94 6b 08 	jmp	0x10d6	; 0x10d6 <_ZN9MD_TCS230D1Ev>

00000a0e <_Z8fromWifiv>:
  }
}


void fromWifi()
{
     a0e:	cf 93       	push	r28
	int i = 0;
	char action = '\0';
	// check for data from Wifi
	if (serial.available())
     a10:	8b ed       	ldi	r24, 0xDB	; 219
     a12:	92 e0       	ldi	r25, 0x02	; 2
     a14:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_ZN14SoftwareSerial9availableEv>
     a18:	89 2b       	or	r24, r25
     a1a:	99 f0       	breq	.+38     	; 0xa42 <_Z8fromWifiv+0x34>
	{
		delay(100); // allows all serial sent to be received together
     a1c:	64 e6       	ldi	r22, 0x64	; 100
     a1e:	70 e0       	ldi	r23, 0x00	; 0
     a20:	80 e0       	ldi	r24, 0x00	; 0
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	0e 94 b7 11 	call	0x236e	; 0x236e <delay>


void fromWifi()
{
	int i = 0;
	char action = '\0';
     a28:	c0 e0       	ldi	r28, 0x00	; 0
	// check for data from Wifi
	if (serial.available())
	{
		delay(100); // allows all serial sent to be received together
		while (serial.available())
     a2a:	8b ed       	ldi	r24, 0xDB	; 219
     a2c:	92 e0       	ldi	r25, 0x02	; 2
     a2e:	0e 94 5b 09 	call	0x12b6	; 0x12b6 <_ZN14SoftwareSerial9availableEv>
     a32:	89 2b       	or	r24, r25
     a34:	39 f0       	breq	.+14     	; 0xa44 <_Z8fromWifiv+0x36>
		{
			action = serial.read();
     a36:	8b ed       	ldi	r24, 0xDB	; 219
     a38:	92 e0       	ldi	r25, 0x02	; 2
     a3a:	0e 94 d1 08 	call	0x11a2	; 0x11a2 <_ZN14SoftwareSerial4readEv>
     a3e:	c8 2f       	mov	r28, r24
	char action = '\0';
	// check for data from Wifi
	if (serial.available())
	{
		delay(100); // allows all serial sent to be received together
		while (serial.available())
     a40:	f4 cf       	rjmp	.-24     	; 0xa2a <_Z8fromWifiv+0x1c>


void fromWifi()
{
	int i = 0;
	char action = '\0';
     a42:	c0 e0       	ldi	r28, 0x00	; 0
		while (serial.available())
		{
			action = serial.read();
		}
	}
	if (alreadyStarted)
     a44:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <alreadyStarted>
     a48:	81 11       	cpse	r24, r1
     a4a:	6e c0       	rjmp	.+220    	; 0xb28 <_Z8fromWifiv+0x11a>
		action = 'p';

	switch(action)
     a4c:	ce 36       	cpi	r28, 0x6E	; 110
     a4e:	09 f4       	brne	.+2      	; 0xa52 <_Z8fromWifiv+0x44>
     a50:	82 c0       	rjmp	.+260    	; 0xb56 <_Z8fromWifiv+0x148>
     a52:	c0 37       	cpi	r28, 0x70	; 112
     a54:	09 f4       	brne	.+2      	; 0xa58 <_Z8fromWifiv+0x4a>
     a56:	68 c0       	rjmp	.+208    	; 0xb28 <_Z8fromWifiv+0x11a>
     a58:	c1 36       	cpi	r28, 0x61	; 97
     a5a:	09 f0       	breq	.+2      	; 0xa5e <_Z8fromWifiv+0x50>
     a5c:	85 c0       	rjmp	.+266    	; 0xb68 <_Z8fromWifiv+0x15a>
		vTaskResume(xColorSensor);
		break;
	}
	case 'a':
	{
		serial.print("inside case print");
     a5e:	6f e2       	ldi	r22, 0x2F	; 47
     a60:	72 e0       	ldi	r23, 0x02	; 2
     a62:	8b ed       	ldi	r24, 0xDB	; 219
     a64:	92 e0       	ldi	r25, 0x02	; 2
     a66:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <_ZN5Print5printEPKc>
		setLED(Blue);
     a6a:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <Blue>
     a6e:	50 91 08 01 	lds	r21, 0x0108	; 0x800108 <Blue+0x1>
     a72:	60 91 09 01 	lds	r22, 0x0109	; 0x800109 <Blue+0x2>
     a76:	70 91 0a 01 	lds	r23, 0x010A	; 0x80010a <Blue+0x3>
     a7a:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <Blue+0x4>
     a7e:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <Blue+0x5>
     a82:	0e 94 9b 03 	call	0x736	; 0x736 <_Z6setLED8LEDColor>
		serial.write("ph:");
     a86:	61 e4       	ldi	r22, 0x41	; 65
     a88:	72 e0       	ldi	r23, 0x02	; 2
     a8a:	8b ed       	ldi	r24, 0xDB	; 219
     a8c:	92 e0       	ldi	r25, 0x02	; 2
     a8e:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
		serial.write(phValue);
     a92:	60 91 09 03 	lds	r22, 0x0309	; 0x800309 <phValue>
     a96:	8b ed       	ldi	r24, 0xDB	; 219
     a98:	92 e0       	ldi	r25, 0x02	; 2
     a9a:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN14SoftwareSerial5writeEh>
		serial.write("temp:");
     a9e:	65 e4       	ldi	r22, 0x45	; 69
     aa0:	72 e0       	ldi	r23, 0x02	; 2
     aa2:	8b ed       	ldi	r24, 0xDB	; 219
     aa4:	92 e0       	ldi	r25, 0x02	; 2
     aa6:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
		serial.write(tempValue);
     aaa:	60 91 07 03 	lds	r22, 0x0307	; 0x800307 <tempValue>
     aae:	8b ed       	ldi	r24, 0xDB	; 219
     ab0:	92 e0       	ldi	r25, 0x02	; 2
     ab2:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN14SoftwareSerial5writeEh>
		serial.write("ammonia:");
     ab6:	6b e4       	ldi	r22, 0x4B	; 75
     ab8:	72 e0       	ldi	r23, 0x02	; 2
     aba:	8b ed       	ldi	r24, 0xDB	; 219
     abc:	92 e0       	ldi	r25, 0x02	; 2
     abe:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
		serial.write(ammoniaValue);
     ac2:	60 91 05 03 	lds	r22, 0x0305	; 0x800305 <ammoniaValue>
     ac6:	8b ed       	ldi	r24, 0xDB	; 219
     ac8:	92 e0       	ldi	r25, 0x02	; 2
     aca:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN14SoftwareSerial5writeEh>
		serial.write("nitrite:");
     ace:	64 e5       	ldi	r22, 0x54	; 84
     ad0:	72 e0       	ldi	r23, 0x02	; 2
     ad2:	8b ed       	ldi	r24, 0xDB	; 219
     ad4:	92 e0       	ldi	r25, 0x02	; 2
     ad6:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
		serial.write(nitriteValue);
     ada:	60 91 01 03 	lds	r22, 0x0301	; 0x800301 <nitriteValue>
     ade:	8b ed       	ldi	r24, 0xDB	; 219
     ae0:	92 e0       	ldi	r25, 0x02	; 2
     ae2:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN14SoftwareSerial5writeEh>
		serial.write("nitrate:");
     ae6:	6d e5       	ldi	r22, 0x5D	; 93
     ae8:	72 e0       	ldi	r23, 0x02	; 2
     aea:	8b ed       	ldi	r24, 0xDB	; 219
     aec:	92 e0       	ldi	r25, 0x02	; 2
     aee:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
		serial.write(nitrateValue);
     af2:	60 91 03 03 	lds	r22, 0x0303	; 0x800303 <nitrateValue>
     af6:	8b ed       	ldi	r24, 0xDB	; 219
     af8:	92 e0       	ldi	r25, 0x02	; 2
     afa:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <_ZN14SoftwareSerial5writeEh>
		delay(200);
     afe:	68 ec       	ldi	r22, 0xC8	; 200
     b00:	70 e0       	ldi	r23, 0x00	; 0
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	90 e0       	ldi	r25, 0x00	; 0
     b06:	0e 94 b7 11 	call	0x236e	; 0x236e <delay>
		setLED(Off);
     b0a:	40 91 0d 03 	lds	r20, 0x030D	; 0x80030d <Off>
     b0e:	50 91 0e 03 	lds	r21, 0x030E	; 0x80030e <Off+0x1>
     b12:	60 91 0f 03 	lds	r22, 0x030F	; 0x80030f <Off+0x2>
     b16:	70 91 10 03 	lds	r23, 0x0310	; 0x800310 <Off+0x3>
     b1a:	80 91 11 03 	lds	r24, 0x0311	; 0x800311 <Off+0x4>
     b1e:	90 91 12 03 	lds	r25, 0x0312	; 0x800312 <Off+0x5>
	}
	default:
		break;
	}
}
     b22:	cf 91       	pop	r28
		serial.write("nitrite:");
		serial.write(nitriteValue);
		serial.write("nitrate:");
		serial.write(nitrateValue);
		delay(200);
		setLED(Off);
     b24:	0c 94 9b 03 	jmp	0x736	; 0x736 <_Z6setLED8LEDColor>

	switch(action)
	{
	case 'p':
	{
		serial.print("inside case color");
     b28:	6d e1       	ldi	r22, 0x1D	; 29
     b2a:	72 e0       	ldi	r23, 0x02	; 2
     b2c:	8b ed       	ldi	r24, 0xDB	; 219
     b2e:	92 e0       	ldi	r25, 0x02	; 2
     b30:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <_ZN5Print5printEPKc>
		colorToRead = 'a';
     b34:	81 e6       	ldi	r24, 0x61	; 97
     b36:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <colorToRead>
		alreadyStarted = true;
     b3a:	81 e0       	ldi	r24, 0x01	; 1
     b3c:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <alreadyStarted>
		static BaseType_t xHigherPriorityTaskWoken;
		xHigherPriorityTaskWoken = pdFALSE;
     b40:	10 92 da 02 	sts	0x02DA, r1	; 0x8002da <__data_end>
		xSemaphoreGiveFromISR(xSerialSemaphoreColorSensor, &xHigherPriorityTaskWoken);
     b44:	6a ed       	ldi	r22, 0xDA	; 218
     b46:	72 e0       	ldi	r23, 0x02	; 2
     b48:	80 91 fe 02 	lds	r24, 0x02FE	; 0x8002fe <xSerialSemaphoreColorSensor>
     b4c:	90 91 ff 02 	lds	r25, 0x02FF	; 0x8002ff <xSerialSemaphoreColorSensor+0x1>
		setLED(Off);
	}
	default:
		break;
	}
}
     b50:	cf 91       	pop	r28
		serial.print("inside case color");
		colorToRead = 'a';
		alreadyStarted = true;
		static BaseType_t xHigherPriorityTaskWoken;
		xHigherPriorityTaskWoken = pdFALSE;
		xSemaphoreGiveFromISR(xSerialSemaphoreColorSensor, &xHigherPriorityTaskWoken);
     b52:	0c 94 2b 15 	jmp	0x2a56	; 0x2a56 <xQueueGiveFromISR>
		break;
	}
	case 'n':
	{
		colorToRead = 'n';
     b56:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <colorToRead>
		vTaskResume(xColorSensor);
     b5a:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <xColorSensor>
     b5e:	90 91 fd 02 	lds	r25, 0x02FD	; 0x8002fd <xColorSensor+0x1>
		setLED(Off);
	}
	default:
		break;
	}
}
     b62:	cf 91       	pop	r28
		break;
	}
	case 'n':
	{
		colorToRead = 'n';
		vTaskResume(xColorSensor);
     b64:	0c 94 ad 17 	jmp	0x2f5a	; 0x2f5a <vTaskResume>
		setLED(Off);
	}
	default:
		break;
	}
}
     b68:	cf 91       	pop	r28
     b6a:	08 95       	ret

00000b6c <_ZN7OneWire5resetEv>:
   ROM_NO[0] = family_code;
   for (uint8_t i = 1; i < 8; i++)
      ROM_NO[i] = 0;
   LastDiscrepancy = 64;
   LastFamilyDiscrepancy = 0;
   LastDeviceFlag = false;
     b6c:	ff 92       	push	r15
     b6e:	0f 93       	push	r16
     b70:	1f 93       	push	r17
     b72:	cf 93       	push	r28
     b74:	df 93       	push	r29
     b76:	fc 01       	movw	r30, r24
     b78:	f0 80       	ld	r15, Z
     b7a:	c1 81       	ldd	r28, Z+1	; 0x01
     b7c:	d2 81       	ldd	r29, Z+2	; 0x02
     b7e:	f8 94       	cli
     b80:	89 81       	ldd	r24, Y+1	; 0x01
     b82:	0f 2d       	mov	r16, r15
     b84:	00 95       	com	r16
     b86:	80 23       	and	r24, r16
     b88:	89 83       	std	Y+1, r24	; 0x01
     b8a:	78 94       	sei
     b8c:	1d e7       	ldi	r17, 0x7D	; 125
     b8e:	11 50       	subi	r17, 0x01	; 1
     b90:	29 f1       	breq	.+74     	; 0xbdc <_ZN7OneWire5resetEv+0x70>
     b92:	82 e0       	ldi	r24, 0x02	; 2
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     b9a:	88 81       	ld	r24, Y
     b9c:	8f 21       	and	r24, r15
     b9e:	b9 f3       	breq	.-18     	; 0xb8e <_ZN7OneWire5resetEv+0x22>
     ba0:	f8 94       	cli
     ba2:	8a 81       	ldd	r24, Y+2	; 0x02
     ba4:	80 23       	and	r24, r16
     ba6:	8a 83       	std	Y+2, r24	; 0x02
     ba8:	89 81       	ldd	r24, Y+1	; 0x01
     baa:	8f 29       	or	r24, r15
     bac:	89 83       	std	Y+1, r24	; 0x01
     bae:	78 94       	sei
     bb0:	80 ee       	ldi	r24, 0xE0	; 224
     bb2:	91 e0       	ldi	r25, 0x01	; 1
     bb4:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     bb8:	f8 94       	cli
     bba:	89 81       	ldd	r24, Y+1	; 0x01
     bbc:	08 23       	and	r16, r24
     bbe:	09 83       	std	Y+1, r16	; 0x01
     bc0:	86 e4       	ldi	r24, 0x46	; 70
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     bc8:	88 81       	ld	r24, Y
     bca:	f8 22       	and	r15, r24
     bcc:	11 e0       	ldi	r17, 0x01	; 1
     bce:	09 f0       	breq	.+2      	; 0xbd2 <_ZN7OneWire5resetEv+0x66>
     bd0:	10 e0       	ldi	r17, 0x00	; 0
     bd2:	78 94       	sei
     bd4:	8a e9       	ldi	r24, 0x9A	; 154
     bd6:	91 e0       	ldi	r25, 0x01	; 1
     bd8:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     bdc:	81 2f       	mov	r24, r17
     bde:	df 91       	pop	r29
     be0:	cf 91       	pop	r28
     be2:	1f 91       	pop	r17
     be4:	0f 91       	pop	r16
     be6:	ff 90       	pop	r15
     be8:	08 95       	ret

00000bea <_ZN7OneWire9write_bitEh>:
     bea:	1f 93       	push	r17
     bec:	cf 93       	push	r28
     bee:	df 93       	push	r29
     bf0:	fc 01       	movw	r30, r24
     bf2:	10 81       	ld	r17, Z
     bf4:	c1 81       	ldd	r28, Z+1	; 0x01
     bf6:	d2 81       	ldd	r29, Z+2	; 0x02
     bf8:	81 2f       	mov	r24, r17
     bfa:	80 95       	com	r24
     bfc:	60 ff       	sbrs	r22, 0
     bfe:	12 c0       	rjmp	.+36     	; 0xc24 <_ZN7OneWire9write_bitEh+0x3a>
     c00:	f8 94       	cli
     c02:	9a 81       	ldd	r25, Y+2	; 0x02
     c04:	89 23       	and	r24, r25
     c06:	8a 83       	std	Y+2, r24	; 0x02
     c08:	89 81       	ldd	r24, Y+1	; 0x01
     c0a:	81 2b       	or	r24, r17
     c0c:	89 83       	std	Y+1, r24	; 0x01
     c0e:	8a e0       	ldi	r24, 0x0A	; 10
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     c16:	8a 81       	ldd	r24, Y+2	; 0x02
     c18:	18 2b       	or	r17, r24
     c1a:	1a 83       	std	Y+2, r17	; 0x02
     c1c:	78 94       	sei
     c1e:	87 e3       	ldi	r24, 0x37	; 55
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	11 c0       	rjmp	.+34     	; 0xc46 <_ZN7OneWire9write_bitEh+0x5c>
     c24:	f8 94       	cli
     c26:	9a 81       	ldd	r25, Y+2	; 0x02
     c28:	89 23       	and	r24, r25
     c2a:	8a 83       	std	Y+2, r24	; 0x02
     c2c:	89 81       	ldd	r24, Y+1	; 0x01
     c2e:	81 2b       	or	r24, r17
     c30:	89 83       	std	Y+1, r24	; 0x01
     c32:	81 e4       	ldi	r24, 0x41	; 65
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     c3a:	8a 81       	ldd	r24, Y+2	; 0x02
     c3c:	18 2b       	or	r17, r24
     c3e:	1a 83       	std	Y+2, r17	; 0x02
     c40:	78 94       	sei
     c42:	85 e0       	ldi	r24, 0x05	; 5
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	df 91       	pop	r29
     c48:	cf 91       	pop	r28
     c4a:	1f 91       	pop	r17
     c4c:	0c 94 f3 11 	jmp	0x23e6	; 0x23e6 <delayMicroseconds>

00000c50 <_ZN7OneWire8read_bitEv>:
     c50:	0f 93       	push	r16
     c52:	1f 93       	push	r17
     c54:	cf 93       	push	r28
     c56:	df 93       	push	r29
     c58:	fc 01       	movw	r30, r24
     c5a:	00 81       	ld	r16, Z
     c5c:	c1 81       	ldd	r28, Z+1	; 0x01
     c5e:	d2 81       	ldd	r29, Z+2	; 0x02
     c60:	f8 94       	cli
     c62:	89 81       	ldd	r24, Y+1	; 0x01
     c64:	80 2b       	or	r24, r16
     c66:	89 83       	std	Y+1, r24	; 0x01
     c68:	8a 81       	ldd	r24, Y+2	; 0x02
     c6a:	10 2f       	mov	r17, r16
     c6c:	10 95       	com	r17
     c6e:	81 23       	and	r24, r17
     c70:	8a 83       	std	Y+2, r24	; 0x02
     c72:	83 e0       	ldi	r24, 0x03	; 3
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     c7a:	89 81       	ldd	r24, Y+1	; 0x01
     c7c:	18 23       	and	r17, r24
     c7e:	19 83       	std	Y+1, r17	; 0x01
     c80:	8a e0       	ldi	r24, 0x0A	; 10
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     c88:	c8 81       	ld	r28, Y
     c8a:	78 94       	sei
     c8c:	85 e3       	ldi	r24, 0x35	; 53
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 f3 11 	call	0x23e6	; 0x23e6 <delayMicroseconds>
     c94:	c0 23       	and	r28, r16
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	09 f4       	brne	.+2      	; 0xc9c <_ZN7OneWire8read_bitEv+0x4c>
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	df 91       	pop	r29
     c9e:	cf 91       	pop	r28
     ca0:	1f 91       	pop	r17
     ca2:	0f 91       	pop	r16
     ca4:	08 95       	ret

00000ca6 <_ZN7OneWire5writeEhh>:
     ca6:	df 92       	push	r13
     ca8:	ef 92       	push	r14
     caa:	ff 92       	push	r15
     cac:	0f 93       	push	r16
     cae:	1f 93       	push	r17
     cb0:	cf 93       	push	r28
     cb2:	df 93       	push	r29
     cb4:	ec 01       	movw	r28, r24
     cb6:	d6 2e       	mov	r13, r22
     cb8:	e4 2e       	mov	r14, r20
     cba:	08 e0       	ldi	r16, 0x08	; 8
     cbc:	10 e0       	ldi	r17, 0x00	; 0
     cbe:	ff 24       	eor	r15, r15
     cc0:	f3 94       	inc	r15
     cc2:	61 e0       	ldi	r22, 0x01	; 1
     cc4:	8d 2d       	mov	r24, r13
     cc6:	8f 21       	and	r24, r15
     cc8:	09 f4       	brne	.+2      	; 0xccc <_ZN7OneWire5writeEhh+0x26>
     cca:	60 e0       	ldi	r22, 0x00	; 0
     ccc:	ce 01       	movw	r24, r28
     cce:	0e 94 f5 05 	call	0xbea	; 0xbea <_ZN7OneWire9write_bitEh>
     cd2:	ff 0c       	add	r15, r15
     cd4:	01 50       	subi	r16, 0x01	; 1
     cd6:	11 09       	sbc	r17, r1
     cd8:	a1 f7       	brne	.-24     	; 0xcc2 <_ZN7OneWire5writeEhh+0x1c>
     cda:	e1 10       	cpse	r14, r1
     cdc:	10 c0       	rjmp	.+32     	; 0xcfe <_ZN7OneWire5writeEhh+0x58>
     cde:	f8 94       	cli
     ce0:	e9 81       	ldd	r30, Y+1	; 0x01
     ce2:	fa 81       	ldd	r31, Y+2	; 0x02
     ce4:	91 81       	ldd	r25, Z+1	; 0x01
     ce6:	88 81       	ld	r24, Y
     ce8:	80 95       	com	r24
     cea:	89 23       	and	r24, r25
     cec:	81 83       	std	Z+1, r24	; 0x01
     cee:	e9 81       	ldd	r30, Y+1	; 0x01
     cf0:	fa 81       	ldd	r31, Y+2	; 0x02
     cf2:	92 81       	ldd	r25, Z+2	; 0x02
     cf4:	88 81       	ld	r24, Y
     cf6:	80 95       	com	r24
     cf8:	89 23       	and	r24, r25
     cfa:	82 83       	std	Z+2, r24	; 0x02
     cfc:	78 94       	sei
     cfe:	df 91       	pop	r29
     d00:	cf 91       	pop	r28
     d02:	1f 91       	pop	r17
     d04:	0f 91       	pop	r16
     d06:	ff 90       	pop	r15
     d08:	ef 90       	pop	r14
     d0a:	df 90       	pop	r13
     d0c:	08 95       	ret

00000d0e <_ZN7OneWire4readEv>:
     d0e:	ef 92       	push	r14
     d10:	ff 92       	push	r15
     d12:	0f 93       	push	r16
     d14:	1f 93       	push	r17
     d16:	cf 93       	push	r28
     d18:	df 93       	push	r29
     d1a:	7c 01       	movw	r14, r24
     d1c:	08 e0       	ldi	r16, 0x08	; 8
     d1e:	10 e0       	ldi	r17, 0x00	; 0
     d20:	c0 e0       	ldi	r28, 0x00	; 0
     d22:	d1 e0       	ldi	r29, 0x01	; 1
     d24:	c7 01       	movw	r24, r14
     d26:	0e 94 28 06 	call	0xc50	; 0xc50 <_ZN7OneWire8read_bitEv>
     d2a:	81 11       	cpse	r24, r1
     d2c:	cd 2b       	or	r28, r29
     d2e:	dd 0f       	add	r29, r29
     d30:	01 50       	subi	r16, 0x01	; 1
     d32:	11 09       	sbc	r17, r1
     d34:	b9 f7       	brne	.-18     	; 0xd24 <_ZN7OneWire4readEv+0x16>
     d36:	8c 2f       	mov	r24, r28
     d38:	df 91       	pop	r29
     d3a:	cf 91       	pop	r28
     d3c:	1f 91       	pop	r17
     d3e:	0f 91       	pop	r16
     d40:	ff 90       	pop	r15
     d42:	ef 90       	pop	r14
     d44:	08 95       	ret

00000d46 <_ZN7OneWire6selectEPKh>:
     d46:	ef 92       	push	r14
     d48:	ff 92       	push	r15
     d4a:	0f 93       	push	r16
     d4c:	1f 93       	push	r17
     d4e:	cf 93       	push	r28
     d50:	df 93       	push	r29
     d52:	8c 01       	movw	r16, r24
     d54:	7b 01       	movw	r14, r22
     d56:	40 e0       	ldi	r20, 0x00	; 0
     d58:	65 e5       	ldi	r22, 0x55	; 85
     d5a:	0e 94 53 06 	call	0xca6	; 0xca6 <_ZN7OneWire5writeEhh>
     d5e:	e7 01       	movw	r28, r14
     d60:	88 e0       	ldi	r24, 0x08	; 8
     d62:	e8 0e       	add	r14, r24
     d64:	f1 1c       	adc	r15, r1
     d66:	69 91       	ld	r22, Y+
     d68:	40 e0       	ldi	r20, 0x00	; 0
     d6a:	c8 01       	movw	r24, r16
     d6c:	0e 94 53 06 	call	0xca6	; 0xca6 <_ZN7OneWire5writeEhh>
     d70:	ce 15       	cp	r28, r14
     d72:	df 05       	cpc	r29, r15
     d74:	c1 f7       	brne	.-16     	; 0xd66 <_ZN7OneWire6selectEPKh+0x20>
     d76:	df 91       	pop	r29
     d78:	cf 91       	pop	r28
     d7a:	1f 91       	pop	r17
     d7c:	0f 91       	pop	r16
     d7e:	ff 90       	pop	r15
     d80:	ef 90       	pop	r14
     d82:	08 95       	ret

00000d84 <_ZN7OneWire12reset_searchEv>:
     d84:	fc 01       	movw	r30, r24
     d86:	13 86       	std	Z+11, r1	; 0x0b
     d88:	15 86       	std	Z+13, r1	; 0x0d
     d8a:	14 86       	std	Z+12, r1	; 0x0c
     d8c:	dc 01       	movw	r26, r24
     d8e:	1b 96       	adiw	r26, 0x0b	; 11
     d90:	33 96       	adiw	r30, 0x03	; 3
     d92:	1e 92       	st	-X, r1
     d94:	ae 17       	cp	r26, r30
     d96:	bf 07       	cpc	r27, r31
     d98:	e1 f7       	brne	.-8      	; 0xd92 <_ZN7OneWire12reset_searchEv+0xe>
     d9a:	08 95       	ret

00000d9c <_ZN7OneWire5beginEh>:
     d9c:	1f 93       	push	r17
     d9e:	cf 93       	push	r28
     da0:	df 93       	push	r29
     da2:	ec 01       	movw	r28, r24
     da4:	16 2f       	mov	r17, r22
     da6:	60 e0       	ldi	r22, 0x00	; 0
     da8:	81 2f       	mov	r24, r17
     daa:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
     dae:	61 2f       	mov	r22, r17
     db0:	70 e0       	ldi	r23, 0x00	; 0
     db2:	fb 01       	movw	r30, r22
     db4:	e0 55       	subi	r30, 0x50	; 80
     db6:	ff 4f       	sbci	r31, 0xFF	; 255
     db8:	e4 91       	lpm	r30, Z
     dba:	e8 83       	st	Y, r30
     dbc:	fb 01       	movw	r30, r22
     dbe:	ec 53       	subi	r30, 0x3C	; 60
     dc0:	ff 4f       	sbci	r31, 0xFF	; 255
     dc2:	e4 91       	lpm	r30, Z
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	ee 0f       	add	r30, r30
     dc8:	ff 1f       	adc	r31, r31
     dca:	e8 52       	subi	r30, 0x28	; 40
     dcc:	ff 4f       	sbci	r31, 0xFF	; 255
     dce:	85 91       	lpm	r24, Z+
     dd0:	94 91       	lpm	r25, Z
     dd2:	9a 83       	std	Y+2, r25	; 0x02
     dd4:	89 83       	std	Y+1, r24	; 0x01
     dd6:	ce 01       	movw	r24, r28
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	1f 91       	pop	r17
     dde:	0c 94 c2 06 	jmp	0xd84	; 0xd84 <_ZN7OneWire12reset_searchEv>

00000de2 <_ZN7OneWire6searchEPhb>:
// search state.
// Return TRUE  : device found, ROM number in ROM_NO buffer
//        FALSE : device not found, end of search
//
bool OneWire::search(uint8_t *newAddr, bool search_mode /* = true */)
{
     de2:	bf 92       	push	r11
     de4:	cf 92       	push	r12
     de6:	df 92       	push	r13
     de8:	ef 92       	push	r14
     dea:	ff 92       	push	r15
     dec:	0f 93       	push	r16
     dee:	1f 93       	push	r17
     df0:	cf 93       	push	r28
     df2:	df 93       	push	r29
     df4:	ec 01       	movw	r28, r24
     df6:	6b 01       	movw	r12, r22
     df8:	14 2f       	mov	r17, r20
   rom_byte_number = 0;
   rom_byte_mask = 1;
   search_result = false;

   // if the last call was not the last one
   if (!LastDeviceFlag) {
     dfa:	8d 85       	ldd	r24, Y+13	; 0x0d
     dfc:	81 11       	cpse	r24, r1
     dfe:	05 c0       	rjmp	.+10     	; 0xe0a <_ZN7OneWire6searchEPhb+0x28>
      // 1-Wire reset
      if (!reset()) {
     e00:	ce 01       	movw	r24, r28
     e02:	0e 94 b6 05 	call	0xb6c	; 0xb6c <_ZN7OneWire5resetEv>
     e06:	81 11       	cpse	r24, r1
     e08:	05 c0       	rjmp	.+10     	; 0xe14 <_ZN7OneWire6searchEPhb+0x32>
         // reset the search
         LastDiscrepancy = 0;
     e0a:	1b 86       	std	Y+11, r1	; 0x0b
         LastDeviceFlag = false;
     e0c:	1d 86       	std	Y+13, r1	; 0x0d
         LastFamilyDiscrepancy = 0;
     e0e:	1c 86       	std	Y+12, r1	; 0x0c
         return false;
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	64 c0       	rjmp	.+200    	; 0xedc <_ZN7OneWire6searchEPhb+0xfa>
      }

      // issue the search command
      if (search_mode == true) {
        write(0xF0);   // NORMAL SEARCH
     e14:	40 e0       	ldi	r20, 0x00	; 0
         LastFamilyDiscrepancy = 0;
         return false;
      }

      // issue the search command
      if (search_mode == true) {
     e16:	11 23       	and	r17, r17
     e18:	11 f0       	breq	.+4      	; 0xe1e <_ZN7OneWire6searchEPhb+0x3c>
        write(0xF0);   // NORMAL SEARCH
     e1a:	60 ef       	ldi	r22, 0xF0	; 240
     e1c:	01 c0       	rjmp	.+2      	; 0xe20 <_ZN7OneWire6searchEPhb+0x3e>
      } else {
        write(0xEC);   // CONDITIONAL SEARCH
     e1e:	6c ee       	ldi	r22, 0xEC	; 236
     e20:	ce 01       	movw	r24, r28
     e22:	0e 94 53 06 	call	0xca6	; 0xca6 <_ZN7OneWire5writeEhh>
// search state.
// Return TRUE  : device found, ROM number in ROM_NO buffer
//        FALSE : device not found, end of search
//
bool OneWire::search(uint8_t *newAddr, bool search_mode /* = true */)
{
     e26:	01 e0       	ldi	r16, 0x01	; 1
     e28:	e1 2c       	mov	r14, r1
     e2a:	b1 2c       	mov	r11, r1
     e2c:	11 e0       	ldi	r17, 0x01	; 1

      // loop to do the search
      do
      {
         // read a bit and its complement
         id_bit = read_bit();
     e2e:	ce 01       	movw	r24, r28
     e30:	0e 94 28 06 	call	0xc50	; 0xc50 <_ZN7OneWire8read_bitEv>
     e34:	f8 2e       	mov	r15, r24
         cmp_id_bit = read_bit();
     e36:	ce 01       	movw	r24, r28
     e38:	0e 94 28 06 	call	0xc50	; 0xc50 <_ZN7OneWire8read_bitEv>

         // check for no devices on 1-wire
         if ((id_bit == 1) && (cmp_id_bit == 1)) {
     e3c:	91 e0       	ldi	r25, 0x01	; 1
     e3e:	f9 12       	cpse	r15, r25
     e40:	03 c0       	rjmp	.+6      	; 0xe48 <_ZN7OneWire6searchEPhb+0x66>
     e42:	81 30       	cpi	r24, 0x01	; 1
     e44:	b1 f4       	brne	.+44     	; 0xe72 <_ZN7OneWire6searchEPhb+0x90>
     e46:	34 c0       	rjmp	.+104    	; 0xeb0 <_ZN7OneWire6searchEPhb+0xce>
     e48:	2e 2d       	mov	r18, r14
     e4a:	30 e0       	ldi	r19, 0x00	; 0
            break;
         } else {
            // all devices coupled have 0 or 1
            if (id_bit != cmp_id_bit) {
     e4c:	f8 12       	cpse	r15, r24
     e4e:	1b c0       	rjmp	.+54     	; 0xe86 <_ZN7OneWire6searchEPhb+0xa4>
               search_direction = id_bit;  // bit write value for search
            } else {
               // if this discrepancy if before the Last Discrepancy
               // on a previous next then pick the same as last time
               if (id_bit_number < LastDiscrepancy) {
     e50:	8b 85       	ldd	r24, Y+11	; 0x0b
     e52:	18 17       	cp	r17, r24
     e54:	38 f4       	brcc	.+14     	; 0xe64 <_ZN7OneWire6searchEPhb+0x82>
                  search_direction = ((ROM_NO[rom_byte_number] & rom_byte_mask) > 0);
     e56:	fe 01       	movw	r30, r28
     e58:	e2 0f       	add	r30, r18
     e5a:	f3 1f       	adc	r31, r19
     e5c:	83 81       	ldd	r24, Z+3	; 0x03
     e5e:	80 23       	and	r24, r16
     e60:	41 f4       	brne	.+16     	; 0xe72 <_ZN7OneWire6searchEPhb+0x90>
     e62:	02 c0       	rjmp	.+4      	; 0xe68 <_ZN7OneWire6searchEPhb+0x86>
               } else {
                  // if equal to last pick 1, if not then pick 0
                  search_direction = (id_bit_number == LastDiscrepancy);
     e64:	18 17       	cp	r17, r24
     e66:	29 f0       	breq	.+10     	; 0xe72 <_ZN7OneWire6searchEPhb+0x90>
     e68:	f1 2c       	mov	r15, r1
               // if 0 was picked then record its position in LastZero
               if (search_direction == 0) {
                  last_zero = id_bit_number;

                  // check for Last discrepancy in family
                  if (last_zero < 9)
     e6a:	19 30       	cpi	r17, 0x09	; 9
     e6c:	58 f4       	brcc	.+22     	; 0xe84 <_ZN7OneWire6searchEPhb+0xa2>
                     LastFamilyDiscrepancy = last_zero;
     e6e:	1c 87       	std	Y+12, r17	; 0x0c
     e70:	09 c0       	rjmp	.+18     	; 0xe84 <_ZN7OneWire6searchEPhb+0xa2>
            }

            // set or clear the bit in the ROM byte rom_byte_number
            // with mask rom_byte_mask
            if (search_direction == 1)
              ROM_NO[rom_byte_number] |= rom_byte_mask;
     e72:	fe 01       	movw	r30, r28
     e74:	ee 0d       	add	r30, r14
     e76:	f1 1d       	adc	r31, r1
     e78:	83 81       	ldd	r24, Z+3	; 0x03
     e7a:	80 2b       	or	r24, r16
     e7c:	83 83       	std	Z+3, r24	; 0x03
     e7e:	ff 24       	eor	r15, r15
     e80:	f3 94       	inc	r15
     e82:	09 c0       	rjmp	.+18     	; 0xe96 <_ZN7OneWire6searchEPhb+0xb4>
// search state.
// Return TRUE  : device found, ROM number in ROM_NO buffer
//        FALSE : device not found, end of search
//
bool OneWire::search(uint8_t *newAddr, bool search_mode /* = true */)
{
     e84:	b1 2e       	mov	r11, r17
            // set or clear the bit in the ROM byte rom_byte_number
            // with mask rom_byte_mask
            if (search_direction == 1)
              ROM_NO[rom_byte_number] |= rom_byte_mask;
            else
              ROM_NO[rom_byte_number] &= ~rom_byte_mask;
     e86:	fe 01       	movw	r30, r28
     e88:	e2 0f       	add	r30, r18
     e8a:	f3 1f       	adc	r31, r19
     e8c:	93 81       	ldd	r25, Z+3	; 0x03
     e8e:	80 2f       	mov	r24, r16
     e90:	80 95       	com	r24
     e92:	89 23       	and	r24, r25
     e94:	83 83       	std	Z+3, r24	; 0x03

            // serial number search direction write bit
            write_bit(search_direction);
     e96:	6f 2d       	mov	r22, r15
     e98:	ce 01       	movw	r24, r28
     e9a:	0e 94 f5 05 	call	0xbea	; 0xbea <_ZN7OneWire9write_bitEh>

            // increment the byte counter id_bit_number
            // and shift the mask rom_byte_mask
            id_bit_number++;
     e9e:	1f 5f       	subi	r17, 0xFF	; 255
            rom_byte_mask <<= 1;
     ea0:	00 0f       	add	r16, r16

            // if the mask is 0 then go to new SerialNum byte rom_byte_number and reset mask
            if (rom_byte_mask == 0) {
     ea2:	11 f4       	brne	.+4      	; 0xea8 <_ZN7OneWire6searchEPhb+0xc6>
                rom_byte_number++;
     ea4:	e3 94       	inc	r14
                rom_byte_mask = 1;
     ea6:	01 e0       	ldi	r16, 0x01	; 1
            }
         }
      }
      while(rom_byte_number < 8);  // loop until through all ROM bytes 0-7
     ea8:	87 e0       	ldi	r24, 0x07	; 7
     eaa:	8e 15       	cp	r24, r14
     eac:	08 f0       	brcs	.+2      	; 0xeb0 <_ZN7OneWire6searchEPhb+0xce>
     eae:	bf cf       	rjmp	.-130    	; 0xe2e <_ZN7OneWire6searchEPhb+0x4c>

      // if the search was successful then
      if (!(id_bit_number < 65)) {
     eb0:	11 34       	cpi	r17, 0x41	; 65
     eb2:	08 f4       	brcc	.+2      	; 0xeb6 <_ZN7OneWire6searchEPhb+0xd4>
     eb4:	aa cf       	rjmp	.-172    	; 0xe0a <_ZN7OneWire6searchEPhb+0x28>
         // search successful so set LastDiscrepancy,LastDeviceFlag,search_result
         LastDiscrepancy = last_zero;
     eb6:	bb 86       	std	Y+11, r11	; 0x0b

         // check for last device
         if (LastDiscrepancy == 0) {
     eb8:	b1 10       	cpse	r11, r1
     eba:	02 c0       	rjmp	.+4      	; 0xec0 <_ZN7OneWire6searchEPhb+0xde>
            LastDeviceFlag = true;
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	8d 87       	std	Y+13, r24	; 0x0d
         search_result = true;
      }
   }

   // if no device found then reset counters so next 'search' will be like a first
   if (!search_result || !ROM_NO[0]) {
     ec0:	8b 81       	ldd	r24, Y+3	; 0x03
     ec2:	88 23       	and	r24, r24
     ec4:	09 f4       	brne	.+2      	; 0xec8 <_ZN7OneWire6searchEPhb+0xe6>
     ec6:	a1 cf       	rjmp	.-190    	; 0xe0a <_ZN7OneWire6searchEPhb+0x28>
     ec8:	de 01       	movw	r26, r28
     eca:	13 96       	adiw	r26, 0x03	; 3
     ecc:	f6 01       	movw	r30, r12
     ece:	2b 96       	adiw	r28, 0x0b	; 11
      LastDiscrepancy = 0;
      LastDeviceFlag = false;
      LastFamilyDiscrepancy = 0;
      search_result = false;
   } else {
      for (int i = 0; i < 8; i++) newAddr[i] = ROM_NO[i];
     ed0:	8d 91       	ld	r24, X+
     ed2:	81 93       	st	Z+, r24
     ed4:	ca 17       	cp	r28, r26
     ed6:	db 07       	cpc	r29, r27
     ed8:	d9 f7       	brne	.-10     	; 0xed0 <_ZN7OneWire6searchEPhb+0xee>
     eda:	81 e0       	ldi	r24, 0x01	; 1
   }
   return search_result;
  }
     edc:	df 91       	pop	r29
     ede:	cf 91       	pop	r28
     ee0:	1f 91       	pop	r17
     ee2:	0f 91       	pop	r16
     ee4:	ff 90       	pop	r15
     ee6:	ef 90       	pop	r14
     ee8:	df 90       	pop	r13
     eea:	cf 90       	pop	r12
     eec:	bf 90       	pop	r11
     eee:	08 95       	ret

00000ef0 <_ZN7OneWire4crc8EPKhh>:
};

// Compute a Dallas Semiconductor 8 bit CRC. These show up in the ROM
// and the registers.  (Use tiny 2x16 entry CRC table)
uint8_t OneWire::crc8(const uint8_t *addr, uint8_t len)
{
     ef0:	dc 01       	movw	r26, r24
	uint8_t crc = 0;
     ef2:	80 e0       	ldi	r24, 0x00	; 0

	while (len--) {
     ef4:	61 50       	subi	r22, 0x01	; 1
     ef6:	98 f0       	brcs	.+38     	; 0xf1e <_ZN7OneWire4crc8EPKhh+0x2e>
		crc = *addr++ ^ crc;  // just re-using crc as intermediate
     ef8:	2d 91       	ld	r18, X+
     efa:	98 2f       	mov	r25, r24
     efc:	92 27       	eor	r25, r18
		crc = pgm_read_byte(dscrc2x16_table + (crc & 0x0f)) ^
     efe:	e9 2f       	mov	r30, r25
     f00:	ef 70       	andi	r30, 0x0F	; 15
     f02:	f0 e0       	ldi	r31, 0x00	; 0
     f04:	e4 58       	subi	r30, 0x84	; 132
     f06:	ff 4f       	sbci	r31, 0xFF	; 255
     f08:	24 91       	lpm	r18, Z
		pgm_read_byte(dscrc2x16_table + 16 + ((crc >> 4) & 0x0f));
     f0a:	92 95       	swap	r25
     f0c:	9f 70       	andi	r25, 0x0F	; 15
     f0e:	e9 2f       	mov	r30, r25
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	e4 57       	subi	r30, 0x74	; 116
     f14:	ff 4f       	sbci	r31, 0xFF	; 255
     f16:	e4 91       	lpm	r30, Z
     f18:	82 2f       	mov	r24, r18
     f1a:	8e 27       	eor	r24, r30
// and the registers.  (Use tiny 2x16 entry CRC table)
uint8_t OneWire::crc8(const uint8_t *addr, uint8_t len)
{
	uint8_t crc = 0;

	while (len--) {
     f1c:	eb cf       	rjmp	.-42     	; 0xef4 <_ZN7OneWire4crc8EPKhh+0x4>
		crc = pgm_read_byte(dscrc2x16_table + (crc & 0x0f)) ^
		pgm_read_byte(dscrc2x16_table + 16 + ((crc >> 4) & 0x0f));
	}

	return crc;
}
     f1e:	08 95       	ret

00000f20 <_Z6phInitv>:
}

void calibratePH(long temperaturePH) {
	float voltage = analogRead(PH_PIN)/1024.0*5000;
	ph.calibration(voltage, temperaturePH);
}
     f20:	8e e0       	ldi	r24, 0x0E	; 14
     f22:	94 e0       	ldi	r25, 0x04	; 4
     f24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <_ZN10DFRobot_PH5beginEv>

00000f28 <_Z6calcPHv>:

float calcPH()
{
     f28:	4f 92       	push	r4
     f2a:	5f 92       	push	r5
     f2c:	6f 92       	push	r6
     f2e:	7f 92       	push	r7
     f30:	8f 92       	push	r8
     f32:	9f 92       	push	r9
     f34:	af 92       	push	r10
     f36:	bf 92       	push	r11
     f38:	cf 92       	push	r12
     f3a:	df 92       	push	r13
     f3c:	ef 92       	push	r14
     f3e:	ff 92       	push	r15
	float voltage = analogRead(PH_PIN);
     f40:	8e e0       	ldi	r24, 0x0E	; 14
     f42:	0e 94 39 12 	call	0x2472	; 0x2472 <analogRead>
     f46:	bc 01       	movw	r22, r24
     f48:	99 0f       	add	r25, r25
     f4a:	88 0b       	sbc	r24, r24
     f4c:	99 0b       	sbc	r25, r25
     f4e:	0e 94 5a 0c 	call	0x18b4	; 0x18b4 <__floatsisf>
     f52:	6b 01       	movw	r12, r22
     f54:	7c 01       	movw	r14, r24
	float slope = (7.0 - 4.0)/(neutralVoltage - acidVoltage);
     f56:	40 90 1d 01 	lds	r4, 0x011D	; 0x80011d <neutralVoltage>
     f5a:	50 90 1e 01 	lds	r5, 0x011E	; 0x80011e <neutralVoltage+0x1>
     f5e:	60 90 1f 01 	lds	r6, 0x011F	; 0x80011f <neutralVoltage+0x2>
     f62:	70 90 20 01 	lds	r7, 0x0120	; 0x800120 <neutralVoltage+0x3>
     f66:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <acidVoltage>
     f6a:	30 91 1a 01 	lds	r19, 0x011A	; 0x80011a <acidVoltage+0x1>
     f6e:	40 91 1b 01 	lds	r20, 0x011B	; 0x80011b <acidVoltage+0x2>
     f72:	50 91 1c 01 	lds	r21, 0x011C	; 0x80011c <acidVoltage+0x3>
     f76:	c3 01       	movw	r24, r6
     f78:	b2 01       	movw	r22, r4
     f7a:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
     f7e:	9b 01       	movw	r18, r22
     f80:	ac 01       	movw	r20, r24
     f82:	60 e0       	ldi	r22, 0x00	; 0
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	80 e4       	ldi	r24, 0x40	; 64
     f88:	90 e4       	ldi	r25, 0x40	; 64
     f8a:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__divsf3>
     f8e:	4b 01       	movw	r8, r22
     f90:	5c 01       	movw	r10, r24
	float intercept = 7.0-(slope * neutralVoltage);
	Serial.write("Neutral Voltage:");
     f92:	66 e6       	ldi	r22, 0x66	; 102
     f94:	72 e0       	ldi	r23, 0x02	; 2
     f96:	81 e7       	ldi	r24, 0x71	; 113
     f98:	94 e0       	ldi	r25, 0x04	; 4
     f9a:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
	Serial.print(neutralVoltage);
     f9e:	40 91 1d 01 	lds	r20, 0x011D	; 0x80011d <neutralVoltage>
     fa2:	50 91 1e 01 	lds	r21, 0x011E	; 0x80011e <neutralVoltage+0x1>
     fa6:	60 91 1f 01 	lds	r22, 0x011F	; 0x80011f <neutralVoltage+0x2>
     faa:	70 91 20 01 	lds	r23, 0x0120	; 0x800120 <neutralVoltage+0x3>
     fae:	22 e0       	ldi	r18, 0x02	; 2
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	81 e7       	ldi	r24, 0x71	; 113
     fb4:	94 e0       	ldi	r25, 0x04	; 4
     fb6:	0e 94 c5 10 	call	0x218a	; 0x218a <_ZN5Print5printEdi>
	Serial.write("\nAcid Voltage:");
     fba:	67 e7       	ldi	r22, 0x77	; 119
     fbc:	72 e0       	ldi	r23, 0x02	; 2
     fbe:	81 e7       	ldi	r24, 0x71	; 113
     fc0:	94 e0       	ldi	r25, 0x04	; 4
     fc2:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
	Serial.print(acidVoltage);
     fc6:	40 91 19 01 	lds	r20, 0x0119	; 0x800119 <acidVoltage>
     fca:	50 91 1a 01 	lds	r21, 0x011A	; 0x80011a <acidVoltage+0x1>
     fce:	60 91 1b 01 	lds	r22, 0x011B	; 0x80011b <acidVoltage+0x2>
     fd2:	70 91 1c 01 	lds	r23, 0x011C	; 0x80011c <acidVoltage+0x3>
     fd6:	22 e0       	ldi	r18, 0x02	; 2
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	81 e7       	ldi	r24, 0x71	; 113
     fdc:	94 e0       	ldi	r25, 0x04	; 4
     fde:	0e 94 c5 10 	call	0x218a	; 0x218a <_ZN5Print5printEdi>
	Serial.write("\nVoltage Measured:");
     fe2:	66 e8       	ldi	r22, 0x86	; 134
     fe4:	72 e0       	ldi	r23, 0x02	; 2
     fe6:	81 e7       	ldi	r24, 0x71	; 113
     fe8:	94 e0       	ldi	r25, 0x04	; 4
     fea:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
	Serial.print(voltage);
     fee:	22 e0       	ldi	r18, 0x02	; 2
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	b7 01       	movw	r22, r14
     ff4:	a6 01       	movw	r20, r12
     ff6:	81 e7       	ldi	r24, 0x71	; 113
     ff8:	94 e0       	ldi	r25, 0x04	; 4
     ffa:	0e 94 c5 10 	call	0x218a	; 0x218a <_ZN5Print5printEdi>
	return (slope * voltage) + intercept;
     ffe:	a5 01       	movw	r20, r10
    1000:	94 01       	movw	r18, r8
    1002:	c3 01       	movw	r24, r6
    1004:	b2 01       	movw	r22, r4
    1006:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__mulsf3>
    100a:	9b 01       	movw	r18, r22
    100c:	ac 01       	movw	r20, r24
    100e:	60 e0       	ldi	r22, 0x00	; 0
    1010:	70 e0       	ldi	r23, 0x00	; 0
    1012:	80 ee       	ldi	r24, 0xE0	; 224
    1014:	90 e4       	ldi	r25, 0x40	; 64
    1016:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
    101a:	2b 01       	movw	r4, r22
    101c:	3c 01       	movw	r6, r24
    101e:	a5 01       	movw	r20, r10
    1020:	94 01       	movw	r18, r8
    1022:	c7 01       	movw	r24, r14
    1024:	b6 01       	movw	r22, r12
    1026:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__mulsf3>
    102a:	9b 01       	movw	r18, r22
    102c:	ac 01       	movw	r20, r24
    102e:	c3 01       	movw	r24, r6
    1030:	b2 01       	movw	r22, r4
    1032:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
    1036:	ff 90       	pop	r15
    1038:	ef 90       	pop	r14
    103a:	df 90       	pop	r13
    103c:	cf 90       	pop	r12
    103e:	bf 90       	pop	r11
    1040:	af 90       	pop	r10
    1042:	9f 90       	pop	r9
    1044:	8f 90       	pop	r8
    1046:	7f 90       	pop	r7
    1048:	6f 90       	pop	r6
    104a:	5f 90       	pop	r5
    104c:	4f 90       	pop	r4
    104e:	08 95       	ret

00001050 <_GLOBAL__sub_I_ph>:
#include "phSensor.h"

DFRobot_PH ph;
    1050:	8e e0       	ldi	r24, 0x0E	; 14
    1052:	94 e0       	ldi	r25, 0x04	; 4
    1054:	0c 94 ac 00 	jmp	0x158	; 0x158 <_ZN10DFRobot_PHC1Ev>

00001058 <_GLOBAL__sub_D_ph>:
    1058:	8e e0       	ldi	r24, 0x0E	; 14
    105a:	94 e0       	ldi	r25, 0x04	; 4
    105c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_ZN10DFRobot_PHD1Ev>

00001060 <_ZN9MD_TCS23010initialiseEv>:
    1060:	0f 93       	push	r16
    1062:	1f 93       	push	r17
    1064:	fc 01       	movw	r30, r24
    1066:	8f ef       	ldi	r24, 0xFF	; 255
    1068:	80 83       	st	Z, r24
    106a:	81 83       	std	Z+1, r24	; 0x01
    106c:	82 83       	std	Z+2, r24	; 0x02
    106e:	83 83       	std	Z+3, r24	; 0x03
    1070:	84 83       	std	Z+4, r24	; 0x04
    1072:	8a e0       	ldi	r24, 0x0A	; 10
    1074:	85 83       	std	Z+5, r24	; 0x05
    1076:	16 82       	std	Z+6, r1	; 0x06
    1078:	df 01       	movw	r26, r30
    107a:	17 96       	adiw	r26, 0x07	; 7
    107c:	73 96       	adiw	r30, 0x13	; 19
    107e:	00 e7       	ldi	r16, 0x70	; 112
    1080:	17 e1       	ldi	r17, 0x17	; 23
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	48 ed       	ldi	r20, 0xD8	; 216
    1088:	56 ed       	ldi	r21, 0xD6	; 214
    108a:	60 e0       	ldi	r22, 0x00	; 0
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	0d 93       	st	X+, r16
    1090:	1d 93       	st	X+, r17
    1092:	2d 93       	st	X+, r18
    1094:	3d 93       	st	X+, r19
    1096:	18 96       	adiw	r26, 0x08	; 8
    1098:	4d 93       	st	X+, r20
    109a:	5d 93       	st	X+, r21
    109c:	6d 93       	st	X+, r22
    109e:	7c 93       	st	X, r23
    10a0:	1b 97       	sbiw	r26, 0x0b	; 11
    10a2:	ae 17       	cp	r26, r30
    10a4:	bf 07       	cpc	r27, r31
    10a6:	99 f7       	brne	.-26     	; 0x108e <_ZN9MD_TCS23010initialiseEv+0x2e>
    10a8:	1f 91       	pop	r17
    10aa:	0f 91       	pop	r16
    10ac:	08 95       	ret

000010ae <_ZN9MD_TCS230C1Ehhh>:
    10ae:	ff 92       	push	r15
    10b0:	0f 93       	push	r16
    10b2:	1f 93       	push	r17
    10b4:	cf 93       	push	r28
    10b6:	df 93       	push	r29
    10b8:	ec 01       	movw	r28, r24
    10ba:	f6 2e       	mov	r15, r22
    10bc:	04 2f       	mov	r16, r20
    10be:	12 2f       	mov	r17, r18
    10c0:	0e 94 30 08 	call	0x1060	; 0x1060 <_ZN9MD_TCS23010initialiseEv>
    10c4:	fb 82       	std	Y+3, r15	; 0x03
    10c6:	0c 83       	std	Y+4, r16	; 0x04
    10c8:	18 83       	st	Y, r17
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	1f 91       	pop	r17
    10d0:	0f 91       	pop	r16
    10d2:	ff 90       	pop	r15
    10d4:	08 95       	ret

000010d6 <_ZN9MD_TCS230D1Ev>:
    10d6:	08 95       	ret

000010d8 <_ZN9MD_TCS23013setFrequency2Eh>:
    10d8:	cf 93       	push	r28
    10da:	df 93       	push	r29
    10dc:	ec 01       	movw	r28, r24
    10de:	89 81       	ldd	r24, Y+1	; 0x01
    10e0:	8f 3f       	cpi	r24, 0xFF	; 255
    10e2:	e9 f0       	breq	.+58     	; 0x111e <_ZN9MD_TCS23013setFrequency2Eh+0x46>
    10e4:	9a 81       	ldd	r25, Y+2	; 0x02
    10e6:	9f 3f       	cpi	r25, 0xFF	; 255
    10e8:	d1 f0       	breq	.+52     	; 0x111e <_ZN9MD_TCS23013setFrequency2Eh+0x46>
    10ea:	61 30       	cpi	r22, 0x01	; 1
    10ec:	49 f0       	breq	.+18     	; 0x1100 <_ZN9MD_TCS23013setFrequency2Eh+0x28>
    10ee:	30 f0       	brcs	.+12     	; 0x10fc <_ZN9MD_TCS23013setFrequency2Eh+0x24>
    10f0:	62 30       	cpi	r22, 0x02	; 2
    10f2:	41 f0       	breq	.+16     	; 0x1104 <_ZN9MD_TCS23013setFrequency2Eh+0x2c>
    10f4:	63 30       	cpi	r22, 0x03	; 3
    10f6:	99 f4       	brne	.+38     	; 0x111e <_ZN9MD_TCS23013setFrequency2Eh+0x46>
    10f8:	60 e0       	ldi	r22, 0x00	; 0
    10fa:	09 c0       	rjmp	.+18     	; 0x110e <_ZN9MD_TCS23013setFrequency2Eh+0x36>
    10fc:	61 e0       	ldi	r22, 0x01	; 1
    10fe:	03 c0       	rjmp	.+6      	; 0x1106 <_ZN9MD_TCS23013setFrequency2Eh+0x2e>
    1100:	61 e0       	ldi	r22, 0x01	; 1
    1102:	05 c0       	rjmp	.+10     	; 0x110e <_ZN9MD_TCS23013setFrequency2Eh+0x36>
    1104:	60 e0       	ldi	r22, 0x00	; 0
    1106:	0e 94 1a 13 	call	0x2634	; 0x2634 <digitalWrite>
    110a:	61 e0       	ldi	r22, 0x01	; 1
    110c:	03 c0       	rjmp	.+6      	; 0x1114 <_ZN9MD_TCS23013setFrequency2Eh+0x3c>
    110e:	0e 94 1a 13 	call	0x2634	; 0x2634 <digitalWrite>
    1112:	60 e0       	ldi	r22, 0x00	; 0
    1114:	8a 81       	ldd	r24, Y+2	; 0x02
    1116:	df 91       	pop	r29
    1118:	cf 91       	pop	r28
    111a:	0c 94 1a 13 	jmp	0x2634	; 0x2634 <digitalWrite>
    111e:	df 91       	pop	r29
    1120:	cf 91       	pop	r28
    1122:	08 95       	ret

00001124 <_ZN9MD_TCS2309setEnableEb>:
    1124:	fc 01       	movw	r30, r24
    1126:	20 81       	ld	r18, Z
    1128:	2f 3f       	cpi	r18, 0xFF	; 255
    112a:	29 f0       	breq	.+10     	; 0x1136 <_ZN9MD_TCS2309setEnableEb+0x12>
    112c:	91 e0       	ldi	r25, 0x01	; 1
    112e:	69 27       	eor	r22, r25
    1130:	82 2f       	mov	r24, r18
    1132:	0c 94 1a 13 	jmp	0x2634	; 0x2634 <digitalWrite>
    1136:	66 23       	and	r22, r22
    1138:	19 f0       	breq	.+6      	; 0x1140 <_ZN9MD_TCS2309setEnableEb+0x1c>
    113a:	fc 01       	movw	r30, r24
    113c:	66 81       	ldd	r22, Z+6	; 0x06
    113e:	01 c0       	rjmp	.+2      	; 0x1142 <_ZN9MD_TCS2309setEnableEb+0x1e>
    1140:	63 e0       	ldi	r22, 0x03	; 3
    1142:	0c 94 6c 08 	jmp	0x10d8	; 0x10d8 <_ZN9MD_TCS23013setFrequency2Eh>

00001146 <_ZN9MD_TCS2305beginEv>:
    1146:	cf 93       	push	r28
    1148:	df 93       	push	r29
    114a:	ec 01       	movw	r28, r24
    114c:	89 81       	ldd	r24, Y+1	; 0x01
    114e:	8f 3f       	cpi	r24, 0xFF	; 255
    1150:	19 f0       	breq	.+6      	; 0x1158 <_ZN9MD_TCS2305beginEv+0x12>
    1152:	61 e0       	ldi	r22, 0x01	; 1
    1154:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
    1158:	8a 81       	ldd	r24, Y+2	; 0x02
    115a:	8f 3f       	cpi	r24, 0xFF	; 255
    115c:	19 f0       	breq	.+6      	; 0x1164 <_ZN9MD_TCS2305beginEv+0x1e>
    115e:	61 e0       	ldi	r22, 0x01	; 1
    1160:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
    1164:	8b 81       	ldd	r24, Y+3	; 0x03
    1166:	8f 3f       	cpi	r24, 0xFF	; 255
    1168:	19 f0       	breq	.+6      	; 0x1170 <_ZN9MD_TCS2305beginEv+0x2a>
    116a:	61 e0       	ldi	r22, 0x01	; 1
    116c:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
    1170:	8c 81       	ldd	r24, Y+4	; 0x04
    1172:	8f 3f       	cpi	r24, 0xFF	; 255
    1174:	19 f0       	breq	.+6      	; 0x117c <_ZN9MD_TCS2305beginEv+0x36>
    1176:	61 e0       	ldi	r22, 0x01	; 1
    1178:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
    117c:	88 81       	ld	r24, Y
    117e:	8f 3f       	cpi	r24, 0xFF	; 255
    1180:	19 f0       	breq	.+6      	; 0x1188 <_ZN9MD_TCS2305beginEv+0x42>
    1182:	61 e0       	ldi	r22, 0x01	; 1
    1184:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
    1188:	60 e0       	ldi	r22, 0x00	; 0
    118a:	ce 01       	movw	r24, r28
    118c:	0e 94 92 08 	call	0x1124	; 0x1124 <_ZN9MD_TCS2309setEnableEb>
    1190:	6e 81       	ldd	r22, Y+6	; 0x06
    1192:	ce 01       	movw	r24, r28
    1194:	df 91       	pop	r29
    1196:	cf 91       	pop	r28
    1198:	0c 94 6c 08 	jmp	0x10d8	; 0x10d8 <_ZN9MD_TCS23013setFrequency2Eh>

0000119c <_ZN5Print17availableForWriteEv>:
uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
  else
    return 1;
}
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	08 95       	ret

000011a2 <_ZN14SoftwareSerial4readEv>:
    11a2:	20 91 6f 04 	lds	r18, 0x046F	; 0x80046f <_ZN14SoftwareSerial13active_objectE>
    11a6:	30 91 70 04 	lds	r19, 0x0470	; 0x800470 <_ZN14SoftwareSerial13active_objectE+0x1>
    11aa:	28 17       	cp	r18, r24
    11ac:	39 07       	cpc	r19, r25
    11ae:	b9 f4       	brne	.+46     	; 0x11de <_ZN14SoftwareSerial4readEv+0x3c>
    11b0:	90 91 2d 04 	lds	r25, 0x042D	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    11b4:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <_ZN14SoftwareSerial20_receive_buffer_tailE>
    11b8:	98 17       	cp	r25, r24
    11ba:	89 f0       	breq	.+34     	; 0x11de <_ZN14SoftwareSerial4readEv+0x3c>
    11bc:	e0 91 2d 04 	lds	r30, 0x042D	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    11c0:	f0 e0       	ldi	r31, 0x00	; 0
    11c2:	e1 5d       	subi	r30, 0xD1	; 209
    11c4:	fb 4f       	sbci	r31, 0xFB	; 251
    11c6:	80 81       	ld	r24, Z
    11c8:	20 91 2d 04 	lds	r18, 0x042D	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    11cc:	30 e0       	ldi	r19, 0x00	; 0
    11ce:	2f 5f       	subi	r18, 0xFF	; 255
    11d0:	3f 4f       	sbci	r19, 0xFF	; 255
    11d2:	2f 73       	andi	r18, 0x3F	; 63
    11d4:	33 27       	eor	r19, r19
    11d6:	20 93 2d 04 	sts	0x042D, r18	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    11da:	90 e0       	ldi	r25, 0x00	; 0
    11dc:	08 95       	ret
    11de:	8f ef       	ldi	r24, 0xFF	; 255
    11e0:	9f ef       	ldi	r25, 0xFF	; 255
    11e2:	08 95       	ret

000011e4 <_ZN14SoftwareSerial5writeEh>:
    11e4:	1f 93       	push	r17
    11e6:	cf 93       	push	r28
    11e8:	df 93       	push	r29
    11ea:	dc 01       	movw	r26, r24
    11ec:	5c 96       	adiw	r26, 0x1c	; 28
    11ee:	8d 91       	ld	r24, X+
    11f0:	9c 91       	ld	r25, X
    11f2:	5d 97       	sbiw	r26, 0x1d	; 29
    11f4:	00 97       	sbiw	r24, 0x00	; 0
    11f6:	39 f4       	brne	.+14     	; 0x1206 <_ZN14SoftwareSerial5writeEh+0x22>
    11f8:	21 e0       	ldi	r18, 0x01	; 1
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	13 96       	adiw	r26, 0x03	; 3
    11fe:	3c 93       	st	X, r19
    1200:	2e 93       	st	-X, r18
    1202:	12 97       	sbiw	r26, 0x02	; 2
    1204:	3b c0       	rjmp	.+118    	; 0x127c <_ZN14SoftwareSerial5writeEh+0x98>
    1206:	51 96       	adiw	r26, 0x11	; 17
    1208:	ed 91       	ld	r30, X+
    120a:	fc 91       	ld	r31, X
    120c:	52 97       	sbiw	r26, 0x12	; 18
    120e:	50 96       	adiw	r26, 0x10	; 16
    1210:	2c 91       	ld	r18, X
    1212:	50 97       	sbiw	r26, 0x10	; 16
    1214:	32 2f       	mov	r19, r18
    1216:	30 95       	com	r19
    1218:	1f b7       	in	r17, 0x3f	; 63
    121a:	5e 96       	adiw	r26, 0x1e	; 30
    121c:	4c 91       	ld	r20, X
    121e:	5e 97       	sbiw	r26, 0x1e	; 30
    1220:	74 2f       	mov	r23, r20
    1222:	72 70       	andi	r23, 0x02	; 2
    1224:	41 fd       	sbrc	r20, 1
    1226:	60 95       	com	r22
    1228:	f8 94       	cli
    122a:	40 81       	ld	r20, Z
    122c:	77 23       	and	r23, r23
    122e:	11 f0       	breq	.+4      	; 0x1234 <_ZN14SoftwareSerial5writeEh+0x50>
    1230:	42 2b       	or	r20, r18
    1232:	01 c0       	rjmp	.+2      	; 0x1236 <_ZN14SoftwareSerial5writeEh+0x52>
    1234:	43 23       	and	r20, r19
    1236:	40 83       	st	Z, r20
    1238:	ec 01       	movw	r28, r24
    123a:	21 97       	sbiw	r28, 0x01	; 1
    123c:	f1 f7       	brne	.-4      	; 0x123a <_ZN14SoftwareSerial5writeEh+0x56>
    123e:	48 e0       	ldi	r20, 0x08	; 8
    1240:	50 81       	ld	r21, Z
    1242:	60 ff       	sbrs	r22, 0
    1244:	02 c0       	rjmp	.+4      	; 0x124a <_ZN14SoftwareSerial5writeEh+0x66>
    1246:	52 2b       	or	r21, r18
    1248:	01 c0       	rjmp	.+2      	; 0x124c <_ZN14SoftwareSerial5writeEh+0x68>
    124a:	53 23       	and	r21, r19
    124c:	50 83       	st	Z, r21
    124e:	ec 01       	movw	r28, r24
    1250:	21 97       	sbiw	r28, 0x01	; 1
    1252:	f1 f7       	brne	.-4      	; 0x1250 <_ZN14SoftwareSerial5writeEh+0x6c>
    1254:	66 95       	lsr	r22
    1256:	41 50       	subi	r20, 0x01	; 1
    1258:	99 f7       	brne	.-26     	; 0x1240 <_ZN14SoftwareSerial5writeEh+0x5c>
    125a:	80 81       	ld	r24, Z
    125c:	77 23       	and	r23, r23
    125e:	19 f0       	breq	.+6      	; 0x1266 <_ZN14SoftwareSerial5writeEh+0x82>
    1260:	83 23       	and	r24, r19
    1262:	80 83       	st	Z, r24
    1264:	02 c0       	rjmp	.+4      	; 0x126a <_ZN14SoftwareSerial5writeEh+0x86>
    1266:	28 2b       	or	r18, r24
    1268:	20 83       	st	Z, r18
    126a:	1f bf       	out	0x3f, r17	; 63
    126c:	5c 96       	adiw	r26, 0x1c	; 28
    126e:	8d 91       	ld	r24, X+
    1270:	9c 91       	ld	r25, X
    1272:	5d 97       	sbiw	r26, 0x1d	; 29
    1274:	01 97       	sbiw	r24, 0x01	; 1
    1276:	f1 f7       	brne	.-4      	; 0x1274 <_ZN14SoftwareSerial5writeEh+0x90>
    1278:	81 e0       	ldi	r24, 0x01	; 1
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	df 91       	pop	r29
    127e:	cf 91       	pop	r28
    1280:	1f 91       	pop	r17
    1282:	08 95       	ret

00001284 <_ZN14SoftwareSerial5flushEv>:
    1284:	08 95       	ret

00001286 <_ZN14SoftwareSerial4peekEv>:
    1286:	20 91 6f 04 	lds	r18, 0x046F	; 0x80046f <_ZN14SoftwareSerial13active_objectE>
    128a:	30 91 70 04 	lds	r19, 0x0470	; 0x800470 <_ZN14SoftwareSerial13active_objectE+0x1>
    128e:	28 17       	cp	r18, r24
    1290:	39 07       	cpc	r19, r25
    1292:	71 f4       	brne	.+28     	; 0x12b0 <_ZN14SoftwareSerial4peekEv+0x2a>
    1294:	90 91 2d 04 	lds	r25, 0x042D	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    1298:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <_ZN14SoftwareSerial20_receive_buffer_tailE>
    129c:	98 17       	cp	r25, r24
    129e:	41 f0       	breq	.+16     	; 0x12b0 <_ZN14SoftwareSerial4peekEv+0x2a>
    12a0:	e0 91 2d 04 	lds	r30, 0x042D	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    12a4:	f0 e0       	ldi	r31, 0x00	; 0
    12a6:	e1 5d       	subi	r30, 0xD1	; 209
    12a8:	fb 4f       	sbci	r31, 0xFB	; 251
    12aa:	80 81       	ld	r24, Z
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	08 95       	ret
    12b0:	8f ef       	ldi	r24, 0xFF	; 255
    12b2:	9f ef       	ldi	r25, 0xFF	; 255
    12b4:	08 95       	ret

000012b6 <_ZN14SoftwareSerial9availableEv>:
    12b6:	20 91 6f 04 	lds	r18, 0x046F	; 0x80046f <_ZN14SoftwareSerial13active_objectE>
    12ba:	30 91 70 04 	lds	r19, 0x0470	; 0x800470 <_ZN14SoftwareSerial13active_objectE+0x1>
    12be:	28 17       	cp	r18, r24
    12c0:	39 07       	cpc	r19, r25
    12c2:	71 f4       	brne	.+28     	; 0x12e0 <_ZN14SoftwareSerial9availableEv+0x2a>
    12c4:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <_ZN14SoftwareSerial20_receive_buffer_tailE>
    12c8:	20 91 2d 04 	lds	r18, 0x042D	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	80 5c       	subi	r24, 0xC0	; 192
    12d0:	9f 4f       	sbci	r25, 0xFF	; 255
    12d2:	82 1b       	sub	r24, r18
    12d4:	91 09       	sbc	r25, r1
    12d6:	60 e4       	ldi	r22, 0x40	; 64
    12d8:	70 e0       	ldi	r23, 0x00	; 0
    12da:	0e 94 92 1f 	call	0x3f24	; 0x3f24 <__divmodhi4>
    12de:	08 95       	ret
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	08 95       	ret

000012e6 <_ZN14SoftwareSerial13stopListeningEv>:
    12e6:	e0 91 6f 04 	lds	r30, 0x046F	; 0x80046f <_ZN14SoftwareSerial13active_objectE>
    12ea:	f0 91 70 04 	lds	r31, 0x0470	; 0x800470 <_ZN14SoftwareSerial13active_objectE+0x1>
    12ee:	e8 17       	cp	r30, r24
    12f0:	f9 07       	cpc	r31, r25
    12f2:	69 f4       	brne	.+26     	; 0x130e <_ZN14SoftwareSerial13stopListeningEv+0x28>
    12f4:	a3 89       	ldd	r26, Z+19	; 0x13
    12f6:	b4 89       	ldd	r27, Z+20	; 0x14
    12f8:	9c 91       	ld	r25, X
    12fa:	85 89       	ldd	r24, Z+21	; 0x15
    12fc:	80 95       	com	r24
    12fe:	89 23       	and	r24, r25
    1300:	8c 93       	st	X, r24
    1302:	10 92 70 04 	sts	0x0470, r1	; 0x800470 <_ZN14SoftwareSerial13active_objectE+0x1>
    1306:	10 92 6f 04 	sts	0x046F, r1	; 0x80046f <_ZN14SoftwareSerial13active_objectE>
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	08 95       	ret
    130e:	80 e0       	ldi	r24, 0x00	; 0
    1310:	08 95       	ret

00001312 <_ZN14SoftwareSerial6listenEv>:
    1312:	cf 93       	push	r28
    1314:	df 93       	push	r29
    1316:	ec 01       	movw	r28, r24
    1318:	8a 8d       	ldd	r24, Y+26	; 0x1a
    131a:	9b 8d       	ldd	r25, Y+27	; 0x1b
    131c:	89 2b       	or	r24, r25
    131e:	f1 f0       	breq	.+60     	; 0x135c <_ZN14SoftwareSerial6listenEv+0x4a>
    1320:	80 91 6f 04 	lds	r24, 0x046F	; 0x80046f <_ZN14SoftwareSerial13active_objectE>
    1324:	90 91 70 04 	lds	r25, 0x0470	; 0x800470 <_ZN14SoftwareSerial13active_objectE+0x1>
    1328:	c8 17       	cp	r28, r24
    132a:	d9 07       	cpc	r29, r25
    132c:	b9 f0       	breq	.+46     	; 0x135c <_ZN14SoftwareSerial6listenEv+0x4a>
    132e:	00 97       	sbiw	r24, 0x00	; 0
    1330:	11 f0       	breq	.+4      	; 0x1336 <_ZN14SoftwareSerial6listenEv+0x24>
    1332:	0e 94 73 09 	call	0x12e6	; 0x12e6 <_ZN14SoftwareSerial13stopListeningEv>
    1336:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1338:	8e 7f       	andi	r24, 0xFE	; 254
    133a:	8e 8f       	std	Y+30, r24	; 0x1e
    133c:	10 92 2e 04 	sts	0x042E, r1	; 0x80042e <_ZN14SoftwareSerial20_receive_buffer_tailE>
    1340:	10 92 2d 04 	sts	0x042D, r1	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    1344:	d0 93 70 04 	sts	0x0470, r29	; 0x800470 <_ZN14SoftwareSerial13active_objectE+0x1>
    1348:	c0 93 6f 04 	sts	0x046F, r28	; 0x80046f <_ZN14SoftwareSerial13active_objectE>
    134c:	eb 89       	ldd	r30, Y+19	; 0x13
    134e:	fc 89       	ldd	r31, Y+20	; 0x14
    1350:	90 81       	ld	r25, Z
    1352:	8d 89       	ldd	r24, Y+21	; 0x15
    1354:	89 2b       	or	r24, r25
    1356:	80 83       	st	Z, r24
    1358:	81 e0       	ldi	r24, 0x01	; 1
    135a:	01 c0       	rjmp	.+2      	; 0x135e <_ZN14SoftwareSerial6listenEv+0x4c>
    135c:	80 e0       	ldi	r24, 0x00	; 0
    135e:	df 91       	pop	r29
    1360:	cf 91       	pop	r28
    1362:	08 95       	ret

00001364 <__vector_3>:
    1364:	1f 92       	push	r1
    1366:	0f 92       	push	r0
    1368:	0f b6       	in	r0, 0x3f	; 63
    136a:	0f 92       	push	r0
    136c:	11 24       	eor	r1, r1
    136e:	2f 93       	push	r18
    1370:	3f 93       	push	r19
    1372:	4f 93       	push	r20
    1374:	5f 93       	push	r21
    1376:	6f 93       	push	r22
    1378:	7f 93       	push	r23
    137a:	8f 93       	push	r24
    137c:	9f 93       	push	r25
    137e:	af 93       	push	r26
    1380:	bf 93       	push	r27
    1382:	ef 93       	push	r30
    1384:	ff 93       	push	r31
    1386:	e0 91 6f 04 	lds	r30, 0x046F	; 0x80046f <_ZN14SoftwareSerial13active_objectE>
    138a:	f0 91 70 04 	lds	r31, 0x0470	; 0x800470 <_ZN14SoftwareSerial13active_objectE+0x1>
    138e:	30 97       	sbiw	r30, 0x00	; 0
    1390:	09 f4       	brne	.+2      	; 0x1394 <__vector_3+0x30>
    1392:	51 c0       	rjmp	.+162    	; 0x1436 <__vector_3+0xd2>
    1394:	96 8d       	ldd	r25, Z+30	; 0x1e
    1396:	a6 85       	ldd	r26, Z+14	; 0x0e
    1398:	b7 85       	ldd	r27, Z+15	; 0x0f
    139a:	85 85       	ldd	r24, Z+13	; 0x0d
    139c:	91 ff       	sbrs	r25, 1
    139e:	04 c0       	rjmp	.+8      	; 0x13a8 <__vector_3+0x44>
    13a0:	9c 91       	ld	r25, X
    13a2:	89 23       	and	r24, r25
    13a4:	29 f4       	brne	.+10     	; 0x13b0 <__vector_3+0x4c>
    13a6:	47 c0       	rjmp	.+142    	; 0x1436 <__vector_3+0xd2>
    13a8:	9c 91       	ld	r25, X
    13aa:	89 23       	and	r24, r25
    13ac:	09 f0       	breq	.+2      	; 0x13b0 <__vector_3+0x4c>
    13ae:	43 c0       	rjmp	.+134    	; 0x1436 <__vector_3+0xd2>
    13b0:	a3 89       	ldd	r26, Z+19	; 0x13
    13b2:	b4 89       	ldd	r27, Z+20	; 0x14
    13b4:	9c 91       	ld	r25, X
    13b6:	85 89       	ldd	r24, Z+21	; 0x15
    13b8:	80 95       	com	r24
    13ba:	89 23       	and	r24, r25
    13bc:	8c 93       	st	X, r24
    13be:	86 89       	ldd	r24, Z+22	; 0x16
    13c0:	97 89       	ldd	r25, Z+23	; 0x17
    13c2:	01 97       	sbiw	r24, 0x01	; 1
    13c4:	f1 f7       	brne	.-4      	; 0x13c2 <__vector_3+0x5e>
    13c6:	60 8d       	ldd	r22, Z+24	; 0x18
    13c8:	71 8d       	ldd	r23, Z+25	; 0x19
    13ca:	a6 85       	ldd	r26, Z+14	; 0x0e
    13cc:	b7 85       	ldd	r27, Z+15	; 0x0f
    13ce:	55 85       	ldd	r21, Z+13	; 0x0d
    13d0:	38 e0       	ldi	r19, 0x08	; 8
    13d2:	20 e0       	ldi	r18, 0x00	; 0
    13d4:	cb 01       	movw	r24, r22
    13d6:	01 97       	sbiw	r24, 0x01	; 1
    13d8:	f1 f7       	brne	.-4      	; 0x13d6 <__vector_3+0x72>
    13da:	82 2f       	mov	r24, r18
    13dc:	90 e0       	ldi	r25, 0x00	; 0
    13de:	95 95       	asr	r25
    13e0:	87 95       	ror	r24
    13e2:	28 2f       	mov	r18, r24
    13e4:	4c 91       	ld	r20, X
    13e6:	45 23       	and	r20, r21
    13e8:	09 f0       	breq	.+2      	; 0x13ec <__vector_3+0x88>
    13ea:	20 68       	ori	r18, 0x80	; 128
    13ec:	31 50       	subi	r19, 0x01	; 1
    13ee:	91 f7       	brne	.-28     	; 0x13d4 <__vector_3+0x70>
    13f0:	86 8d       	ldd	r24, Z+30	; 0x1e
    13f2:	81 fd       	sbrc	r24, 1
    13f4:	20 95       	com	r18
    13f6:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <_ZN14SoftwareSerial20_receive_buffer_tailE>
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	01 96       	adiw	r24, 0x01	; 1
    13fe:	8f 73       	andi	r24, 0x3F	; 63
    1400:	99 27       	eor	r25, r25
    1402:	30 91 2d 04 	lds	r19, 0x042D	; 0x80042d <_ZN14SoftwareSerial20_receive_buffer_headE>
    1406:	38 17       	cp	r19, r24
    1408:	49 f0       	breq	.+18     	; 0x141c <__vector_3+0xb8>
    140a:	a0 91 2e 04 	lds	r26, 0x042E	; 0x80042e <_ZN14SoftwareSerial20_receive_buffer_tailE>
    140e:	b0 e0       	ldi	r27, 0x00	; 0
    1410:	a1 5d       	subi	r26, 0xD1	; 209
    1412:	bb 4f       	sbci	r27, 0xFB	; 251
    1414:	2c 93       	st	X, r18
    1416:	80 93 2e 04 	sts	0x042E, r24	; 0x80042e <_ZN14SoftwareSerial20_receive_buffer_tailE>
    141a:	03 c0       	rjmp	.+6      	; 0x1422 <__vector_3+0xbe>
    141c:	86 8d       	ldd	r24, Z+30	; 0x1e
    141e:	81 60       	ori	r24, 0x01	; 1
    1420:	86 8f       	std	Z+30, r24	; 0x1e
    1422:	82 8d       	ldd	r24, Z+26	; 0x1a
    1424:	93 8d       	ldd	r25, Z+27	; 0x1b
    1426:	01 97       	sbiw	r24, 0x01	; 1
    1428:	f1 f7       	brne	.-4      	; 0x1426 <__vector_3+0xc2>
    142a:	a3 89       	ldd	r26, Z+19	; 0x13
    142c:	b4 89       	ldd	r27, Z+20	; 0x14
    142e:	9c 91       	ld	r25, X
    1430:	85 89       	ldd	r24, Z+21	; 0x15
    1432:	89 2b       	or	r24, r25
    1434:	8c 93       	st	X, r24
    1436:	ff 91       	pop	r31
    1438:	ef 91       	pop	r30
    143a:	bf 91       	pop	r27
    143c:	af 91       	pop	r26
    143e:	9f 91       	pop	r25
    1440:	8f 91       	pop	r24
    1442:	7f 91       	pop	r23
    1444:	6f 91       	pop	r22
    1446:	5f 91       	pop	r21
    1448:	4f 91       	pop	r20
    144a:	3f 91       	pop	r19
    144c:	2f 91       	pop	r18
    144e:	0f 90       	pop	r0
    1450:	0f be       	out	0x3f, r0	; 63
    1452:	0f 90       	pop	r0
    1454:	1f 90       	pop	r1
    1456:	18 95       	reti

00001458 <_ZN14SoftwareSerialD1Ev>:
    1458:	2d e9       	ldi	r18, 0x9D	; 157
    145a:	32 e0       	ldi	r19, 0x02	; 2
    145c:	fc 01       	movw	r30, r24
    145e:	31 83       	std	Z+1, r19	; 0x01
    1460:	20 83       	st	Z, r18
    1462:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <_ZN14SoftwareSerial13stopListeningEv>

00001466 <_ZN14SoftwareSerial5setTXEh>:
    1466:	1f 93       	push	r17
    1468:	cf 93       	push	r28
    146a:	df 93       	push	r29
    146c:	ec 01       	movw	r28, r24
    146e:	16 2f       	mov	r17, r22
    1470:	6e 8d       	ldd	r22, Y+30	; 0x1e
    1472:	66 95       	lsr	r22
    1474:	61 70       	andi	r22, 0x01	; 1
    1476:	81 e0       	ldi	r24, 0x01	; 1
    1478:	68 27       	eor	r22, r24
    147a:	81 2f       	mov	r24, r17
    147c:	0e 94 1a 13 	call	0x2634	; 0x2634 <digitalWrite>
    1480:	61 e0       	ldi	r22, 0x01	; 1
    1482:	81 2f       	mov	r24, r17
    1484:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
    1488:	81 2f       	mov	r24, r17
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	fc 01       	movw	r30, r24
    148e:	e0 55       	subi	r30, 0x50	; 80
    1490:	ff 4f       	sbci	r31, 0xFF	; 255
    1492:	e4 91       	lpm	r30, Z
    1494:	e8 8b       	std	Y+16, r30	; 0x10
    1496:	fc 01       	movw	r30, r24
    1498:	ec 53       	subi	r30, 0x3C	; 60
    149a:	ff 4f       	sbci	r31, 0xFF	; 255
    149c:	e4 91       	lpm	r30, Z
    149e:	f0 e0       	ldi	r31, 0x00	; 0
    14a0:	ee 0f       	add	r30, r30
    14a2:	ff 1f       	adc	r31, r31
    14a4:	ee 51       	subi	r30, 0x1E	; 30
    14a6:	ff 4f       	sbci	r31, 0xFF	; 255
    14a8:	85 91       	lpm	r24, Z+
    14aa:	94 91       	lpm	r25, Z
    14ac:	9a 8b       	std	Y+18, r25	; 0x12
    14ae:	89 8b       	std	Y+17, r24	; 0x11
    14b0:	df 91       	pop	r29
    14b2:	cf 91       	pop	r28
    14b4:	1f 91       	pop	r17
    14b6:	08 95       	ret

000014b8 <_ZN14SoftwareSerial5setRXEh>:
    14b8:	1f 93       	push	r17
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	ec 01       	movw	r28, r24
    14c0:	16 2f       	mov	r17, r22
    14c2:	60 e0       	ldi	r22, 0x00	; 0
    14c4:	81 2f       	mov	r24, r17
    14c6:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
    14ca:	8e 8d       	ldd	r24, Y+30	; 0x1e
    14cc:	81 fd       	sbrc	r24, 1
    14ce:	04 c0       	rjmp	.+8      	; 0x14d8 <_ZN14SoftwareSerial5setRXEh+0x20>
    14d0:	61 e0       	ldi	r22, 0x01	; 1
    14d2:	81 2f       	mov	r24, r17
    14d4:	0e 94 1a 13 	call	0x2634	; 0x2634 <digitalWrite>
    14d8:	1c 87       	std	Y+12, r17	; 0x0c
    14da:	81 2f       	mov	r24, r17
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	fc 01       	movw	r30, r24
    14e0:	e0 55       	subi	r30, 0x50	; 80
    14e2:	ff 4f       	sbci	r31, 0xFF	; 255
    14e4:	e4 91       	lpm	r30, Z
    14e6:	ed 87       	std	Y+13, r30	; 0x0d
    14e8:	fc 01       	movw	r30, r24
    14ea:	ec 53       	subi	r30, 0x3C	; 60
    14ec:	ff 4f       	sbci	r31, 0xFF	; 255
    14ee:	e4 91       	lpm	r30, Z
    14f0:	f0 e0       	ldi	r31, 0x00	; 0
    14f2:	ee 0f       	add	r30, r30
    14f4:	ff 1f       	adc	r31, r31
    14f6:	e8 52       	subi	r30, 0x28	; 40
    14f8:	ff 4f       	sbci	r31, 0xFF	; 255
    14fa:	85 91       	lpm	r24, Z+
    14fc:	94 91       	lpm	r25, Z
    14fe:	9f 87       	std	Y+15, r25	; 0x0f
    1500:	8e 87       	std	Y+14, r24	; 0x0e
    1502:	df 91       	pop	r29
    1504:	cf 91       	pop	r28
    1506:	1f 91       	pop	r17
    1508:	08 95       	ret

0000150a <_ZN14SoftwareSerialC1Ehhb>:
    150a:	1f 93       	push	r17
    150c:	cf 93       	push	r28
    150e:	df 93       	push	r29
    1510:	ec 01       	movw	r28, r24
    1512:	16 2f       	mov	r17, r22
    1514:	1b 82       	std	Y+3, r1	; 0x03
    1516:	1a 82       	std	Y+2, r1	; 0x02
    1518:	88 ee       	ldi	r24, 0xE8	; 232
    151a:	93 e0       	ldi	r25, 0x03	; 3
    151c:	a0 e0       	ldi	r26, 0x00	; 0
    151e:	b0 e0       	ldi	r27, 0x00	; 0
    1520:	8c 83       	std	Y+4, r24	; 0x04
    1522:	9d 83       	std	Y+5, r25	; 0x05
    1524:	ae 83       	std	Y+6, r26	; 0x06
    1526:	bf 83       	std	Y+7, r27	; 0x07
    1528:	8d e9       	ldi	r24, 0x9D	; 157
    152a:	92 e0       	ldi	r25, 0x02	; 2
    152c:	99 83       	std	Y+1, r25	; 0x01
    152e:	88 83       	st	Y, r24
    1530:	1f 8a       	std	Y+23, r1	; 0x17
    1532:	1e 8a       	std	Y+22, r1	; 0x16
    1534:	19 8e       	std	Y+25, r1	; 0x19
    1536:	18 8e       	std	Y+24, r1	; 0x18
    1538:	1b 8e       	std	Y+27, r1	; 0x1b
    153a:	1a 8e       	std	Y+26, r1	; 0x1a
    153c:	1d 8e       	std	Y+29, r1	; 0x1d
    153e:	1c 8e       	std	Y+28, r1	; 0x1c
    1540:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1542:	8e 7f       	andi	r24, 0xFE	; 254
    1544:	20 fb       	bst	r18, 0
    1546:	81 f9       	bld	r24, 1
    1548:	8e 8f       	std	Y+30, r24	; 0x1e
    154a:	64 2f       	mov	r22, r20
    154c:	ce 01       	movw	r24, r28
    154e:	0e 94 33 0a 	call	0x1466	; 0x1466 <_ZN14SoftwareSerial5setTXEh>
    1552:	61 2f       	mov	r22, r17
    1554:	ce 01       	movw	r24, r28
    1556:	df 91       	pop	r29
    1558:	cf 91       	pop	r28
    155a:	1f 91       	pop	r17
    155c:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <_ZN14SoftwareSerial5setRXEh>

00001560 <_ZN14SoftwareSerial5beginEl>:
//
// Public methods
//

void SoftwareSerial::begin(long speed)
{
    1560:	cf 93       	push	r28
    1562:	df 93       	push	r29
    1564:	ec 01       	movw	r28, r24
    1566:	9a 01       	movw	r18, r20
    1568:	ab 01       	movw	r20, r22
  _rx_delay_centering = _rx_delay_intrabit = _rx_delay_stopbit = _tx_delay = 0;
    156a:	1b 8e       	std	Y+27, r1	; 0x1b
    156c:	1a 8e       	std	Y+26, r1	; 0x1a
    156e:	19 8e       	std	Y+25, r1	; 0x19
    1570:	18 8e       	std	Y+24, r1	; 0x18
    1572:	1f 8a       	std	Y+23, r1	; 0x17
    1574:	1e 8a       	std	Y+22, r1	; 0x16

  // Precalculate the various delays, in number of 4-cycle delays
  uint16_t bit_delay = (F_CPU / speed) / 4;
    1576:	60 e0       	ldi	r22, 0x00	; 0
    1578:	79 e0       	ldi	r23, 0x09	; 9
    157a:	8d e3       	ldi	r24, 0x3D	; 61
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	0e 94 c8 1f 	call	0x3f90	; 0x3f90 <__divmodsi4>
    1582:	f9 01       	movw	r30, r18
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    1584:	24 30       	cpi	r18, 0x04	; 4
    1586:	31 05       	cpc	r19, r1
    1588:	18 f0       	brcs	.+6      	; 0x1590 <_ZN14SoftwareSerial5beginEl+0x30>
    return num - sub;
    158a:	c9 01       	movw	r24, r18
    158c:	03 97       	sbiw	r24, 0x03	; 3
    158e:	02 c0       	rjmp	.+4      	; 0x1594 <_ZN14SoftwareSerial5beginEl+0x34>
  else
    return 1;
    1590:	81 e0       	ldi	r24, 0x01	; 1
    1592:	90 e0       	ldi	r25, 0x00	; 0
  // 12 (gcc 4.8.2) or 13 (gcc 4.3.2) cycles from start bit to first bit,
  // 15 (gcc 4.8.2) or 16 (gcc 4.3.2) cycles between bits,
  // 12 (gcc 4.8.2) or 14 (gcc 4.3.2) cycles from last bit to stop bit
  // These are all close enough to just use 15 cycles, since the inter-bit
  // timings are the most critical (deviations stack 8 times)
  _tx_delay = subtract_cap(bit_delay, 15 / 4);
    1594:	9d 8f       	std	Y+29, r25	; 0x1d
    1596:	8c 8f       	std	Y+28, r24	; 0x1c

  // Only setup rx when we have a valid PCINT for this pin
  if (digitalPinToPCICR(_receivePin)) {
    1598:	6c 85       	ldd	r22, Y+12	; 0x0c
    159a:	66 31       	cpi	r22, 0x16	; 22
    159c:	08 f0       	brcs	.+2      	; 0x15a0 <_ZN14SoftwareSerial5beginEl+0x40>
    159e:	69 c0       	rjmp	.+210    	; 0x1672 <_ZN14SoftwareSerial5beginEl+0x112>
    // are 17 more cycles until the pin value is read (excluding the
    // delay in the loop).
    // We want to have a total delay of 1.5 bit time. Inside the loop,
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);
    15a0:	c9 01       	movw	r24, r18
    15a2:	96 95       	lsr	r25
    15a4:	87 95       	ror	r24
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    15a6:	84 31       	cpi	r24, 0x14	; 20
    15a8:	91 05       	cpc	r25, r1
    15aa:	10 f0       	brcs	.+4      	; 0x15b0 <_ZN14SoftwareSerial5beginEl+0x50>
    return num - sub;
    15ac:	43 97       	sbiw	r24, 0x13	; 19
    15ae:	02 c0       	rjmp	.+4      	; 0x15b4 <_ZN14SoftwareSerial5beginEl+0x54>
  else
    return 1;
    15b0:	81 e0       	ldi	r24, 0x01	; 1
    15b2:	90 e0       	ldi	r25, 0x00	; 0
    // are 17 more cycles until the pin value is read (excluding the
    // delay in the loop).
    // We want to have a total delay of 1.5 bit time. Inside the loop,
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);
    15b4:	9f 8b       	std	Y+23, r25	; 0x17
    15b6:	8e 8b       	std	Y+22, r24	; 0x16
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    15b8:	36 97       	sbiw	r30, 0x06	; 6
    15ba:	18 f0       	brcs	.+6      	; 0x15c2 <_ZN14SoftwareSerial5beginEl+0x62>
    return num - sub;
    15bc:	c9 01       	movw	r24, r18
    15be:	05 97       	sbiw	r24, 0x05	; 5
    15c0:	02 c0       	rjmp	.+4      	; 0x15c6 <_ZN14SoftwareSerial5beginEl+0x66>
  else
    return 1;
    15c2:	81 e0       	ldi	r24, 0x01	; 1
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);

    // There are 23 cycles in each loop iteration (excluding the delay)
    _rx_delay_intrabit = subtract_cap(bit_delay, 23 / 4);
    15c6:	99 8f       	std	Y+25, r25	; 0x19
    15c8:	88 8f       	std	Y+24, r24	; 0x18
    // mask is enabled again (which _must_ happen during the stopbit).
    // This delay aims at 3/4 of a bit time, meaning the end of the
    // delay will be at 1/4th of the stopbit. This allows some extra
    // time for ISR cleanup, which makes 115200 baud at 16Mhz work more
    // reliably
    _rx_delay_stopbit = subtract_cap(bit_delay * 3 / 4, (37 + 11) / 4);
    15ca:	c9 01       	movw	r24, r18
    15cc:	88 0f       	add	r24, r24
    15ce:	99 1f       	adc	r25, r25
    15d0:	28 0f       	add	r18, r24
    15d2:	39 1f       	adc	r19, r25
    15d4:	36 95       	lsr	r19
    15d6:	27 95       	ror	r18
    15d8:	36 95       	lsr	r19
    15da:	27 95       	ror	r18
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    15dc:	2d 30       	cpi	r18, 0x0D	; 13
    15de:	31 05       	cpc	r19, r1
    15e0:	18 f0       	brcs	.+6      	; 0x15e8 <_ZN14SoftwareSerial5beginEl+0x88>
    return num - sub;
    15e2:	2c 50       	subi	r18, 0x0C	; 12
    15e4:	31 09       	sbc	r19, r1
    15e6:	02 c0       	rjmp	.+4      	; 0x15ec <_ZN14SoftwareSerial5beginEl+0x8c>
  else
    return 1;
    15e8:	21 e0       	ldi	r18, 0x01	; 1
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    // mask is enabled again (which _must_ happen during the stopbit).
    // This delay aims at 3/4 of a bit time, meaning the end of the
    // delay will be at 1/4th of the stopbit. This allows some extra
    // time for ISR cleanup, which makes 115200 baud at 16Mhz work more
    // reliably
    _rx_delay_stopbit = subtract_cap(bit_delay * 3 / 4, (37 + 11) / 4);
    15ec:	3b 8f       	std	Y+27, r19	; 0x1b
    15ee:	2a 8f       	std	Y+26, r18	; 0x1a


    // Enable the PCINT for the entire port here, but never disable it
    // (others might also need it, so we disable the interrupt by using
    // the per-pin PCMSK register).
    *digitalPinToPCICR(_receivePin) |= _BV(digitalPinToPCICRbit(_receivePin));
    15f0:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <__DATA_REGION_ORIGIN__+0x8>
    15f4:	68 30       	cpi	r22, 0x08	; 8
    15f6:	50 f0       	brcs	.+20     	; 0x160c <_ZN14SoftwareSerial5beginEl+0xac>
    15f8:	21 e0       	ldi	r18, 0x01	; 1
    15fa:	6e 30       	cpi	r22, 0x0E	; 14
    15fc:	08 f4       	brcc	.+2      	; 0x1600 <_ZN14SoftwareSerial5beginEl+0xa0>
    15fe:	20 e0       	ldi	r18, 0x00	; 0
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	01 c0       	rjmp	.+2      	; 0x1606 <_ZN14SoftwareSerial5beginEl+0xa6>
    1604:	88 0f       	add	r24, r24
    1606:	2a 95       	dec	r18
    1608:	ea f7       	brpl	.-6      	; 0x1604 <_ZN14SoftwareSerial5beginEl+0xa4>
    160a:	01 c0       	rjmp	.+2      	; 0x160e <_ZN14SoftwareSerial5beginEl+0xae>
    160c:	84 e0       	ldi	r24, 0x04	; 4
    160e:	89 2b       	or	r24, r25
    1610:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__DATA_REGION_ORIGIN__+0x8>
    // Precalculate the pcint mask register and value, so setRxIntMask
    // can be used inside the ISR without costing too much time.
    _pcint_maskreg = digitalPinToPCMSK(_receivePin);
    1614:	9c 85       	ldd	r25, Y+12	; 0x0c
    1616:	98 30       	cpi	r25, 0x08	; 8
    1618:	38 f0       	brcs	.+14     	; 0x1628 <_ZN14SoftwareSerial5beginEl+0xc8>
    161a:	9e 30       	cpi	r25, 0x0E	; 14
    161c:	40 f0       	brcs	.+16     	; 0x162e <_ZN14SoftwareSerial5beginEl+0xce>
    161e:	96 31       	cpi	r25, 0x16	; 22
    1620:	48 f0       	brcs	.+18     	; 0x1634 <_ZN14SoftwareSerial5beginEl+0xd4>
    1622:	20 e0       	ldi	r18, 0x00	; 0
    1624:	30 e0       	ldi	r19, 0x00	; 0
    1626:	08 c0       	rjmp	.+16     	; 0x1638 <_ZN14SoftwareSerial5beginEl+0xd8>
    1628:	2d e6       	ldi	r18, 0x6D	; 109
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	05 c0       	rjmp	.+10     	; 0x1638 <_ZN14SoftwareSerial5beginEl+0xd8>
    162e:	2b e6       	ldi	r18, 0x6B	; 107
    1630:	30 e0       	ldi	r19, 0x00	; 0
    1632:	02 c0       	rjmp	.+4      	; 0x1638 <_ZN14SoftwareSerial5beginEl+0xd8>
    1634:	2c e6       	ldi	r18, 0x6C	; 108
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	3c 8b       	std	Y+20, r19	; 0x14
    163a:	2b 8b       	std	Y+19, r18	; 0x13
    _pcint_maskvalue = _BV(digitalPinToPCMSKbit(_receivePin));
    163c:	98 30       	cpi	r25, 0x08	; 8
    163e:	30 f4       	brcc	.+12     	; 0x164c <_ZN14SoftwareSerial5beginEl+0xec>
    1640:	81 e0       	ldi	r24, 0x01	; 1
    1642:	01 c0       	rjmp	.+2      	; 0x1646 <_ZN14SoftwareSerial5beginEl+0xe6>
    1644:	88 0f       	add	r24, r24
    1646:	9a 95       	dec	r25
    1648:	ea f7       	brpl	.-6      	; 0x1644 <_ZN14SoftwareSerial5beginEl+0xe4>
    164a:	0e c0       	rjmp	.+28     	; 0x1668 <_ZN14SoftwareSerial5beginEl+0x108>
    164c:	29 2f       	mov	r18, r25
    164e:	30 e0       	ldi	r19, 0x00	; 0
    1650:	9e 30       	cpi	r25, 0x0E	; 14
    1652:	18 f4       	brcc	.+6      	; 0x165a <_ZN14SoftwareSerial5beginEl+0xfa>
    1654:	28 50       	subi	r18, 0x08	; 8
    1656:	31 09       	sbc	r19, r1
    1658:	02 c0       	rjmp	.+4      	; 0x165e <_ZN14SoftwareSerial5beginEl+0xfe>
    165a:	2e 50       	subi	r18, 0x0E	; 14
    165c:	31 09       	sbc	r19, r1
    165e:	81 e0       	ldi	r24, 0x01	; 1
    1660:	01 c0       	rjmp	.+2      	; 0x1664 <_ZN14SoftwareSerial5beginEl+0x104>
    1662:	88 0f       	add	r24, r24
    1664:	2a 95       	dec	r18
    1666:	ea f7       	brpl	.-6      	; 0x1662 <_ZN14SoftwareSerial5beginEl+0x102>
    1668:	8d 8b       	std	Y+21, r24	; 0x15
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    166a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    166c:	9d 8d       	ldd	r25, Y+29	; 0x1d
    166e:	01 97       	sbiw	r24, 0x01	; 1
    1670:	f1 f7       	brne	.-4      	; 0x166e <_ZN14SoftwareSerial5beginEl+0x10e>
#if _DEBUG
  pinMode(_DEBUG_PIN1, OUTPUT);
  pinMode(_DEBUG_PIN2, OUTPUT);
#endif

  listen();
    1672:	ce 01       	movw	r24, r28
}
    1674:	df 91       	pop	r29
    1676:	cf 91       	pop	r28
#if _DEBUG
  pinMode(_DEBUG_PIN1, OUTPUT);
  pinMode(_DEBUG_PIN2, OUTPUT);
#endif

  listen();
    1678:	0c 94 89 09 	jmp	0x1312	; 0x1312 <_ZN14SoftwareSerial6listenEv>

0000167c <__subsf3>:
    167c:	50 58       	subi	r21, 0x80	; 128

0000167e <__addsf3>:
    167e:	bb 27       	eor	r27, r27
    1680:	aa 27       	eor	r26, r26
    1682:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__addsf3x>
    1686:	0c 94 d0 0c 	jmp	0x19a0	; 0x19a0 <__fp_round>
    168a:	0e 94 c2 0c 	call	0x1984	; 0x1984 <__fp_pscA>
    168e:	38 f0       	brcs	.+14     	; 0x169e <__addsf3+0x20>
    1690:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fp_pscB>
    1694:	20 f0       	brcs	.+8      	; 0x169e <__addsf3+0x20>
    1696:	39 f4       	brne	.+14     	; 0x16a6 <__addsf3+0x28>
    1698:	9f 3f       	cpi	r25, 0xFF	; 255
    169a:	19 f4       	brne	.+6      	; 0x16a2 <__addsf3+0x24>
    169c:	26 f4       	brtc	.+8      	; 0x16a6 <__addsf3+0x28>
    169e:	0c 94 bf 0c 	jmp	0x197e	; 0x197e <__fp_nan>
    16a2:	0e f4       	brtc	.+2      	; 0x16a6 <__addsf3+0x28>
    16a4:	e0 95       	com	r30
    16a6:	e7 fb       	bst	r30, 7
    16a8:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__fp_inf>

000016ac <__addsf3x>:
    16ac:	e9 2f       	mov	r30, r25
    16ae:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <__fp_split3>
    16b2:	58 f3       	brcs	.-42     	; 0x168a <__addsf3+0xc>
    16b4:	ba 17       	cp	r27, r26
    16b6:	62 07       	cpc	r22, r18
    16b8:	73 07       	cpc	r23, r19
    16ba:	84 07       	cpc	r24, r20
    16bc:	95 07       	cpc	r25, r21
    16be:	20 f0       	brcs	.+8      	; 0x16c8 <__addsf3x+0x1c>
    16c0:	79 f4       	brne	.+30     	; 0x16e0 <__addsf3x+0x34>
    16c2:	a6 f5       	brtc	.+104    	; 0x172c <__addsf3x+0x80>
    16c4:	0c 94 03 0d 	jmp	0x1a06	; 0x1a06 <__fp_zero>
    16c8:	0e f4       	brtc	.+2      	; 0x16cc <__addsf3x+0x20>
    16ca:	e0 95       	com	r30
    16cc:	0b 2e       	mov	r0, r27
    16ce:	ba 2f       	mov	r27, r26
    16d0:	a0 2d       	mov	r26, r0
    16d2:	0b 01       	movw	r0, r22
    16d4:	b9 01       	movw	r22, r18
    16d6:	90 01       	movw	r18, r0
    16d8:	0c 01       	movw	r0, r24
    16da:	ca 01       	movw	r24, r20
    16dc:	a0 01       	movw	r20, r0
    16de:	11 24       	eor	r1, r1
    16e0:	ff 27       	eor	r31, r31
    16e2:	59 1b       	sub	r21, r25
    16e4:	99 f0       	breq	.+38     	; 0x170c <__addsf3x+0x60>
    16e6:	59 3f       	cpi	r21, 0xF9	; 249
    16e8:	50 f4       	brcc	.+20     	; 0x16fe <__addsf3x+0x52>
    16ea:	50 3e       	cpi	r21, 0xE0	; 224
    16ec:	68 f1       	brcs	.+90     	; 0x1748 <__addsf3x+0x9c>
    16ee:	1a 16       	cp	r1, r26
    16f0:	f0 40       	sbci	r31, 0x00	; 0
    16f2:	a2 2f       	mov	r26, r18
    16f4:	23 2f       	mov	r18, r19
    16f6:	34 2f       	mov	r19, r20
    16f8:	44 27       	eor	r20, r20
    16fa:	58 5f       	subi	r21, 0xF8	; 248
    16fc:	f3 cf       	rjmp	.-26     	; 0x16e4 <__addsf3x+0x38>
    16fe:	46 95       	lsr	r20
    1700:	37 95       	ror	r19
    1702:	27 95       	ror	r18
    1704:	a7 95       	ror	r26
    1706:	f0 40       	sbci	r31, 0x00	; 0
    1708:	53 95       	inc	r21
    170a:	c9 f7       	brne	.-14     	; 0x16fe <__addsf3x+0x52>
    170c:	7e f4       	brtc	.+30     	; 0x172c <__addsf3x+0x80>
    170e:	1f 16       	cp	r1, r31
    1710:	ba 0b       	sbc	r27, r26
    1712:	62 0b       	sbc	r22, r18
    1714:	73 0b       	sbc	r23, r19
    1716:	84 0b       	sbc	r24, r20
    1718:	ba f0       	brmi	.+46     	; 0x1748 <__addsf3x+0x9c>
    171a:	91 50       	subi	r25, 0x01	; 1
    171c:	a1 f0       	breq	.+40     	; 0x1746 <__addsf3x+0x9a>
    171e:	ff 0f       	add	r31, r31
    1720:	bb 1f       	adc	r27, r27
    1722:	66 1f       	adc	r22, r22
    1724:	77 1f       	adc	r23, r23
    1726:	88 1f       	adc	r24, r24
    1728:	c2 f7       	brpl	.-16     	; 0x171a <__addsf3x+0x6e>
    172a:	0e c0       	rjmp	.+28     	; 0x1748 <__addsf3x+0x9c>
    172c:	ba 0f       	add	r27, r26
    172e:	62 1f       	adc	r22, r18
    1730:	73 1f       	adc	r23, r19
    1732:	84 1f       	adc	r24, r20
    1734:	48 f4       	brcc	.+18     	; 0x1748 <__addsf3x+0x9c>
    1736:	87 95       	ror	r24
    1738:	77 95       	ror	r23
    173a:	67 95       	ror	r22
    173c:	b7 95       	ror	r27
    173e:	f7 95       	ror	r31
    1740:	9e 3f       	cpi	r25, 0xFE	; 254
    1742:	08 f0       	brcs	.+2      	; 0x1746 <__addsf3x+0x9a>
    1744:	b0 cf       	rjmp	.-160    	; 0x16a6 <__addsf3+0x28>
    1746:	93 95       	inc	r25
    1748:	88 0f       	add	r24, r24
    174a:	08 f0       	brcs	.+2      	; 0x174e <__addsf3x+0xa2>
    174c:	99 27       	eor	r25, r25
    174e:	ee 0f       	add	r30, r30
    1750:	97 95       	ror	r25
    1752:	87 95       	ror	r24
    1754:	08 95       	ret

00001756 <__cmpsf2>:
    1756:	0e 94 95 0c 	call	0x192a	; 0x192a <__fp_cmp>
    175a:	08 f4       	brcc	.+2      	; 0x175e <__cmpsf2+0x8>
    175c:	81 e0       	ldi	r24, 0x01	; 1
    175e:	08 95       	ret

00001760 <__divsf3>:
    1760:	0e 94 c4 0b 	call	0x1788	; 0x1788 <__divsf3x>
    1764:	0c 94 d0 0c 	jmp	0x19a0	; 0x19a0 <__fp_round>
    1768:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fp_pscB>
    176c:	58 f0       	brcs	.+22     	; 0x1784 <__divsf3+0x24>
    176e:	0e 94 c2 0c 	call	0x1984	; 0x1984 <__fp_pscA>
    1772:	40 f0       	brcs	.+16     	; 0x1784 <__divsf3+0x24>
    1774:	29 f4       	brne	.+10     	; 0x1780 <__divsf3+0x20>
    1776:	5f 3f       	cpi	r21, 0xFF	; 255
    1778:	29 f0       	breq	.+10     	; 0x1784 <__divsf3+0x24>
    177a:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__fp_inf>
    177e:	51 11       	cpse	r21, r1
    1780:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <__fp_szero>
    1784:	0c 94 bf 0c 	jmp	0x197e	; 0x197e <__fp_nan>

00001788 <__divsf3x>:
    1788:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <__fp_split3>
    178c:	68 f3       	brcs	.-38     	; 0x1768 <__divsf3+0x8>

0000178e <__divsf3_pse>:
    178e:	99 23       	and	r25, r25
    1790:	b1 f3       	breq	.-20     	; 0x177e <__divsf3+0x1e>
    1792:	55 23       	and	r21, r21
    1794:	91 f3       	breq	.-28     	; 0x177a <__divsf3+0x1a>
    1796:	95 1b       	sub	r25, r21
    1798:	55 0b       	sbc	r21, r21
    179a:	bb 27       	eor	r27, r27
    179c:	aa 27       	eor	r26, r26
    179e:	62 17       	cp	r22, r18
    17a0:	73 07       	cpc	r23, r19
    17a2:	84 07       	cpc	r24, r20
    17a4:	38 f0       	brcs	.+14     	; 0x17b4 <__divsf3_pse+0x26>
    17a6:	9f 5f       	subi	r25, 0xFF	; 255
    17a8:	5f 4f       	sbci	r21, 0xFF	; 255
    17aa:	22 0f       	add	r18, r18
    17ac:	33 1f       	adc	r19, r19
    17ae:	44 1f       	adc	r20, r20
    17b0:	aa 1f       	adc	r26, r26
    17b2:	a9 f3       	breq	.-22     	; 0x179e <__divsf3_pse+0x10>
    17b4:	35 d0       	rcall	.+106    	; 0x1820 <__divsf3_pse+0x92>
    17b6:	0e 2e       	mov	r0, r30
    17b8:	3a f0       	brmi	.+14     	; 0x17c8 <__divsf3_pse+0x3a>
    17ba:	e0 e8       	ldi	r30, 0x80	; 128
    17bc:	32 d0       	rcall	.+100    	; 0x1822 <__divsf3_pse+0x94>
    17be:	91 50       	subi	r25, 0x01	; 1
    17c0:	50 40       	sbci	r21, 0x00	; 0
    17c2:	e6 95       	lsr	r30
    17c4:	00 1c       	adc	r0, r0
    17c6:	ca f7       	brpl	.-14     	; 0x17ba <__divsf3_pse+0x2c>
    17c8:	2b d0       	rcall	.+86     	; 0x1820 <__divsf3_pse+0x92>
    17ca:	fe 2f       	mov	r31, r30
    17cc:	29 d0       	rcall	.+82     	; 0x1820 <__divsf3_pse+0x92>
    17ce:	66 0f       	add	r22, r22
    17d0:	77 1f       	adc	r23, r23
    17d2:	88 1f       	adc	r24, r24
    17d4:	bb 1f       	adc	r27, r27
    17d6:	26 17       	cp	r18, r22
    17d8:	37 07       	cpc	r19, r23
    17da:	48 07       	cpc	r20, r24
    17dc:	ab 07       	cpc	r26, r27
    17de:	b0 e8       	ldi	r27, 0x80	; 128
    17e0:	09 f0       	breq	.+2      	; 0x17e4 <__divsf3_pse+0x56>
    17e2:	bb 0b       	sbc	r27, r27
    17e4:	80 2d       	mov	r24, r0
    17e6:	bf 01       	movw	r22, r30
    17e8:	ff 27       	eor	r31, r31
    17ea:	93 58       	subi	r25, 0x83	; 131
    17ec:	5f 4f       	sbci	r21, 0xFF	; 255
    17ee:	3a f0       	brmi	.+14     	; 0x17fe <__divsf3_pse+0x70>
    17f0:	9e 3f       	cpi	r25, 0xFE	; 254
    17f2:	51 05       	cpc	r21, r1
    17f4:	78 f0       	brcs	.+30     	; 0x1814 <__divsf3_pse+0x86>
    17f6:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__fp_inf>
    17fa:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <__fp_szero>
    17fe:	5f 3f       	cpi	r21, 0xFF	; 255
    1800:	e4 f3       	brlt	.-8      	; 0x17fa <__divsf3_pse+0x6c>
    1802:	98 3e       	cpi	r25, 0xE8	; 232
    1804:	d4 f3       	brlt	.-12     	; 0x17fa <__divsf3_pse+0x6c>
    1806:	86 95       	lsr	r24
    1808:	77 95       	ror	r23
    180a:	67 95       	ror	r22
    180c:	b7 95       	ror	r27
    180e:	f7 95       	ror	r31
    1810:	9f 5f       	subi	r25, 0xFF	; 255
    1812:	c9 f7       	brne	.-14     	; 0x1806 <__divsf3_pse+0x78>
    1814:	88 0f       	add	r24, r24
    1816:	91 1d       	adc	r25, r1
    1818:	96 95       	lsr	r25
    181a:	87 95       	ror	r24
    181c:	97 f9       	bld	r25, 7
    181e:	08 95       	ret
    1820:	e1 e0       	ldi	r30, 0x01	; 1
    1822:	66 0f       	add	r22, r22
    1824:	77 1f       	adc	r23, r23
    1826:	88 1f       	adc	r24, r24
    1828:	bb 1f       	adc	r27, r27
    182a:	62 17       	cp	r22, r18
    182c:	73 07       	cpc	r23, r19
    182e:	84 07       	cpc	r24, r20
    1830:	ba 07       	cpc	r27, r26
    1832:	20 f0       	brcs	.+8      	; 0x183c <__divsf3_pse+0xae>
    1834:	62 1b       	sub	r22, r18
    1836:	73 0b       	sbc	r23, r19
    1838:	84 0b       	sbc	r24, r20
    183a:	ba 0b       	sbc	r27, r26
    183c:	ee 1f       	adc	r30, r30
    183e:	88 f7       	brcc	.-30     	; 0x1822 <__divsf3_pse+0x94>
    1840:	e0 95       	com	r30
    1842:	08 95       	ret

00001844 <__fixsfsi>:
    1844:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fixunssfsi>
    1848:	68 94       	set
    184a:	b1 11       	cpse	r27, r1
    184c:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <__fp_szero>
    1850:	08 95       	ret

00001852 <__fixunssfsi>:
    1852:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <__fp_splitA>
    1856:	88 f0       	brcs	.+34     	; 0x187a <__fixunssfsi+0x28>
    1858:	9f 57       	subi	r25, 0x7F	; 127
    185a:	98 f0       	brcs	.+38     	; 0x1882 <__fixunssfsi+0x30>
    185c:	b9 2f       	mov	r27, r25
    185e:	99 27       	eor	r25, r25
    1860:	b7 51       	subi	r27, 0x17	; 23
    1862:	b0 f0       	brcs	.+44     	; 0x1890 <__fixunssfsi+0x3e>
    1864:	e1 f0       	breq	.+56     	; 0x189e <__fixunssfsi+0x4c>
    1866:	66 0f       	add	r22, r22
    1868:	77 1f       	adc	r23, r23
    186a:	88 1f       	adc	r24, r24
    186c:	99 1f       	adc	r25, r25
    186e:	1a f0       	brmi	.+6      	; 0x1876 <__fixunssfsi+0x24>
    1870:	ba 95       	dec	r27
    1872:	c9 f7       	brne	.-14     	; 0x1866 <__fixunssfsi+0x14>
    1874:	14 c0       	rjmp	.+40     	; 0x189e <__fixunssfsi+0x4c>
    1876:	b1 30       	cpi	r27, 0x01	; 1
    1878:	91 f0       	breq	.+36     	; 0x189e <__fixunssfsi+0x4c>
    187a:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__fp_zero>
    187e:	b1 e0       	ldi	r27, 0x01	; 1
    1880:	08 95       	ret
    1882:	0c 94 03 0d 	jmp	0x1a06	; 0x1a06 <__fp_zero>
    1886:	67 2f       	mov	r22, r23
    1888:	78 2f       	mov	r23, r24
    188a:	88 27       	eor	r24, r24
    188c:	b8 5f       	subi	r27, 0xF8	; 248
    188e:	39 f0       	breq	.+14     	; 0x189e <__fixunssfsi+0x4c>
    1890:	b9 3f       	cpi	r27, 0xF9	; 249
    1892:	cc f3       	brlt	.-14     	; 0x1886 <__fixunssfsi+0x34>
    1894:	86 95       	lsr	r24
    1896:	77 95       	ror	r23
    1898:	67 95       	ror	r22
    189a:	b3 95       	inc	r27
    189c:	d9 f7       	brne	.-10     	; 0x1894 <__fixunssfsi+0x42>
    189e:	3e f4       	brtc	.+14     	; 0x18ae <__fixunssfsi+0x5c>
    18a0:	90 95       	com	r25
    18a2:	80 95       	com	r24
    18a4:	70 95       	com	r23
    18a6:	61 95       	neg	r22
    18a8:	7f 4f       	sbci	r23, 0xFF	; 255
    18aa:	8f 4f       	sbci	r24, 0xFF	; 255
    18ac:	9f 4f       	sbci	r25, 0xFF	; 255
    18ae:	08 95       	ret

000018b0 <__floatunsisf>:
    18b0:	e8 94       	clt
    18b2:	09 c0       	rjmp	.+18     	; 0x18c6 <__floatsisf+0x12>

000018b4 <__floatsisf>:
    18b4:	97 fb       	bst	r25, 7
    18b6:	3e f4       	brtc	.+14     	; 0x18c6 <__floatsisf+0x12>
    18b8:	90 95       	com	r25
    18ba:	80 95       	com	r24
    18bc:	70 95       	com	r23
    18be:	61 95       	neg	r22
    18c0:	7f 4f       	sbci	r23, 0xFF	; 255
    18c2:	8f 4f       	sbci	r24, 0xFF	; 255
    18c4:	9f 4f       	sbci	r25, 0xFF	; 255
    18c6:	99 23       	and	r25, r25
    18c8:	a9 f0       	breq	.+42     	; 0x18f4 <__floatsisf+0x40>
    18ca:	f9 2f       	mov	r31, r25
    18cc:	96 e9       	ldi	r25, 0x96	; 150
    18ce:	bb 27       	eor	r27, r27
    18d0:	93 95       	inc	r25
    18d2:	f6 95       	lsr	r31
    18d4:	87 95       	ror	r24
    18d6:	77 95       	ror	r23
    18d8:	67 95       	ror	r22
    18da:	b7 95       	ror	r27
    18dc:	f1 11       	cpse	r31, r1
    18de:	f8 cf       	rjmp	.-16     	; 0x18d0 <__floatsisf+0x1c>
    18e0:	fa f4       	brpl	.+62     	; 0x1920 <__floatsisf+0x6c>
    18e2:	bb 0f       	add	r27, r27
    18e4:	11 f4       	brne	.+4      	; 0x18ea <__floatsisf+0x36>
    18e6:	60 ff       	sbrs	r22, 0
    18e8:	1b c0       	rjmp	.+54     	; 0x1920 <__floatsisf+0x6c>
    18ea:	6f 5f       	subi	r22, 0xFF	; 255
    18ec:	7f 4f       	sbci	r23, 0xFF	; 255
    18ee:	8f 4f       	sbci	r24, 0xFF	; 255
    18f0:	9f 4f       	sbci	r25, 0xFF	; 255
    18f2:	16 c0       	rjmp	.+44     	; 0x1920 <__floatsisf+0x6c>
    18f4:	88 23       	and	r24, r24
    18f6:	11 f0       	breq	.+4      	; 0x18fc <__floatsisf+0x48>
    18f8:	96 e9       	ldi	r25, 0x96	; 150
    18fa:	11 c0       	rjmp	.+34     	; 0x191e <__floatsisf+0x6a>
    18fc:	77 23       	and	r23, r23
    18fe:	21 f0       	breq	.+8      	; 0x1908 <__floatsisf+0x54>
    1900:	9e e8       	ldi	r25, 0x8E	; 142
    1902:	87 2f       	mov	r24, r23
    1904:	76 2f       	mov	r23, r22
    1906:	05 c0       	rjmp	.+10     	; 0x1912 <__floatsisf+0x5e>
    1908:	66 23       	and	r22, r22
    190a:	71 f0       	breq	.+28     	; 0x1928 <__floatsisf+0x74>
    190c:	96 e8       	ldi	r25, 0x86	; 134
    190e:	86 2f       	mov	r24, r22
    1910:	70 e0       	ldi	r23, 0x00	; 0
    1912:	60 e0       	ldi	r22, 0x00	; 0
    1914:	2a f0       	brmi	.+10     	; 0x1920 <__floatsisf+0x6c>
    1916:	9a 95       	dec	r25
    1918:	66 0f       	add	r22, r22
    191a:	77 1f       	adc	r23, r23
    191c:	88 1f       	adc	r24, r24
    191e:	da f7       	brpl	.-10     	; 0x1916 <__floatsisf+0x62>
    1920:	88 0f       	add	r24, r24
    1922:	96 95       	lsr	r25
    1924:	87 95       	ror	r24
    1926:	97 f9       	bld	r25, 7
    1928:	08 95       	ret

0000192a <__fp_cmp>:
    192a:	99 0f       	add	r25, r25
    192c:	00 08       	sbc	r0, r0
    192e:	55 0f       	add	r21, r21
    1930:	aa 0b       	sbc	r26, r26
    1932:	e0 e8       	ldi	r30, 0x80	; 128
    1934:	fe ef       	ldi	r31, 0xFE	; 254
    1936:	16 16       	cp	r1, r22
    1938:	17 06       	cpc	r1, r23
    193a:	e8 07       	cpc	r30, r24
    193c:	f9 07       	cpc	r31, r25
    193e:	c0 f0       	brcs	.+48     	; 0x1970 <__fp_cmp+0x46>
    1940:	12 16       	cp	r1, r18
    1942:	13 06       	cpc	r1, r19
    1944:	e4 07       	cpc	r30, r20
    1946:	f5 07       	cpc	r31, r21
    1948:	98 f0       	brcs	.+38     	; 0x1970 <__fp_cmp+0x46>
    194a:	62 1b       	sub	r22, r18
    194c:	73 0b       	sbc	r23, r19
    194e:	84 0b       	sbc	r24, r20
    1950:	95 0b       	sbc	r25, r21
    1952:	39 f4       	brne	.+14     	; 0x1962 <__fp_cmp+0x38>
    1954:	0a 26       	eor	r0, r26
    1956:	61 f0       	breq	.+24     	; 0x1970 <__fp_cmp+0x46>
    1958:	23 2b       	or	r18, r19
    195a:	24 2b       	or	r18, r20
    195c:	25 2b       	or	r18, r21
    195e:	21 f4       	brne	.+8      	; 0x1968 <__fp_cmp+0x3e>
    1960:	08 95       	ret
    1962:	0a 26       	eor	r0, r26
    1964:	09 f4       	brne	.+2      	; 0x1968 <__fp_cmp+0x3e>
    1966:	a1 40       	sbci	r26, 0x01	; 1
    1968:	a6 95       	lsr	r26
    196a:	8f ef       	ldi	r24, 0xFF	; 255
    196c:	81 1d       	adc	r24, r1
    196e:	81 1d       	adc	r24, r1
    1970:	08 95       	ret

00001972 <__fp_inf>:
    1972:	97 f9       	bld	r25, 7
    1974:	9f 67       	ori	r25, 0x7F	; 127
    1976:	80 e8       	ldi	r24, 0x80	; 128
    1978:	70 e0       	ldi	r23, 0x00	; 0
    197a:	60 e0       	ldi	r22, 0x00	; 0
    197c:	08 95       	ret

0000197e <__fp_nan>:
    197e:	9f ef       	ldi	r25, 0xFF	; 255
    1980:	80 ec       	ldi	r24, 0xC0	; 192
    1982:	08 95       	ret

00001984 <__fp_pscA>:
    1984:	00 24       	eor	r0, r0
    1986:	0a 94       	dec	r0
    1988:	16 16       	cp	r1, r22
    198a:	17 06       	cpc	r1, r23
    198c:	18 06       	cpc	r1, r24
    198e:	09 06       	cpc	r0, r25
    1990:	08 95       	ret

00001992 <__fp_pscB>:
    1992:	00 24       	eor	r0, r0
    1994:	0a 94       	dec	r0
    1996:	12 16       	cp	r1, r18
    1998:	13 06       	cpc	r1, r19
    199a:	14 06       	cpc	r1, r20
    199c:	05 06       	cpc	r0, r21
    199e:	08 95       	ret

000019a0 <__fp_round>:
    19a0:	09 2e       	mov	r0, r25
    19a2:	03 94       	inc	r0
    19a4:	00 0c       	add	r0, r0
    19a6:	11 f4       	brne	.+4      	; 0x19ac <__fp_round+0xc>
    19a8:	88 23       	and	r24, r24
    19aa:	52 f0       	brmi	.+20     	; 0x19c0 <__fp_round+0x20>
    19ac:	bb 0f       	add	r27, r27
    19ae:	40 f4       	brcc	.+16     	; 0x19c0 <__fp_round+0x20>
    19b0:	bf 2b       	or	r27, r31
    19b2:	11 f4       	brne	.+4      	; 0x19b8 <__fp_round+0x18>
    19b4:	60 ff       	sbrs	r22, 0
    19b6:	04 c0       	rjmp	.+8      	; 0x19c0 <__fp_round+0x20>
    19b8:	6f 5f       	subi	r22, 0xFF	; 255
    19ba:	7f 4f       	sbci	r23, 0xFF	; 255
    19bc:	8f 4f       	sbci	r24, 0xFF	; 255
    19be:	9f 4f       	sbci	r25, 0xFF	; 255
    19c0:	08 95       	ret

000019c2 <__fp_split3>:
    19c2:	57 fd       	sbrc	r21, 7
    19c4:	90 58       	subi	r25, 0x80	; 128
    19c6:	44 0f       	add	r20, r20
    19c8:	55 1f       	adc	r21, r21
    19ca:	59 f0       	breq	.+22     	; 0x19e2 <__fp_splitA+0x10>
    19cc:	5f 3f       	cpi	r21, 0xFF	; 255
    19ce:	71 f0       	breq	.+28     	; 0x19ec <__fp_splitA+0x1a>
    19d0:	47 95       	ror	r20

000019d2 <__fp_splitA>:
    19d2:	88 0f       	add	r24, r24
    19d4:	97 fb       	bst	r25, 7
    19d6:	99 1f       	adc	r25, r25
    19d8:	61 f0       	breq	.+24     	; 0x19f2 <__fp_splitA+0x20>
    19da:	9f 3f       	cpi	r25, 0xFF	; 255
    19dc:	79 f0       	breq	.+30     	; 0x19fc <__fp_splitA+0x2a>
    19de:	87 95       	ror	r24
    19e0:	08 95       	ret
    19e2:	12 16       	cp	r1, r18
    19e4:	13 06       	cpc	r1, r19
    19e6:	14 06       	cpc	r1, r20
    19e8:	55 1f       	adc	r21, r21
    19ea:	f2 cf       	rjmp	.-28     	; 0x19d0 <__fp_split3+0xe>
    19ec:	46 95       	lsr	r20
    19ee:	f1 df       	rcall	.-30     	; 0x19d2 <__fp_splitA>
    19f0:	08 c0       	rjmp	.+16     	; 0x1a02 <__fp_splitA+0x30>
    19f2:	16 16       	cp	r1, r22
    19f4:	17 06       	cpc	r1, r23
    19f6:	18 06       	cpc	r1, r24
    19f8:	99 1f       	adc	r25, r25
    19fa:	f1 cf       	rjmp	.-30     	; 0x19de <__fp_splitA+0xc>
    19fc:	86 95       	lsr	r24
    19fe:	71 05       	cpc	r23, r1
    1a00:	61 05       	cpc	r22, r1
    1a02:	08 94       	sec
    1a04:	08 95       	ret

00001a06 <__fp_zero>:
    1a06:	e8 94       	clt

00001a08 <__fp_szero>:
    1a08:	bb 27       	eor	r27, r27
    1a0a:	66 27       	eor	r22, r22
    1a0c:	77 27       	eor	r23, r23
    1a0e:	cb 01       	movw	r24, r22
    1a10:	97 f9       	bld	r25, 7
    1a12:	08 95       	ret

00001a14 <__gesf2>:
    1a14:	0e 94 95 0c 	call	0x192a	; 0x192a <__fp_cmp>
    1a18:	08 f4       	brcc	.+2      	; 0x1a1c <__gesf2+0x8>
    1a1a:	8f ef       	ldi	r24, 0xFF	; 255
    1a1c:	08 95       	ret

00001a1e <__mulsf3>:
    1a1e:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <__mulsf3x>
    1a22:	0c 94 d0 0c 	jmp	0x19a0	; 0x19a0 <__fp_round>
    1a26:	0e 94 c2 0c 	call	0x1984	; 0x1984 <__fp_pscA>
    1a2a:	38 f0       	brcs	.+14     	; 0x1a3a <__mulsf3+0x1c>
    1a2c:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fp_pscB>
    1a30:	20 f0       	brcs	.+8      	; 0x1a3a <__mulsf3+0x1c>
    1a32:	95 23       	and	r25, r21
    1a34:	11 f0       	breq	.+4      	; 0x1a3a <__mulsf3+0x1c>
    1a36:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__fp_inf>
    1a3a:	0c 94 bf 0c 	jmp	0x197e	; 0x197e <__fp_nan>
    1a3e:	11 24       	eor	r1, r1
    1a40:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <__fp_szero>

00001a44 <__mulsf3x>:
    1a44:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <__fp_split3>
    1a48:	70 f3       	brcs	.-36     	; 0x1a26 <__mulsf3+0x8>

00001a4a <__mulsf3_pse>:
    1a4a:	95 9f       	mul	r25, r21
    1a4c:	c1 f3       	breq	.-16     	; 0x1a3e <__mulsf3+0x20>
    1a4e:	95 0f       	add	r25, r21
    1a50:	50 e0       	ldi	r21, 0x00	; 0
    1a52:	55 1f       	adc	r21, r21
    1a54:	62 9f       	mul	r22, r18
    1a56:	f0 01       	movw	r30, r0
    1a58:	72 9f       	mul	r23, r18
    1a5a:	bb 27       	eor	r27, r27
    1a5c:	f0 0d       	add	r31, r0
    1a5e:	b1 1d       	adc	r27, r1
    1a60:	63 9f       	mul	r22, r19
    1a62:	aa 27       	eor	r26, r26
    1a64:	f0 0d       	add	r31, r0
    1a66:	b1 1d       	adc	r27, r1
    1a68:	aa 1f       	adc	r26, r26
    1a6a:	64 9f       	mul	r22, r20
    1a6c:	66 27       	eor	r22, r22
    1a6e:	b0 0d       	add	r27, r0
    1a70:	a1 1d       	adc	r26, r1
    1a72:	66 1f       	adc	r22, r22
    1a74:	82 9f       	mul	r24, r18
    1a76:	22 27       	eor	r18, r18
    1a78:	b0 0d       	add	r27, r0
    1a7a:	a1 1d       	adc	r26, r1
    1a7c:	62 1f       	adc	r22, r18
    1a7e:	73 9f       	mul	r23, r19
    1a80:	b0 0d       	add	r27, r0
    1a82:	a1 1d       	adc	r26, r1
    1a84:	62 1f       	adc	r22, r18
    1a86:	83 9f       	mul	r24, r19
    1a88:	a0 0d       	add	r26, r0
    1a8a:	61 1d       	adc	r22, r1
    1a8c:	22 1f       	adc	r18, r18
    1a8e:	74 9f       	mul	r23, r20
    1a90:	33 27       	eor	r19, r19
    1a92:	a0 0d       	add	r26, r0
    1a94:	61 1d       	adc	r22, r1
    1a96:	23 1f       	adc	r18, r19
    1a98:	84 9f       	mul	r24, r20
    1a9a:	60 0d       	add	r22, r0
    1a9c:	21 1d       	adc	r18, r1
    1a9e:	82 2f       	mov	r24, r18
    1aa0:	76 2f       	mov	r23, r22
    1aa2:	6a 2f       	mov	r22, r26
    1aa4:	11 24       	eor	r1, r1
    1aa6:	9f 57       	subi	r25, 0x7F	; 127
    1aa8:	50 40       	sbci	r21, 0x00	; 0
    1aaa:	9a f0       	brmi	.+38     	; 0x1ad2 <__mulsf3_pse+0x88>
    1aac:	f1 f0       	breq	.+60     	; 0x1aea <__mulsf3_pse+0xa0>
    1aae:	88 23       	and	r24, r24
    1ab0:	4a f0       	brmi	.+18     	; 0x1ac4 <__mulsf3_pse+0x7a>
    1ab2:	ee 0f       	add	r30, r30
    1ab4:	ff 1f       	adc	r31, r31
    1ab6:	bb 1f       	adc	r27, r27
    1ab8:	66 1f       	adc	r22, r22
    1aba:	77 1f       	adc	r23, r23
    1abc:	88 1f       	adc	r24, r24
    1abe:	91 50       	subi	r25, 0x01	; 1
    1ac0:	50 40       	sbci	r21, 0x00	; 0
    1ac2:	a9 f7       	brne	.-22     	; 0x1aae <__mulsf3_pse+0x64>
    1ac4:	9e 3f       	cpi	r25, 0xFE	; 254
    1ac6:	51 05       	cpc	r21, r1
    1ac8:	80 f0       	brcs	.+32     	; 0x1aea <__mulsf3_pse+0xa0>
    1aca:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__fp_inf>
    1ace:	0c 94 04 0d 	jmp	0x1a08	; 0x1a08 <__fp_szero>
    1ad2:	5f 3f       	cpi	r21, 0xFF	; 255
    1ad4:	e4 f3       	brlt	.-8      	; 0x1ace <__mulsf3_pse+0x84>
    1ad6:	98 3e       	cpi	r25, 0xE8	; 232
    1ad8:	d4 f3       	brlt	.-12     	; 0x1ace <__mulsf3_pse+0x84>
    1ada:	86 95       	lsr	r24
    1adc:	77 95       	ror	r23
    1ade:	67 95       	ror	r22
    1ae0:	b7 95       	ror	r27
    1ae2:	f7 95       	ror	r31
    1ae4:	e7 95       	ror	r30
    1ae6:	9f 5f       	subi	r25, 0xFF	; 255
    1ae8:	c1 f7       	brne	.-16     	; 0x1ada <__mulsf3_pse+0x90>
    1aea:	fe 2b       	or	r31, r30
    1aec:	88 0f       	add	r24, r24
    1aee:	91 1d       	adc	r25, r1
    1af0:	96 95       	lsr	r25
    1af2:	87 95       	ror	r24
    1af4:	97 f9       	bld	r25, 7
    1af6:	08 95       	ret

00001af8 <_ZN14HardwareSerial9availableEv>:
    1af8:	fc 01       	movw	r30, r24
    1afa:	91 8d       	ldd	r25, Z+25	; 0x19
    1afc:	22 8d       	ldd	r18, Z+26	; 0x1a
    1afe:	89 2f       	mov	r24, r25
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	80 5c       	subi	r24, 0xC0	; 192
    1b04:	9f 4f       	sbci	r25, 0xFF	; 255
    1b06:	82 1b       	sub	r24, r18
    1b08:	91 09       	sbc	r25, r1
    1b0a:	8f 73       	andi	r24, 0x3F	; 63
    1b0c:	99 27       	eor	r25, r25
    1b0e:	08 95       	ret

00001b10 <_ZN14HardwareSerial4peekEv>:
    1b10:	fc 01       	movw	r30, r24
    1b12:	91 8d       	ldd	r25, Z+25	; 0x19
    1b14:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b16:	98 17       	cp	r25, r24
    1b18:	31 f0       	breq	.+12     	; 0x1b26 <_ZN14HardwareSerial4peekEv+0x16>
    1b1a:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b1c:	e8 0f       	add	r30, r24
    1b1e:	f1 1d       	adc	r31, r1
    1b20:	85 8d       	ldd	r24, Z+29	; 0x1d
    1b22:	90 e0       	ldi	r25, 0x00	; 0
    1b24:	08 95       	ret
    1b26:	8f ef       	ldi	r24, 0xFF	; 255
    1b28:	9f ef       	ldi	r25, 0xFF	; 255
    1b2a:	08 95       	ret

00001b2c <_ZN14HardwareSerial4readEv>:
    1b2c:	fc 01       	movw	r30, r24
    1b2e:	91 8d       	ldd	r25, Z+25	; 0x19
    1b30:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b32:	98 17       	cp	r25, r24
    1b34:	61 f0       	breq	.+24     	; 0x1b4e <_ZN14HardwareSerial4readEv+0x22>
    1b36:	82 8d       	ldd	r24, Z+26	; 0x1a
    1b38:	df 01       	movw	r26, r30
    1b3a:	a8 0f       	add	r26, r24
    1b3c:	b1 1d       	adc	r27, r1
    1b3e:	5d 96       	adiw	r26, 0x1d	; 29
    1b40:	8c 91       	ld	r24, X
    1b42:	92 8d       	ldd	r25, Z+26	; 0x1a
    1b44:	9f 5f       	subi	r25, 0xFF	; 255
    1b46:	9f 73       	andi	r25, 0x3F	; 63
    1b48:	92 8f       	std	Z+26, r25	; 0x1a
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	08 95       	ret
    1b4e:	8f ef       	ldi	r24, 0xFF	; 255
    1b50:	9f ef       	ldi	r25, 0xFF	; 255
    1b52:	08 95       	ret

00001b54 <_ZN14HardwareSerial17availableForWriteEv>:
    1b54:	fc 01       	movw	r30, r24
    1b56:	53 8d       	ldd	r21, Z+27	; 0x1b
    1b58:	44 8d       	ldd	r20, Z+28	; 0x1c
    1b5a:	25 2f       	mov	r18, r21
    1b5c:	30 e0       	ldi	r19, 0x00	; 0
    1b5e:	84 2f       	mov	r24, r20
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	82 1b       	sub	r24, r18
    1b64:	93 0b       	sbc	r25, r19
    1b66:	54 17       	cp	r21, r20
    1b68:	10 f0       	brcs	.+4      	; 0x1b6e <_ZN14HardwareSerial17availableForWriteEv+0x1a>
    1b6a:	cf 96       	adiw	r24, 0x3f	; 63
    1b6c:	08 95       	ret
    1b6e:	01 97       	sbiw	r24, 0x01	; 1
    1b70:	08 95       	ret

00001b72 <_Z14serialEventRunv>:
    1b72:	80 eb       	ldi	r24, 0xB0	; 176
    1b74:	9e e0       	ldi	r25, 0x0E	; 14
    1b76:	89 2b       	or	r24, r25
    1b78:	49 f0       	breq	.+18     	; 0x1b8c <_Z14serialEventRunv+0x1a>
    1b7a:	80 e0       	ldi	r24, 0x00	; 0
    1b7c:	90 e0       	ldi	r25, 0x00	; 0
    1b7e:	89 2b       	or	r24, r25
    1b80:	29 f0       	breq	.+10     	; 0x1b8c <_Z14serialEventRunv+0x1a>
    1b82:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <_Z17Serial0_availablev>
    1b86:	81 11       	cpse	r24, r1
    1b88:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    1b8c:	08 95       	ret

00001b8e <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
    1b8e:	fc 01       	movw	r30, r24
    1b90:	84 8d       	ldd	r24, Z+28	; 0x1c
    1b92:	df 01       	movw	r26, r30
    1b94:	a8 0f       	add	r26, r24
    1b96:	b1 1d       	adc	r27, r1
    1b98:	a3 5a       	subi	r26, 0xA3	; 163
    1b9a:	bf 4f       	sbci	r27, 0xFF	; 255
    1b9c:	2c 91       	ld	r18, X
    1b9e:	84 8d       	ldd	r24, Z+28	; 0x1c
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	01 96       	adiw	r24, 0x01	; 1
    1ba4:	8f 73       	andi	r24, 0x3F	; 63
    1ba6:	99 27       	eor	r25, r25
    1ba8:	84 8f       	std	Z+28, r24	; 0x1c
    1baa:	a6 89       	ldd	r26, Z+22	; 0x16
    1bac:	b7 89       	ldd	r27, Z+23	; 0x17
    1bae:	2c 93       	st	X, r18
    1bb0:	a0 89       	ldd	r26, Z+16	; 0x10
    1bb2:	b1 89       	ldd	r27, Z+17	; 0x11
    1bb4:	8c 91       	ld	r24, X
    1bb6:	83 70       	andi	r24, 0x03	; 3
    1bb8:	80 64       	ori	r24, 0x40	; 64
    1bba:	8c 93       	st	X, r24
    1bbc:	93 8d       	ldd	r25, Z+27	; 0x1b
    1bbe:	84 8d       	ldd	r24, Z+28	; 0x1c
    1bc0:	98 13       	cpse	r25, r24
    1bc2:	06 c0       	rjmp	.+12     	; 0x1bd0 <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x42>
    1bc4:	02 88       	ldd	r0, Z+18	; 0x12
    1bc6:	f3 89       	ldd	r31, Z+19	; 0x13
    1bc8:	e0 2d       	mov	r30, r0
    1bca:	80 81       	ld	r24, Z
    1bcc:	8f 7d       	andi	r24, 0xDF	; 223
    1bce:	80 83       	st	Z, r24
    1bd0:	08 95       	ret

00001bd2 <_ZN14HardwareSerial5writeEh>:
    1bd2:	ef 92       	push	r14
    1bd4:	ff 92       	push	r15
    1bd6:	0f 93       	push	r16
    1bd8:	1f 93       	push	r17
    1bda:	cf 93       	push	r28
    1bdc:	df 93       	push	r29
    1bde:	ec 01       	movw	r28, r24
    1be0:	81 e0       	ldi	r24, 0x01	; 1
    1be2:	88 8f       	std	Y+24, r24	; 0x18
    1be4:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1be6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1be8:	98 13       	cpse	r25, r24
    1bea:	05 c0       	rjmp	.+10     	; 0x1bf6 <_ZN14HardwareSerial5writeEh+0x24>
    1bec:	e8 89       	ldd	r30, Y+16	; 0x10
    1bee:	f9 89       	ldd	r31, Y+17	; 0x11
    1bf0:	80 81       	ld	r24, Z
    1bf2:	85 fd       	sbrc	r24, 5
    1bf4:	26 c0       	rjmp	.+76     	; 0x1c42 <_ZN14HardwareSerial5writeEh+0x70>
    1bf6:	f6 2e       	mov	r15, r22
    1bf8:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1bfa:	10 e0       	ldi	r17, 0x00	; 0
    1bfc:	0f 5f       	subi	r16, 0xFF	; 255
    1bfe:	1f 4f       	sbci	r17, 0xFF	; 255
    1c00:	0f 73       	andi	r16, 0x3F	; 63
    1c02:	11 27       	eor	r17, r17
    1c04:	e0 2e       	mov	r14, r16
    1c06:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1c08:	e8 12       	cpse	r14, r24
    1c0a:	0c c0       	rjmp	.+24     	; 0x1c24 <_ZN14HardwareSerial5writeEh+0x52>
    1c0c:	0f b6       	in	r0, 0x3f	; 63
    1c0e:	07 fc       	sbrc	r0, 7
    1c10:	fa cf       	rjmp	.-12     	; 0x1c06 <_ZN14HardwareSerial5writeEh+0x34>
    1c12:	e8 89       	ldd	r30, Y+16	; 0x10
    1c14:	f9 89       	ldd	r31, Y+17	; 0x11
    1c16:	80 81       	ld	r24, Z
    1c18:	85 ff       	sbrs	r24, 5
    1c1a:	f5 cf       	rjmp	.-22     	; 0x1c06 <_ZN14HardwareSerial5writeEh+0x34>
    1c1c:	ce 01       	movw	r24, r28
    1c1e:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1c22:	f1 cf       	rjmp	.-30     	; 0x1c06 <_ZN14HardwareSerial5writeEh+0x34>
    1c24:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c26:	fe 01       	movw	r30, r28
    1c28:	e8 0f       	add	r30, r24
    1c2a:	f1 1d       	adc	r31, r1
    1c2c:	e3 5a       	subi	r30, 0xA3	; 163
    1c2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c30:	f0 82       	st	Z, r15
    1c32:	9f b7       	in	r25, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1c34:	f8 94       	cli
    1c36:	0b 8f       	std	Y+27, r16	; 0x1b
    1c38:	ea 89       	ldd	r30, Y+18	; 0x12
    1c3a:	fb 89       	ldd	r31, Y+19	; 0x13
    1c3c:	80 81       	ld	r24, Z
    1c3e:	80 62       	ori	r24, 0x20	; 32
    1c40:	0a c0       	rjmp	.+20     	; 0x1c56 <_ZN14HardwareSerial5writeEh+0x84>
    1c42:	9f b7       	in	r25, 0x3f	; 63
    1c44:	f8 94       	cli
    1c46:	ee 89       	ldd	r30, Y+22	; 0x16
    1c48:	ff 89       	ldd	r31, Y+23	; 0x17
    1c4a:	60 83       	st	Z, r22
    1c4c:	e8 89       	ldd	r30, Y+16	; 0x10
    1c4e:	f9 89       	ldd	r31, Y+17	; 0x11
    1c50:	80 81       	ld	r24, Z
    1c52:	83 70       	andi	r24, 0x03	; 3
    1c54:	80 64       	ori	r24, 0x40	; 64
    1c56:	80 83       	st	Z, r24
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
    1c58:	9f bf       	out	0x3f, r25	; 63
    1c5a:	81 e0       	ldi	r24, 0x01	; 1
    1c5c:	90 e0       	ldi	r25, 0x00	; 0
    1c5e:	df 91       	pop	r29
    1c60:	cf 91       	pop	r28
    1c62:	1f 91       	pop	r17
    1c64:	0f 91       	pop	r16
    1c66:	ff 90       	pop	r15
    1c68:	ef 90       	pop	r14
    1c6a:	08 95       	ret

00001c6c <_ZN14HardwareSerial5flushEv>:
    1c6c:	cf 93       	push	r28
    1c6e:	df 93       	push	r29
    1c70:	ec 01       	movw	r28, r24
    1c72:	88 8d       	ldd	r24, Y+24	; 0x18
    1c74:	88 23       	and	r24, r24
    1c76:	c9 f0       	breq	.+50     	; 0x1caa <_ZN14HardwareSerial5flushEv+0x3e>
    1c78:	ea 89       	ldd	r30, Y+18	; 0x12
    1c7a:	fb 89       	ldd	r31, Y+19	; 0x13
    1c7c:	80 81       	ld	r24, Z
    1c7e:	85 fd       	sbrc	r24, 5
    1c80:	05 c0       	rjmp	.+10     	; 0x1c8c <_ZN14HardwareSerial5flushEv+0x20>
    1c82:	a8 89       	ldd	r26, Y+16	; 0x10
    1c84:	b9 89       	ldd	r27, Y+17	; 0x11
    1c86:	8c 91       	ld	r24, X
    1c88:	86 fd       	sbrc	r24, 6
    1c8a:	0f c0       	rjmp	.+30     	; 0x1caa <_ZN14HardwareSerial5flushEv+0x3e>
    1c8c:	0f b6       	in	r0, 0x3f	; 63
    1c8e:	07 fc       	sbrc	r0, 7
    1c90:	f5 cf       	rjmp	.-22     	; 0x1c7c <_ZN14HardwareSerial5flushEv+0x10>
    1c92:	80 81       	ld	r24, Z
    1c94:	85 ff       	sbrs	r24, 5
    1c96:	f2 cf       	rjmp	.-28     	; 0x1c7c <_ZN14HardwareSerial5flushEv+0x10>
    1c98:	a8 89       	ldd	r26, Y+16	; 0x10
    1c9a:	b9 89       	ldd	r27, Y+17	; 0x11
    1c9c:	8c 91       	ld	r24, X
    1c9e:	85 ff       	sbrs	r24, 5
    1ca0:	ed cf       	rjmp	.-38     	; 0x1c7c <_ZN14HardwareSerial5flushEv+0x10>
    1ca2:	ce 01       	movw	r24, r28
    1ca4:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1ca8:	e7 cf       	rjmp	.-50     	; 0x1c78 <_ZN14HardwareSerial5flushEv+0xc>
    1caa:	df 91       	pop	r29
    1cac:	cf 91       	pop	r28
    1cae:	08 95       	ret

00001cb0 <__vector_18>:
    1cb0:	1f 92       	push	r1
    1cb2:	0f 92       	push	r0
    1cb4:	0f b6       	in	r0, 0x3f	; 63
    1cb6:	0f 92       	push	r0
    1cb8:	11 24       	eor	r1, r1
    1cba:	2f 93       	push	r18
    1cbc:	8f 93       	push	r24
    1cbe:	9f 93       	push	r25
    1cc0:	ef 93       	push	r30
    1cc2:	ff 93       	push	r31
    1cc4:	e0 91 81 04 	lds	r30, 0x0481	; 0x800481 <Serial+0x10>
    1cc8:	f0 91 82 04 	lds	r31, 0x0482	; 0x800482 <Serial+0x11>
    1ccc:	80 81       	ld	r24, Z
    1cce:	e0 91 87 04 	lds	r30, 0x0487	; 0x800487 <Serial+0x16>
    1cd2:	f0 91 88 04 	lds	r31, 0x0488	; 0x800488 <Serial+0x17>
    1cd6:	82 fd       	sbrc	r24, 2
    1cd8:	12 c0       	rjmp	.+36     	; 0x1cfe <__vector_18+0x4e>
    1cda:	90 81       	ld	r25, Z
    1cdc:	80 91 8a 04 	lds	r24, 0x048A	; 0x80048a <Serial+0x19>
    1ce0:	8f 5f       	subi	r24, 0xFF	; 255
    1ce2:	8f 73       	andi	r24, 0x3F	; 63
    1ce4:	20 91 8b 04 	lds	r18, 0x048B	; 0x80048b <Serial+0x1a>
    1ce8:	82 17       	cp	r24, r18
    1cea:	51 f0       	breq	.+20     	; 0x1d00 <__vector_18+0x50>
    1cec:	e0 91 8a 04 	lds	r30, 0x048A	; 0x80048a <Serial+0x19>
    1cf0:	f0 e0       	ldi	r31, 0x00	; 0
    1cf2:	ef 58       	subi	r30, 0x8F	; 143
    1cf4:	fb 4f       	sbci	r31, 0xFB	; 251
    1cf6:	95 8f       	std	Z+29, r25	; 0x1d
    1cf8:	80 93 8a 04 	sts	0x048A, r24	; 0x80048a <Serial+0x19>
    1cfc:	01 c0       	rjmp	.+2      	; 0x1d00 <__vector_18+0x50>
    1cfe:	80 81       	ld	r24, Z
    1d00:	ff 91       	pop	r31
    1d02:	ef 91       	pop	r30
    1d04:	9f 91       	pop	r25
    1d06:	8f 91       	pop	r24
    1d08:	2f 91       	pop	r18
    1d0a:	0f 90       	pop	r0
    1d0c:	0f be       	out	0x3f, r0	; 63
    1d0e:	0f 90       	pop	r0
    1d10:	1f 90       	pop	r1
    1d12:	18 95       	reti

00001d14 <__vector_19>:
    1d14:	1f 92       	push	r1
    1d16:	0f 92       	push	r0
    1d18:	0f b6       	in	r0, 0x3f	; 63
    1d1a:	0f 92       	push	r0
    1d1c:	11 24       	eor	r1, r1
    1d1e:	2f 93       	push	r18
    1d20:	3f 93       	push	r19
    1d22:	4f 93       	push	r20
    1d24:	5f 93       	push	r21
    1d26:	6f 93       	push	r22
    1d28:	7f 93       	push	r23
    1d2a:	8f 93       	push	r24
    1d2c:	9f 93       	push	r25
    1d2e:	af 93       	push	r26
    1d30:	bf 93       	push	r27
    1d32:	ef 93       	push	r30
    1d34:	ff 93       	push	r31
    1d36:	81 e7       	ldi	r24, 0x71	; 113
    1d38:	94 e0       	ldi	r25, 0x04	; 4
    1d3a:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
    1d3e:	ff 91       	pop	r31
    1d40:	ef 91       	pop	r30
    1d42:	bf 91       	pop	r27
    1d44:	af 91       	pop	r26
    1d46:	9f 91       	pop	r25
    1d48:	8f 91       	pop	r24
    1d4a:	7f 91       	pop	r23
    1d4c:	6f 91       	pop	r22
    1d4e:	5f 91       	pop	r21
    1d50:	4f 91       	pop	r20
    1d52:	3f 91       	pop	r19
    1d54:	2f 91       	pop	r18
    1d56:	0f 90       	pop	r0
    1d58:	0f be       	out	0x3f, r0	; 63
    1d5a:	0f 90       	pop	r0
    1d5c:	1f 90       	pop	r1
    1d5e:	18 95       	reti

00001d60 <_Z17Serial0_availablev>:
    1d60:	81 e7       	ldi	r24, 0x71	; 113
    1d62:	94 e0       	ldi	r25, 0x04	; 4
    1d64:	0e 94 7c 0d 	call	0x1af8	; 0x1af8 <_ZN14HardwareSerial9availableEv>
    1d68:	21 e0       	ldi	r18, 0x01	; 1
    1d6a:	89 2b       	or	r24, r25
    1d6c:	09 f4       	brne	.+2      	; 0x1d70 <_Z17Serial0_availablev+0x10>
    1d6e:	20 e0       	ldi	r18, 0x00	; 0
    1d70:	82 2f       	mov	r24, r18
    1d72:	08 95       	ret

00001d74 <_GLOBAL__sub_I___vector_18>:
    1d74:	e1 e7       	ldi	r30, 0x71	; 113
    1d76:	f4 e0       	ldi	r31, 0x04	; 4
    1d78:	13 82       	std	Z+3, r1	; 0x03
    1d7a:	12 82       	std	Z+2, r1	; 0x02
    1d7c:	88 ee       	ldi	r24, 0xE8	; 232
    1d7e:	93 e0       	ldi	r25, 0x03	; 3
    1d80:	a0 e0       	ldi	r26, 0x00	; 0
    1d82:	b0 e0       	ldi	r27, 0x00	; 0
    1d84:	84 83       	std	Z+4, r24	; 0x04
    1d86:	95 83       	std	Z+5, r25	; 0x05
    1d88:	a6 83       	std	Z+6, r26	; 0x06
    1d8a:	b7 83       	std	Z+7, r27	; 0x07
    1d8c:	8f ea       	ldi	r24, 0xAF	; 175
    1d8e:	92 e0       	ldi	r25, 0x02	; 2
    1d90:	91 83       	std	Z+1, r25	; 0x01
    1d92:	80 83       	st	Z, r24
    1d94:	85 ec       	ldi	r24, 0xC5	; 197
    1d96:	90 e0       	ldi	r25, 0x00	; 0
    1d98:	95 87       	std	Z+13, r25	; 0x0d
    1d9a:	84 87       	std	Z+12, r24	; 0x0c
    1d9c:	84 ec       	ldi	r24, 0xC4	; 196
    1d9e:	90 e0       	ldi	r25, 0x00	; 0
    1da0:	97 87       	std	Z+15, r25	; 0x0f
    1da2:	86 87       	std	Z+14, r24	; 0x0e
    1da4:	80 ec       	ldi	r24, 0xC0	; 192
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	91 8b       	std	Z+17, r25	; 0x11
    1daa:	80 8b       	std	Z+16, r24	; 0x10
    1dac:	81 ec       	ldi	r24, 0xC1	; 193
    1dae:	90 e0       	ldi	r25, 0x00	; 0
    1db0:	93 8b       	std	Z+19, r25	; 0x13
    1db2:	82 8b       	std	Z+18, r24	; 0x12
    1db4:	82 ec       	ldi	r24, 0xC2	; 194
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	95 8b       	std	Z+21, r25	; 0x15
    1dba:	84 8b       	std	Z+20, r24	; 0x14
    1dbc:	86 ec       	ldi	r24, 0xC6	; 198
    1dbe:	90 e0       	ldi	r25, 0x00	; 0
    1dc0:	97 8b       	std	Z+23, r25	; 0x17
    1dc2:	86 8b       	std	Z+22, r24	; 0x16
    1dc4:	11 8e       	std	Z+25, r1	; 0x19
    1dc6:	12 8e       	std	Z+26, r1	; 0x1a
    1dc8:	13 8e       	std	Z+27, r1	; 0x1b
    1dca:	14 8e       	std	Z+28, r1	; 0x1c
    1dcc:	08 95       	ret

00001dce <main>:
    1dce:	0e 94 fe 11 	call	0x23fc	; 0x23fc <init>
    1dd2:	0e 94 de 1c 	call	0x39bc	; 0x39bc <initVariant>
    1dd6:	0e 94 77 04 	call	0x8ee	; 0x8ee <setup>
    1dda:	c9 eb       	ldi	r28, 0xB9	; 185
    1ddc:	dd e0       	ldi	r29, 0x0D	; 13
    1dde:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <loop>
    1de2:	20 97       	sbiw	r28, 0x00	; 0
    1de4:	e1 f3       	breq	.-8      	; 0x1dde <main+0x10>
    1de6:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <_Z14serialEventRunv>
    1dea:	f9 cf       	rjmp	.-14     	; 0x1dde <main+0x10>

00001dec <_ZN5Print5writeEPKhj>:
    1dec:	cf 92       	push	r12
    1dee:	df 92       	push	r13
    1df0:	ef 92       	push	r14
    1df2:	ff 92       	push	r15
    1df4:	0f 93       	push	r16
    1df6:	1f 93       	push	r17
    1df8:	cf 93       	push	r28
    1dfa:	df 93       	push	r29
    1dfc:	6c 01       	movw	r12, r24
    1dfe:	7a 01       	movw	r14, r20
    1e00:	8b 01       	movw	r16, r22
    1e02:	c0 e0       	ldi	r28, 0x00	; 0
    1e04:	d0 e0       	ldi	r29, 0x00	; 0
    1e06:	ce 15       	cp	r28, r14
    1e08:	df 05       	cpc	r29, r15
    1e0a:	81 f0       	breq	.+32     	; 0x1e2c <_ZN5Print5writeEPKhj+0x40>
    1e0c:	d8 01       	movw	r26, r16
    1e0e:	6d 91       	ld	r22, X+
    1e10:	8d 01       	movw	r16, r26
    1e12:	d6 01       	movw	r26, r12
    1e14:	ed 91       	ld	r30, X+
    1e16:	fc 91       	ld	r31, X
    1e18:	01 90       	ld	r0, Z+
    1e1a:	f0 81       	ld	r31, Z
    1e1c:	e0 2d       	mov	r30, r0
    1e1e:	c6 01       	movw	r24, r12
    1e20:	09 95       	icall
    1e22:	89 2b       	or	r24, r25
    1e24:	11 f0       	breq	.+4      	; 0x1e2a <_ZN5Print5writeEPKhj+0x3e>
    1e26:	21 96       	adiw	r28, 0x01	; 1
    1e28:	ee cf       	rjmp	.-36     	; 0x1e06 <_ZN5Print5writeEPKhj+0x1a>
    1e2a:	7e 01       	movw	r14, r28
    1e2c:	c7 01       	movw	r24, r14
    1e2e:	df 91       	pop	r29
    1e30:	cf 91       	pop	r28
    1e32:	1f 91       	pop	r17
    1e34:	0f 91       	pop	r16
    1e36:	ff 90       	pop	r15
    1e38:	ef 90       	pop	r14
    1e3a:	df 90       	pop	r13
    1e3c:	cf 90       	pop	r12
    1e3e:	08 95       	ret

00001e40 <_ZN5Print5printEPKc>:
    1e40:	0c 94 82 01 	jmp	0x304	; 0x304 <_ZN5Print5writeEPKc>

00001e44 <_ZN5Print5printEc>:
    1e44:	dc 01       	movw	r26, r24
    1e46:	ed 91       	ld	r30, X+
    1e48:	fc 91       	ld	r31, X
    1e4a:	01 90       	ld	r0, Z+
    1e4c:	f0 81       	ld	r31, Z
    1e4e:	e0 2d       	mov	r30, r0
    1e50:	09 94       	ijmp

00001e52 <_ZN5Print7printlnEv>:
    1e52:	6d eb       	ldi	r22, 0xBD	; 189
    1e54:	72 e0       	ldi	r23, 0x02	; 2
    1e56:	0c 94 82 01 	jmp	0x304	; 0x304 <_ZN5Print5writeEPKc>

00001e5a <_ZN5Print7printlnEPKc>:
    1e5a:	0f 93       	push	r16
    1e5c:	1f 93       	push	r17
    1e5e:	cf 93       	push	r28
    1e60:	df 93       	push	r29
    1e62:	ec 01       	movw	r28, r24
    1e64:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
    1e68:	8c 01       	movw	r16, r24
    1e6a:	ce 01       	movw	r24, r28
    1e6c:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <_ZN5Print7printlnEv>
    1e70:	80 0f       	add	r24, r16
    1e72:	91 1f       	adc	r25, r17
    1e74:	df 91       	pop	r29
    1e76:	cf 91       	pop	r28
    1e78:	1f 91       	pop	r17
    1e7a:	0f 91       	pop	r16
    1e7c:	08 95       	ret

00001e7e <_ZN5Print11printNumberEmh>:
    1e7e:	8f 92       	push	r8
    1e80:	9f 92       	push	r9
    1e82:	af 92       	push	r10
    1e84:	bf 92       	push	r11
    1e86:	ef 92       	push	r14
    1e88:	ff 92       	push	r15
    1e8a:	0f 93       	push	r16
    1e8c:	1f 93       	push	r17
    1e8e:	cf 93       	push	r28
    1e90:	df 93       	push	r29
    1e92:	cd b7       	in	r28, 0x3d	; 61
    1e94:	de b7       	in	r29, 0x3e	; 62
    1e96:	a1 97       	sbiw	r28, 0x21	; 33
    1e98:	0f b6       	in	r0, 0x3f	; 63
    1e9a:	f8 94       	cli
    1e9c:	de bf       	out	0x3e, r29	; 62
    1e9e:	0f be       	out	0x3f, r0	; 63
    1ea0:	cd bf       	out	0x3d, r28	; 61
    1ea2:	7c 01       	movw	r14, r24
    1ea4:	fa 01       	movw	r30, r20
    1ea6:	cb 01       	movw	r24, r22
    1ea8:	19 a2       	std	Y+33, r1	; 0x21
    1eaa:	22 30       	cpi	r18, 0x02	; 2
    1eac:	08 f4       	brcc	.+2      	; 0x1eb0 <_ZN5Print11printNumberEmh+0x32>
    1eae:	2a e0       	ldi	r18, 0x0A	; 10
    1eb0:	8e 01       	movw	r16, r28
    1eb2:	0f 5d       	subi	r16, 0xDF	; 223
    1eb4:	1f 4f       	sbci	r17, 0xFF	; 255
    1eb6:	82 2e       	mov	r8, r18
    1eb8:	91 2c       	mov	r9, r1
    1eba:	a1 2c       	mov	r10, r1
    1ebc:	b1 2c       	mov	r11, r1
    1ebe:	bf 01       	movw	r22, r30
    1ec0:	a5 01       	movw	r20, r10
    1ec2:	94 01       	movw	r18, r8
    1ec4:	0e 94 a6 1f 	call	0x3f4c	; 0x3f4c <__udivmodsi4>
    1ec8:	f9 01       	movw	r30, r18
    1eca:	ca 01       	movw	r24, r20
    1ecc:	01 50       	subi	r16, 0x01	; 1
    1ece:	11 09       	sbc	r17, r1
    1ed0:	6a 30       	cpi	r22, 0x0A	; 10
    1ed2:	10 f4       	brcc	.+4      	; 0x1ed8 <_ZN5Print11printNumberEmh+0x5a>
    1ed4:	60 5d       	subi	r22, 0xD0	; 208
    1ed6:	01 c0       	rjmp	.+2      	; 0x1eda <_ZN5Print11printNumberEmh+0x5c>
    1ed8:	69 5c       	subi	r22, 0xC9	; 201
    1eda:	d8 01       	movw	r26, r16
    1edc:	6c 93       	st	X, r22
    1ede:	23 2b       	or	r18, r19
    1ee0:	24 2b       	or	r18, r20
    1ee2:	25 2b       	or	r18, r21
    1ee4:	61 f7       	brne	.-40     	; 0x1ebe <_ZN5Print11printNumberEmh+0x40>
    1ee6:	b8 01       	movw	r22, r16
    1ee8:	c7 01       	movw	r24, r14
    1eea:	0e 94 82 01 	call	0x304	; 0x304 <_ZN5Print5writeEPKc>
    1eee:	a1 96       	adiw	r28, 0x21	; 33
    1ef0:	0f b6       	in	r0, 0x3f	; 63
    1ef2:	f8 94       	cli
    1ef4:	de bf       	out	0x3e, r29	; 62
    1ef6:	0f be       	out	0x3f, r0	; 63
    1ef8:	cd bf       	out	0x3d, r28	; 61
    1efa:	df 91       	pop	r29
    1efc:	cf 91       	pop	r28
    1efe:	1f 91       	pop	r17
    1f00:	0f 91       	pop	r16
    1f02:	ff 90       	pop	r15
    1f04:	ef 90       	pop	r14
    1f06:	bf 90       	pop	r11
    1f08:	af 90       	pop	r10
    1f0a:	9f 90       	pop	r9
    1f0c:	8f 90       	pop	r8
    1f0e:	08 95       	ret

00001f10 <_ZN5Print5printEmi>:
    1f10:	21 15       	cp	r18, r1
    1f12:	31 05       	cpc	r19, r1
    1f14:	41 f4       	brne	.+16     	; 0x1f26 <_ZN5Print5printEmi+0x16>
    1f16:	dc 01       	movw	r26, r24
    1f18:	ed 91       	ld	r30, X+
    1f1a:	fc 91       	ld	r31, X
    1f1c:	01 90       	ld	r0, Z+
    1f1e:	f0 81       	ld	r31, Z
    1f20:	e0 2d       	mov	r30, r0
    1f22:	64 2f       	mov	r22, r20
    1f24:	09 94       	ijmp
    1f26:	0c 94 3f 0f 	jmp	0x1e7e	; 0x1e7e <_ZN5Print11printNumberEmh>

00001f2a <_ZN5Print5printEji>:
    1f2a:	9a 01       	movw	r18, r20
    1f2c:	ab 01       	movw	r20, r22
    1f2e:	60 e0       	ldi	r22, 0x00	; 0
    1f30:	70 e0       	ldi	r23, 0x00	; 0
    1f32:	0c 94 88 0f 	jmp	0x1f10	; 0x1f10 <_ZN5Print5printEmi>

00001f36 <_ZN5Print5printEli>:
    1f36:	cf 92       	push	r12
    1f38:	df 92       	push	r13
    1f3a:	ef 92       	push	r14
    1f3c:	ff 92       	push	r15
    1f3e:	0f 93       	push	r16
    1f40:	1f 93       	push	r17
    1f42:	cf 93       	push	r28
    1f44:	df 93       	push	r29
    1f46:	21 15       	cp	r18, r1
    1f48:	31 05       	cpc	r19, r1
    1f4a:	81 f4       	brne	.+32     	; 0x1f6c <_ZN5Print5printEli+0x36>
    1f4c:	dc 01       	movw	r26, r24
    1f4e:	ed 91       	ld	r30, X+
    1f50:	fc 91       	ld	r31, X
    1f52:	01 90       	ld	r0, Z+
    1f54:	f0 81       	ld	r31, Z
    1f56:	e0 2d       	mov	r30, r0
    1f58:	64 2f       	mov	r22, r20
    1f5a:	df 91       	pop	r29
    1f5c:	cf 91       	pop	r28
    1f5e:	1f 91       	pop	r17
    1f60:	0f 91       	pop	r16
    1f62:	ff 90       	pop	r15
    1f64:	ef 90       	pop	r14
    1f66:	df 90       	pop	r13
    1f68:	cf 90       	pop	r12
    1f6a:	09 94       	ijmp
    1f6c:	2a 30       	cpi	r18, 0x0A	; 10
    1f6e:	31 05       	cpc	r19, r1
    1f70:	01 f5       	brne	.+64     	; 0x1fb2 <_ZN5Print5printEli+0x7c>
    1f72:	77 ff       	sbrs	r23, 7
    1f74:	1d c0       	rjmp	.+58     	; 0x1fb0 <_ZN5Print5printEli+0x7a>
    1f76:	6a 01       	movw	r12, r20
    1f78:	7b 01       	movw	r14, r22
    1f7a:	ec 01       	movw	r28, r24
    1f7c:	6d e2       	ldi	r22, 0x2D	; 45
    1f7e:	0e 94 22 0f 	call	0x1e44	; 0x1e44 <_ZN5Print5printEc>
    1f82:	8c 01       	movw	r16, r24
    1f84:	44 27       	eor	r20, r20
    1f86:	55 27       	eor	r21, r21
    1f88:	ba 01       	movw	r22, r20
    1f8a:	4c 19       	sub	r20, r12
    1f8c:	5d 09       	sbc	r21, r13
    1f8e:	6e 09       	sbc	r22, r14
    1f90:	7f 09       	sbc	r23, r15
    1f92:	2a e0       	ldi	r18, 0x0A	; 10
    1f94:	ce 01       	movw	r24, r28
    1f96:	0e 94 3f 0f 	call	0x1e7e	; 0x1e7e <_ZN5Print11printNumberEmh>
    1f9a:	80 0f       	add	r24, r16
    1f9c:	91 1f       	adc	r25, r17
    1f9e:	df 91       	pop	r29
    1fa0:	cf 91       	pop	r28
    1fa2:	1f 91       	pop	r17
    1fa4:	0f 91       	pop	r16
    1fa6:	ff 90       	pop	r15
    1fa8:	ef 90       	pop	r14
    1faa:	df 90       	pop	r13
    1fac:	cf 90       	pop	r12
    1fae:	08 95       	ret
    1fb0:	2a e0       	ldi	r18, 0x0A	; 10
    1fb2:	df 91       	pop	r29
    1fb4:	cf 91       	pop	r28
    1fb6:	1f 91       	pop	r17
    1fb8:	0f 91       	pop	r16
    1fba:	ff 90       	pop	r15
    1fbc:	ef 90       	pop	r14
    1fbe:	df 90       	pop	r13
    1fc0:	cf 90       	pop	r12
    1fc2:	0c 94 3f 0f 	jmp	0x1e7e	; 0x1e7e <_ZN5Print11printNumberEmh>

00001fc6 <_ZN5Print5printEii>:
    1fc6:	9a 01       	movw	r18, r20
    1fc8:	ab 01       	movw	r20, r22
    1fca:	77 0f       	add	r23, r23
    1fcc:	66 0b       	sbc	r22, r22
    1fce:	77 0b       	sbc	r23, r23
    1fd0:	0c 94 9b 0f 	jmp	0x1f36	; 0x1f36 <_ZN5Print5printEli>

00001fd4 <_ZN5Print10printFloatEdh>:
    1fd4:	7f 92       	push	r7
    1fd6:	8f 92       	push	r8
    1fd8:	9f 92       	push	r9
    1fda:	af 92       	push	r10
    1fdc:	bf 92       	push	r11
    1fde:	cf 92       	push	r12
    1fe0:	df 92       	push	r13
    1fe2:	ef 92       	push	r14
    1fe4:	ff 92       	push	r15
    1fe6:	0f 93       	push	r16
    1fe8:	1f 93       	push	r17
    1fea:	cf 93       	push	r28
    1fec:	df 93       	push	r29
    1fee:	8c 01       	movw	r16, r24
    1ff0:	6a 01       	movw	r12, r20
    1ff2:	7b 01       	movw	r14, r22
    1ff4:	72 2e       	mov	r7, r18
    1ff6:	9a 01       	movw	r18, r20
    1ff8:	ab 01       	movw	r20, r22
    1ffa:	c7 01       	movw	r24, r14
    1ffc:	b6 01       	movw	r22, r12
    1ffe:	0e 94 8d 1f 	call	0x3f1a	; 0x3f1a <__unordsf2>
    2002:	88 23       	and	r24, r24
    2004:	19 f0       	breq	.+6      	; 0x200c <_ZN5Print10printFloatEdh+0x38>
    2006:	60 ec       	ldi	r22, 0xC0	; 192
    2008:	72 e0       	ldi	r23, 0x02	; 2
    200a:	27 c0       	rjmp	.+78     	; 0x205a <_ZN5Print10printFloatEdh+0x86>
    200c:	46 01       	movw	r8, r12
    200e:	57 01       	movw	r10, r14
    2010:	e8 94       	clt
    2012:	b7 f8       	bld	r11, 7
    2014:	2f ef       	ldi	r18, 0xFF	; 255
    2016:	3f ef       	ldi	r19, 0xFF	; 255
    2018:	4f e7       	ldi	r20, 0x7F	; 127
    201a:	5f e7       	ldi	r21, 0x7F	; 127
    201c:	c5 01       	movw	r24, r10
    201e:	b4 01       	movw	r22, r8
    2020:	0e 94 8d 1f 	call	0x3f1a	; 0x3f1a <__unordsf2>
    2024:	81 11       	cpse	r24, r1
    2026:	0d c0       	rjmp	.+26     	; 0x2042 <_ZN5Print10printFloatEdh+0x6e>
    2028:	2f ef       	ldi	r18, 0xFF	; 255
    202a:	3f ef       	ldi	r19, 0xFF	; 255
    202c:	4f e7       	ldi	r20, 0x7F	; 127
    202e:	5f e7       	ldi	r21, 0x7F	; 127
    2030:	c5 01       	movw	r24, r10
    2032:	b4 01       	movw	r22, r8
    2034:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__cmpsf2>
    2038:	18 16       	cp	r1, r24
    203a:	1c f4       	brge	.+6      	; 0x2042 <_ZN5Print10printFloatEdh+0x6e>
    203c:	64 ec       	ldi	r22, 0xC4	; 196
    203e:	72 e0       	ldi	r23, 0x02	; 2
    2040:	0c c0       	rjmp	.+24     	; 0x205a <_ZN5Print10printFloatEdh+0x86>
    2042:	2f ef       	ldi	r18, 0xFF	; 255
    2044:	3f ef       	ldi	r19, 0xFF	; 255
    2046:	4f e7       	ldi	r20, 0x7F	; 127
    2048:	5f e4       	ldi	r21, 0x4F	; 79
    204a:	c7 01       	movw	r24, r14
    204c:	b6 01       	movw	r22, r12
    204e:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <__gesf2>
    2052:	18 16       	cp	r1, r24
    2054:	94 f4       	brge	.+36     	; 0x207a <_ZN5Print10printFloatEdh+0xa6>
    2056:	68 ec       	ldi	r22, 0xC8	; 200
    2058:	72 e0       	ldi	r23, 0x02	; 2
    205a:	c8 01       	movw	r24, r16
    205c:	df 91       	pop	r29
    205e:	cf 91       	pop	r28
    2060:	1f 91       	pop	r17
    2062:	0f 91       	pop	r16
    2064:	ff 90       	pop	r15
    2066:	ef 90       	pop	r14
    2068:	df 90       	pop	r13
    206a:	cf 90       	pop	r12
    206c:	bf 90       	pop	r11
    206e:	af 90       	pop	r10
    2070:	9f 90       	pop	r9
    2072:	8f 90       	pop	r8
    2074:	7f 90       	pop	r7
    2076:	0c 94 82 01 	jmp	0x304	; 0x304 <_ZN5Print5writeEPKc>
    207a:	2f ef       	ldi	r18, 0xFF	; 255
    207c:	3f ef       	ldi	r19, 0xFF	; 255
    207e:	4f e7       	ldi	r20, 0x7F	; 127
    2080:	5f ec       	ldi	r21, 0xCF	; 207
    2082:	c7 01       	movw	r24, r14
    2084:	b6 01       	movw	r22, r12
    2086:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__cmpsf2>
    208a:	87 fd       	sbrc	r24, 7
    208c:	e4 cf       	rjmp	.-56     	; 0x2056 <_ZN5Print10printFloatEdh+0x82>
    208e:	20 e0       	ldi	r18, 0x00	; 0
    2090:	30 e0       	ldi	r19, 0x00	; 0
    2092:	a9 01       	movw	r20, r18
    2094:	c7 01       	movw	r24, r14
    2096:	b6 01       	movw	r22, r12
    2098:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__cmpsf2>
    209c:	87 ff       	sbrs	r24, 7
    209e:	0a c0       	rjmp	.+20     	; 0x20b4 <_ZN5Print10printFloatEdh+0xe0>
    20a0:	6d e2       	ldi	r22, 0x2D	; 45
    20a2:	c8 01       	movw	r24, r16
    20a4:	0e 94 22 0f 	call	0x1e44	; 0x1e44 <_ZN5Print5printEc>
    20a8:	ec 01       	movw	r28, r24
    20aa:	f7 fa       	bst	r15, 7
    20ac:	f0 94       	com	r15
    20ae:	f7 f8       	bld	r15, 7
    20b0:	f0 94       	com	r15
    20b2:	02 c0       	rjmp	.+4      	; 0x20b8 <_ZN5Print10printFloatEdh+0xe4>
    20b4:	c0 e0       	ldi	r28, 0x00	; 0
    20b6:	d0 e0       	ldi	r29, 0x00	; 0
    20b8:	b1 2c       	mov	r11, r1
    20ba:	60 e0       	ldi	r22, 0x00	; 0
    20bc:	70 e0       	ldi	r23, 0x00	; 0
    20be:	80 e0       	ldi	r24, 0x00	; 0
    20c0:	9f e3       	ldi	r25, 0x3F	; 63
    20c2:	7b 14       	cp	r7, r11
    20c4:	41 f0       	breq	.+16     	; 0x20d6 <_ZN5Print10printFloatEdh+0x102>
    20c6:	20 e0       	ldi	r18, 0x00	; 0
    20c8:	30 e0       	ldi	r19, 0x00	; 0
    20ca:	40 e2       	ldi	r20, 0x20	; 32
    20cc:	51 e4       	ldi	r21, 0x41	; 65
    20ce:	0e 94 b0 0b 	call	0x1760	; 0x1760 <__divsf3>
    20d2:	b3 94       	inc	r11
    20d4:	f6 cf       	rjmp	.-20     	; 0x20c2 <_ZN5Print10printFloatEdh+0xee>
    20d6:	a7 01       	movw	r20, r14
    20d8:	96 01       	movw	r18, r12
    20da:	0e 94 3f 0b 	call	0x167e	; 0x167e <__addsf3>
    20de:	6b 01       	movw	r12, r22
    20e0:	7c 01       	movw	r14, r24
    20e2:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fixunssfsi>
    20e6:	4b 01       	movw	r8, r22
    20e8:	5c 01       	movw	r10, r24
    20ea:	2a e0       	ldi	r18, 0x0A	; 10
    20ec:	ab 01       	movw	r20, r22
    20ee:	bc 01       	movw	r22, r24
    20f0:	c8 01       	movw	r24, r16
    20f2:	0e 94 3f 0f 	call	0x1e7e	; 0x1e7e <_ZN5Print11printNumberEmh>
    20f6:	c8 0f       	add	r28, r24
    20f8:	d9 1f       	adc	r29, r25
    20fa:	77 20       	and	r7, r7
    20fc:	b9 f1       	breq	.+110    	; 0x216c <_ZN5Print10printFloatEdh+0x198>
    20fe:	c5 01       	movw	r24, r10
    2100:	b4 01       	movw	r22, r8
    2102:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__floatunsisf>
    2106:	9b 01       	movw	r18, r22
    2108:	ac 01       	movw	r20, r24
    210a:	c7 01       	movw	r24, r14
    210c:	b6 01       	movw	r22, r12
    210e:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
    2112:	6b 01       	movw	r12, r22
    2114:	7c 01       	movw	r14, r24
    2116:	6e e2       	ldi	r22, 0x2E	; 46
    2118:	c8 01       	movw	r24, r16
    211a:	0e 94 22 0f 	call	0x1e44	; 0x1e44 <_ZN5Print5printEc>
    211e:	c8 0f       	add	r28, r24
    2120:	d9 1f       	adc	r29, r25
    2122:	20 e0       	ldi	r18, 0x00	; 0
    2124:	30 e0       	ldi	r19, 0x00	; 0
    2126:	40 e2       	ldi	r20, 0x20	; 32
    2128:	51 e4       	ldi	r21, 0x41	; 65
    212a:	c7 01       	movw	r24, r14
    212c:	b6 01       	movw	r22, r12
    212e:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <__mulsf3>
    2132:	4b 01       	movw	r8, r22
    2134:	5c 01       	movw	r10, r24
    2136:	0e 94 29 0c 	call	0x1852	; 0x1852 <__fixunssfsi>
    213a:	6b 01       	movw	r12, r22
    213c:	7c 01       	movw	r14, r24
    213e:	4a e0       	ldi	r20, 0x0A	; 10
    2140:	50 e0       	ldi	r21, 0x00	; 0
    2142:	c8 01       	movw	r24, r16
    2144:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <_ZN5Print5printEji>
    2148:	c8 0f       	add	r28, r24
    214a:	d9 1f       	adc	r29, r25
    214c:	b6 01       	movw	r22, r12
    214e:	80 e0       	ldi	r24, 0x00	; 0
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__floatunsisf>
    2156:	9b 01       	movw	r18, r22
    2158:	ac 01       	movw	r20, r24
    215a:	c5 01       	movw	r24, r10
    215c:	b4 01       	movw	r22, r8
    215e:	0e 94 3e 0b 	call	0x167c	; 0x167c <__subsf3>
    2162:	6b 01       	movw	r12, r22
    2164:	7c 01       	movw	r14, r24
    2166:	7a 94       	dec	r7
    2168:	71 10       	cpse	r7, r1
    216a:	db cf       	rjmp	.-74     	; 0x2122 <_ZN5Print10printFloatEdh+0x14e>
    216c:	ce 01       	movw	r24, r28
    216e:	df 91       	pop	r29
    2170:	cf 91       	pop	r28
    2172:	1f 91       	pop	r17
    2174:	0f 91       	pop	r16
    2176:	ff 90       	pop	r15
    2178:	ef 90       	pop	r14
    217a:	df 90       	pop	r13
    217c:	cf 90       	pop	r12
    217e:	bf 90       	pop	r11
    2180:	af 90       	pop	r10
    2182:	9f 90       	pop	r9
    2184:	8f 90       	pop	r8
    2186:	7f 90       	pop	r7
    2188:	08 95       	ret

0000218a <_ZN5Print5printEdi>:
    218a:	0c 94 ea 0f 	jmp	0x1fd4	; 0x1fd4 <_ZN5Print10printFloatEdh>

0000218e <_ZN5Print7printlnEdi>:
    218e:	0f 93       	push	r16
    2190:	1f 93       	push	r17
    2192:	cf 93       	push	r28
    2194:	df 93       	push	r29
    2196:	ec 01       	movw	r28, r24
    2198:	0e 94 ea 0f 	call	0x1fd4	; 0x1fd4 <_ZN5Print10printFloatEdh>
    219c:	8c 01       	movw	r16, r24
    219e:	ce 01       	movw	r24, r28
    21a0:	0e 94 29 0f 	call	0x1e52	; 0x1e52 <_ZN5Print7printlnEv>
    21a4:	80 0f       	add	r24, r16
    21a6:	91 1f       	adc	r25, r17
    21a8:	df 91       	pop	r29
    21aa:	cf 91       	pop	r28
    21ac:	1f 91       	pop	r17
    21ae:	0f 91       	pop	r16
    21b0:	08 95       	ret

000021b2 <nothing>:
    21b2:	08 95       	ret

000021b4 <attachInterrupt>:
    21b4:	82 30       	cpi	r24, 0x02	; 2
    21b6:	e8 f4       	brcc	.+58     	; 0x21f2 <attachInterrupt+0x3e>
    21b8:	e8 2f       	mov	r30, r24
    21ba:	f0 e0       	ldi	r31, 0x00	; 0
    21bc:	ee 0f       	add	r30, r30
    21be:	ff 1f       	adc	r31, r31
    21c0:	ef 5d       	subi	r30, 0xDF	; 223
    21c2:	fe 4f       	sbci	r31, 0xFE	; 254
    21c4:	71 83       	std	Z+1, r23	; 0x01
    21c6:	60 83       	st	Z, r22
    21c8:	81 30       	cpi	r24, 0x01	; 1
    21ca:	41 f0       	breq	.+16     	; 0x21dc <attachInterrupt+0x28>
    21cc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
    21d0:	8c 7f       	andi	r24, 0xFC	; 252
    21d2:	48 2b       	or	r20, r24
    21d4:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
    21d8:	e8 9a       	sbi	0x1d, 0	; 29
    21da:	08 95       	ret
    21dc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
    21e0:	83 7f       	andi	r24, 0xF3	; 243
    21e2:	44 0f       	add	r20, r20
    21e4:	55 1f       	adc	r21, r21
    21e6:	44 0f       	add	r20, r20
    21e8:	55 1f       	adc	r21, r21
    21ea:	48 2b       	or	r20, r24
    21ec:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
    21f0:	e9 9a       	sbi	0x1d, 1	; 29
    21f2:	08 95       	ret

000021f4 <__vector_1>:
    21f4:	1f 92       	push	r1
    21f6:	0f 92       	push	r0
    21f8:	0f b6       	in	r0, 0x3f	; 63
    21fa:	0f 92       	push	r0
    21fc:	11 24       	eor	r1, r1
    21fe:	2f 93       	push	r18
    2200:	3f 93       	push	r19
    2202:	4f 93       	push	r20
    2204:	5f 93       	push	r21
    2206:	6f 93       	push	r22
    2208:	7f 93       	push	r23
    220a:	8f 93       	push	r24
    220c:	9f 93       	push	r25
    220e:	af 93       	push	r26
    2210:	bf 93       	push	r27
    2212:	ef 93       	push	r30
    2214:	ff 93       	push	r31
    2216:	e0 91 21 01 	lds	r30, 0x0121	; 0x800121 <intFunc>
    221a:	f0 91 22 01 	lds	r31, 0x0122	; 0x800122 <intFunc+0x1>
    221e:	09 95       	icall
    2220:	ff 91       	pop	r31
    2222:	ef 91       	pop	r30
    2224:	bf 91       	pop	r27
    2226:	af 91       	pop	r26
    2228:	9f 91       	pop	r25
    222a:	8f 91       	pop	r24
    222c:	7f 91       	pop	r23
    222e:	6f 91       	pop	r22
    2230:	5f 91       	pop	r21
    2232:	4f 91       	pop	r20
    2234:	3f 91       	pop	r19
    2236:	2f 91       	pop	r18
    2238:	0f 90       	pop	r0
    223a:	0f be       	out	0x3f, r0	; 63
    223c:	0f 90       	pop	r0
    223e:	1f 90       	pop	r1
    2240:	18 95       	reti

00002242 <__vector_2>:
    2242:	1f 92       	push	r1
    2244:	0f 92       	push	r0
    2246:	0f b6       	in	r0, 0x3f	; 63
    2248:	0f 92       	push	r0
    224a:	11 24       	eor	r1, r1
    224c:	2f 93       	push	r18
    224e:	3f 93       	push	r19
    2250:	4f 93       	push	r20
    2252:	5f 93       	push	r21
    2254:	6f 93       	push	r22
    2256:	7f 93       	push	r23
    2258:	8f 93       	push	r24
    225a:	9f 93       	push	r25
    225c:	af 93       	push	r26
    225e:	bf 93       	push	r27
    2260:	ef 93       	push	r30
    2262:	ff 93       	push	r31
    2264:	e0 91 23 01 	lds	r30, 0x0123	; 0x800123 <intFunc+0x2>
    2268:	f0 91 24 01 	lds	r31, 0x0124	; 0x800124 <intFunc+0x3>
    226c:	09 95       	icall
    226e:	ff 91       	pop	r31
    2270:	ef 91       	pop	r30
    2272:	bf 91       	pop	r27
    2274:	af 91       	pop	r26
    2276:	9f 91       	pop	r25
    2278:	8f 91       	pop	r24
    227a:	7f 91       	pop	r23
    227c:	6f 91       	pop	r22
    227e:	5f 91       	pop	r21
    2280:	4f 91       	pop	r20
    2282:	3f 91       	pop	r19
    2284:	2f 91       	pop	r18
    2286:	0f 90       	pop	r0
    2288:	0f be       	out	0x3f, r0	; 63
    228a:	0f 90       	pop	r0
    228c:	1f 90       	pop	r1
    228e:	18 95       	reti

00002290 <__vector_16>:
    2290:	1f 92       	push	r1
    2292:	0f 92       	push	r0
    2294:	0f b6       	in	r0, 0x3f	; 63
    2296:	0f 92       	push	r0
    2298:	11 24       	eor	r1, r1
    229a:	2f 93       	push	r18
    229c:	3f 93       	push	r19
    229e:	8f 93       	push	r24
    22a0:	9f 93       	push	r25
    22a2:	af 93       	push	r26
    22a4:	bf 93       	push	r27
    22a6:	80 91 0f 05 	lds	r24, 0x050F	; 0x80050f <timer0_millis>
    22aa:	90 91 10 05 	lds	r25, 0x0510	; 0x800510 <timer0_millis+0x1>
    22ae:	a0 91 11 05 	lds	r26, 0x0511	; 0x800511 <timer0_millis+0x2>
    22b2:	b0 91 12 05 	lds	r27, 0x0512	; 0x800512 <timer0_millis+0x3>
    22b6:	30 91 0e 05 	lds	r19, 0x050E	; 0x80050e <timer0_fract>
    22ba:	23 e0       	ldi	r18, 0x03	; 3
    22bc:	23 0f       	add	r18, r19
    22be:	2d 37       	cpi	r18, 0x7D	; 125
    22c0:	20 f4       	brcc	.+8      	; 0x22ca <__vector_16+0x3a>
    22c2:	01 96       	adiw	r24, 0x01	; 1
    22c4:	a1 1d       	adc	r26, r1
    22c6:	b1 1d       	adc	r27, r1
    22c8:	05 c0       	rjmp	.+10     	; 0x22d4 <__vector_16+0x44>
    22ca:	26 e8       	ldi	r18, 0x86	; 134
    22cc:	23 0f       	add	r18, r19
    22ce:	02 96       	adiw	r24, 0x02	; 2
    22d0:	a1 1d       	adc	r26, r1
    22d2:	b1 1d       	adc	r27, r1
    22d4:	20 93 0e 05 	sts	0x050E, r18	; 0x80050e <timer0_fract>
    22d8:	80 93 0f 05 	sts	0x050F, r24	; 0x80050f <timer0_millis>
    22dc:	90 93 10 05 	sts	0x0510, r25	; 0x800510 <timer0_millis+0x1>
    22e0:	a0 93 11 05 	sts	0x0511, r26	; 0x800511 <timer0_millis+0x2>
    22e4:	b0 93 12 05 	sts	0x0512, r27	; 0x800512 <timer0_millis+0x3>
    22e8:	80 91 13 05 	lds	r24, 0x0513	; 0x800513 <timer0_overflow_count>
    22ec:	90 91 14 05 	lds	r25, 0x0514	; 0x800514 <timer0_overflow_count+0x1>
    22f0:	a0 91 15 05 	lds	r26, 0x0515	; 0x800515 <timer0_overflow_count+0x2>
    22f4:	b0 91 16 05 	lds	r27, 0x0516	; 0x800516 <timer0_overflow_count+0x3>
    22f8:	01 96       	adiw	r24, 0x01	; 1
    22fa:	a1 1d       	adc	r26, r1
    22fc:	b1 1d       	adc	r27, r1
    22fe:	80 93 13 05 	sts	0x0513, r24	; 0x800513 <timer0_overflow_count>
    2302:	90 93 14 05 	sts	0x0514, r25	; 0x800514 <timer0_overflow_count+0x1>
    2306:	a0 93 15 05 	sts	0x0515, r26	; 0x800515 <timer0_overflow_count+0x2>
    230a:	b0 93 16 05 	sts	0x0516, r27	; 0x800516 <timer0_overflow_count+0x3>
    230e:	bf 91       	pop	r27
    2310:	af 91       	pop	r26
    2312:	9f 91       	pop	r25
    2314:	8f 91       	pop	r24
    2316:	3f 91       	pop	r19
    2318:	2f 91       	pop	r18
    231a:	0f 90       	pop	r0
    231c:	0f be       	out	0x3f, r0	; 63
    231e:	0f 90       	pop	r0
    2320:	1f 90       	pop	r1
    2322:	18 95       	reti

00002324 <micros>:
    2324:	3f b7       	in	r19, 0x3f	; 63
    2326:	f8 94       	cli
    2328:	80 91 13 05 	lds	r24, 0x0513	; 0x800513 <timer0_overflow_count>
    232c:	90 91 14 05 	lds	r25, 0x0514	; 0x800514 <timer0_overflow_count+0x1>
    2330:	a0 91 15 05 	lds	r26, 0x0515	; 0x800515 <timer0_overflow_count+0x2>
    2334:	b0 91 16 05 	lds	r27, 0x0516	; 0x800516 <timer0_overflow_count+0x3>
    2338:	26 b5       	in	r18, 0x26	; 38
    233a:	a8 9b       	sbis	0x15, 0	; 21
    233c:	05 c0       	rjmp	.+10     	; 0x2348 <micros+0x24>
    233e:	2f 3f       	cpi	r18, 0xFF	; 255
    2340:	19 f0       	breq	.+6      	; 0x2348 <micros+0x24>
    2342:	01 96       	adiw	r24, 0x01	; 1
    2344:	a1 1d       	adc	r26, r1
    2346:	b1 1d       	adc	r27, r1
    2348:	3f bf       	out	0x3f, r19	; 63
    234a:	ba 2f       	mov	r27, r26
    234c:	a9 2f       	mov	r26, r25
    234e:	98 2f       	mov	r25, r24
    2350:	88 27       	eor	r24, r24
    2352:	82 0f       	add	r24, r18
    2354:	91 1d       	adc	r25, r1
    2356:	a1 1d       	adc	r26, r1
    2358:	b1 1d       	adc	r27, r1
    235a:	bc 01       	movw	r22, r24
    235c:	cd 01       	movw	r24, r26
    235e:	42 e0       	ldi	r20, 0x02	; 2
    2360:	66 0f       	add	r22, r22
    2362:	77 1f       	adc	r23, r23
    2364:	88 1f       	adc	r24, r24
    2366:	99 1f       	adc	r25, r25
    2368:	4a 95       	dec	r20
    236a:	d1 f7       	brne	.-12     	; 0x2360 <micros+0x3c>
    236c:	08 95       	ret

0000236e <delay>:
    236e:	8f 92       	push	r8
    2370:	9f 92       	push	r9
    2372:	af 92       	push	r10
    2374:	bf 92       	push	r11
    2376:	cf 92       	push	r12
    2378:	df 92       	push	r13
    237a:	ef 92       	push	r14
    237c:	ff 92       	push	r15
    237e:	6b 01       	movw	r12, r22
    2380:	7c 01       	movw	r14, r24
    2382:	0e 94 92 11 	call	0x2324	; 0x2324 <micros>
    2386:	4b 01       	movw	r8, r22
    2388:	5c 01       	movw	r10, r24
    238a:	c1 14       	cp	r12, r1
    238c:	d1 04       	cpc	r13, r1
    238e:	e1 04       	cpc	r14, r1
    2390:	f1 04       	cpc	r15, r1
    2392:	01 f1       	breq	.+64     	; 0x23d4 <delay+0x66>
    2394:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <yield>
    2398:	0e 94 92 11 	call	0x2324	; 0x2324 <micros>
    239c:	dc 01       	movw	r26, r24
    239e:	cb 01       	movw	r24, r22
    23a0:	88 19       	sub	r24, r8
    23a2:	99 09       	sbc	r25, r9
    23a4:	aa 09       	sbc	r26, r10
    23a6:	bb 09       	sbc	r27, r11
    23a8:	88 3e       	cpi	r24, 0xE8	; 232
    23aa:	93 40       	sbci	r25, 0x03	; 3
    23ac:	a1 05       	cpc	r26, r1
    23ae:	b1 05       	cpc	r27, r1
    23b0:	60 f3       	brcs	.-40     	; 0x238a <delay+0x1c>
    23b2:	21 e0       	ldi	r18, 0x01	; 1
    23b4:	c2 1a       	sub	r12, r18
    23b6:	d1 08       	sbc	r13, r1
    23b8:	e1 08       	sbc	r14, r1
    23ba:	f1 08       	sbc	r15, r1
    23bc:	88 ee       	ldi	r24, 0xE8	; 232
    23be:	88 0e       	add	r8, r24
    23c0:	83 e0       	ldi	r24, 0x03	; 3
    23c2:	98 1e       	adc	r9, r24
    23c4:	a1 1c       	adc	r10, r1
    23c6:	b1 1c       	adc	r11, r1
    23c8:	c1 14       	cp	r12, r1
    23ca:	d1 04       	cpc	r13, r1
    23cc:	e1 04       	cpc	r14, r1
    23ce:	f1 04       	cpc	r15, r1
    23d0:	19 f7       	brne	.-58     	; 0x2398 <delay+0x2a>
    23d2:	db cf       	rjmp	.-74     	; 0x238a <delay+0x1c>
    23d4:	ff 90       	pop	r15
    23d6:	ef 90       	pop	r14
    23d8:	df 90       	pop	r13
    23da:	cf 90       	pop	r12
    23dc:	bf 90       	pop	r11
    23de:	af 90       	pop	r10
    23e0:	9f 90       	pop	r9
    23e2:	8f 90       	pop	r8
    23e4:	08 95       	ret

000023e6 <delayMicroseconds>:
    23e6:	82 30       	cpi	r24, 0x02	; 2
    23e8:	91 05       	cpc	r25, r1
    23ea:	38 f0       	brcs	.+14     	; 0x23fa <delayMicroseconds+0x14>
    23ec:	88 0f       	add	r24, r24
    23ee:	99 1f       	adc	r25, r25
    23f0:	88 0f       	add	r24, r24
    23f2:	99 1f       	adc	r25, r25
    23f4:	05 97       	sbiw	r24, 0x05	; 5
    23f6:	01 97       	sbiw	r24, 0x01	; 1
    23f8:	f1 f7       	brne	.-4      	; 0x23f6 <delayMicroseconds+0x10>
    23fa:	08 95       	ret

000023fc <init>:
    23fc:	78 94       	sei
    23fe:	84 b5       	in	r24, 0x24	; 36
    2400:	82 60       	ori	r24, 0x02	; 2
    2402:	84 bd       	out	0x24, r24	; 36
    2404:	84 b5       	in	r24, 0x24	; 36
    2406:	81 60       	ori	r24, 0x01	; 1
    2408:	84 bd       	out	0x24, r24	; 36
    240a:	85 b5       	in	r24, 0x25	; 37
    240c:	82 60       	ori	r24, 0x02	; 2
    240e:	85 bd       	out	0x25, r24	; 37
    2410:	85 b5       	in	r24, 0x25	; 37
    2412:	81 60       	ori	r24, 0x01	; 1
    2414:	85 bd       	out	0x25, r24	; 37
    2416:	ee e6       	ldi	r30, 0x6E	; 110
    2418:	f0 e0       	ldi	r31, 0x00	; 0
    241a:	80 81       	ld	r24, Z
    241c:	81 60       	ori	r24, 0x01	; 1
    241e:	80 83       	st	Z, r24
    2420:	e1 e8       	ldi	r30, 0x81	; 129
    2422:	f0 e0       	ldi	r31, 0x00	; 0
    2424:	10 82       	st	Z, r1
    2426:	80 81       	ld	r24, Z
    2428:	82 60       	ori	r24, 0x02	; 2
    242a:	80 83       	st	Z, r24
    242c:	80 81       	ld	r24, Z
    242e:	81 60       	ori	r24, 0x01	; 1
    2430:	80 83       	st	Z, r24
    2432:	e0 e8       	ldi	r30, 0x80	; 128
    2434:	f0 e0       	ldi	r31, 0x00	; 0
    2436:	80 81       	ld	r24, Z
    2438:	81 60       	ori	r24, 0x01	; 1
    243a:	80 83       	st	Z, r24
    243c:	e1 eb       	ldi	r30, 0xB1	; 177
    243e:	f0 e0       	ldi	r31, 0x00	; 0
    2440:	80 81       	ld	r24, Z
    2442:	84 60       	ori	r24, 0x04	; 4
    2444:	80 83       	st	Z, r24
    2446:	e0 eb       	ldi	r30, 0xB0	; 176
    2448:	f0 e0       	ldi	r31, 0x00	; 0
    244a:	80 81       	ld	r24, Z
    244c:	81 60       	ori	r24, 0x01	; 1
    244e:	80 83       	st	Z, r24
    2450:	ea e7       	ldi	r30, 0x7A	; 122
    2452:	f0 e0       	ldi	r31, 0x00	; 0
    2454:	80 81       	ld	r24, Z
    2456:	84 60       	ori	r24, 0x04	; 4
    2458:	80 83       	st	Z, r24
    245a:	80 81       	ld	r24, Z
    245c:	82 60       	ori	r24, 0x02	; 2
    245e:	80 83       	st	Z, r24
    2460:	80 81       	ld	r24, Z
    2462:	81 60       	ori	r24, 0x01	; 1
    2464:	80 83       	st	Z, r24
    2466:	80 81       	ld	r24, Z
    2468:	80 68       	ori	r24, 0x80	; 128
    246a:	80 83       	st	Z, r24
    246c:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    2470:	08 95       	ret

00002472 <analogRead>:
    2472:	8e 30       	cpi	r24, 0x0E	; 14
    2474:	08 f0       	brcs	.+2      	; 0x2478 <analogRead+0x6>
    2476:	8e 50       	subi	r24, 0x0E	; 14
    2478:	20 91 25 01 	lds	r18, 0x0125	; 0x800125 <analog_reference>
    247c:	90 e4       	ldi	r25, 0x40	; 64
    247e:	29 9f       	mul	r18, r25
    2480:	90 01       	movw	r18, r0
    2482:	11 24       	eor	r1, r1
    2484:	87 70       	andi	r24, 0x07	; 7
    2486:	82 2b       	or	r24, r18
    2488:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
    248c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
    2490:	80 64       	ori	r24, 0x40	; 64
    2492:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
    2496:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
    249a:	86 fd       	sbrc	r24, 6
    249c:	fc cf       	rjmp	.-8      	; 0x2496 <analogRead+0x24>
    249e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
    24a2:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
    24a6:	90 e0       	ldi	r25, 0x00	; 0
    24a8:	92 2b       	or	r25, r18
    24aa:	08 95       	ret

000024ac <analogWrite>:
    24ac:	1f 93       	push	r17
    24ae:	cf 93       	push	r28
    24b0:	df 93       	push	r29
    24b2:	18 2f       	mov	r17, r24
    24b4:	eb 01       	movw	r28, r22
    24b6:	61 e0       	ldi	r22, 0x01	; 1
    24b8:	0e 94 de 12 	call	0x25bc	; 0x25bc <pinMode>
    24bc:	20 97       	sbiw	r28, 0x00	; 0
    24be:	11 f4       	brne	.+4      	; 0x24c4 <analogWrite+0x18>
    24c0:	60 e0       	ldi	r22, 0x00	; 0
    24c2:	04 c0       	rjmp	.+8      	; 0x24cc <analogWrite+0x20>
    24c4:	cf 3f       	cpi	r28, 0xFF	; 255
    24c6:	d1 05       	cpc	r29, r1
    24c8:	39 f4       	brne	.+14     	; 0x24d8 <analogWrite+0x2c>
    24ca:	61 e0       	ldi	r22, 0x01	; 1
    24cc:	81 2f       	mov	r24, r17
    24ce:	df 91       	pop	r29
    24d0:	cf 91       	pop	r28
    24d2:	1f 91       	pop	r17
    24d4:	0c 94 1a 13 	jmp	0x2634	; 0x2634 <digitalWrite>
    24d8:	e1 2f       	mov	r30, r17
    24da:	f0 e0       	ldi	r31, 0x00	; 0
    24dc:	e4 56       	subi	r30, 0x64	; 100
    24de:	ff 4f       	sbci	r31, 0xFF	; 255
    24e0:	e4 91       	lpm	r30, Z
    24e2:	e3 30       	cpi	r30, 0x03	; 3
    24e4:	f9 f0       	breq	.+62     	; 0x2524 <analogWrite+0x78>
    24e6:	48 f4       	brcc	.+18     	; 0x24fa <analogWrite+0x4e>
    24e8:	e1 30       	cpi	r30, 0x01	; 1
    24ea:	b9 f0       	breq	.+46     	; 0x251a <analogWrite+0x6e>
    24ec:	e2 30       	cpi	r30, 0x02	; 2
    24ee:	a1 f5       	brne	.+104    	; 0x2558 <analogWrite+0xac>
    24f0:	84 b5       	in	r24, 0x24	; 36
    24f2:	80 62       	ori	r24, 0x20	; 32
    24f4:	84 bd       	out	0x24, r24	; 36
    24f6:	c8 bd       	out	0x28, r28	; 40
    24f8:	34 c0       	rjmp	.+104    	; 0x2562 <analogWrite+0xb6>
    24fa:	e7 30       	cpi	r30, 0x07	; 7
    24fc:	e9 f0       	breq	.+58     	; 0x2538 <analogWrite+0x8c>
    24fe:	e8 30       	cpi	r30, 0x08	; 8
    2500:	19 f1       	breq	.+70     	; 0x2548 <analogWrite+0x9c>
    2502:	e4 30       	cpi	r30, 0x04	; 4
    2504:	49 f5       	brne	.+82     	; 0x2558 <analogWrite+0xac>
    2506:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    250a:	80 62       	ori	r24, 0x20	; 32
    250c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    2510:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
    2514:	c0 93 8a 00 	sts	0x008A, r28	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
    2518:	24 c0       	rjmp	.+72     	; 0x2562 <analogWrite+0xb6>
    251a:	84 b5       	in	r24, 0x24	; 36
    251c:	80 68       	ori	r24, 0x80	; 128
    251e:	84 bd       	out	0x24, r24	; 36
    2520:	c7 bd       	out	0x27, r28	; 39
    2522:	1f c0       	rjmp	.+62     	; 0x2562 <analogWrite+0xb6>
    2524:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    2528:	80 68       	ori	r24, 0x80	; 128
    252a:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    252e:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    2532:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    2536:	15 c0       	rjmp	.+42     	; 0x2562 <analogWrite+0xb6>
    2538:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    253c:	80 68       	ori	r24, 0x80	; 128
    253e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    2542:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    2546:	0d c0       	rjmp	.+26     	; 0x2562 <analogWrite+0xb6>
    2548:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    254c:	80 62       	ori	r24, 0x20	; 32
    254e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    2552:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__DATA_REGION_ORIGIN__+0x54>
    2556:	05 c0       	rjmp	.+10     	; 0x2562 <analogWrite+0xb6>
    2558:	c0 38       	cpi	r28, 0x80	; 128
    255a:	d1 05       	cpc	r29, r1
    255c:	0c f0       	brlt	.+2      	; 0x2560 <analogWrite+0xb4>
    255e:	b5 cf       	rjmp	.-150    	; 0x24ca <analogWrite+0x1e>
    2560:	af cf       	rjmp	.-162    	; 0x24c0 <analogWrite+0x14>
    2562:	df 91       	pop	r29
    2564:	cf 91       	pop	r28
    2566:	1f 91       	pop	r17
    2568:	08 95       	ret

0000256a <turnOffPWM>:
    256a:	83 30       	cpi	r24, 0x03	; 3
    256c:	81 f0       	breq	.+32     	; 0x258e <turnOffPWM+0x24>
    256e:	28 f4       	brcc	.+10     	; 0x257a <turnOffPWM+0x10>
    2570:	81 30       	cpi	r24, 0x01	; 1
    2572:	99 f0       	breq	.+38     	; 0x259a <turnOffPWM+0x30>
    2574:	82 30       	cpi	r24, 0x02	; 2
    2576:	a1 f0       	breq	.+40     	; 0x25a0 <turnOffPWM+0x36>
    2578:	08 95       	ret
    257a:	87 30       	cpi	r24, 0x07	; 7
    257c:	a9 f0       	breq	.+42     	; 0x25a8 <turnOffPWM+0x3e>
    257e:	88 30       	cpi	r24, 0x08	; 8
    2580:	b9 f0       	breq	.+46     	; 0x25b0 <turnOffPWM+0x46>
    2582:	84 30       	cpi	r24, 0x04	; 4
    2584:	d1 f4       	brne	.+52     	; 0x25ba <turnOffPWM+0x50>
    2586:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    258a:	8f 7d       	andi	r24, 0xDF	; 223
    258c:	03 c0       	rjmp	.+6      	; 0x2594 <turnOffPWM+0x2a>
    258e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    2592:	8f 77       	andi	r24, 0x7F	; 127
    2594:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
    2598:	08 95       	ret
    259a:	84 b5       	in	r24, 0x24	; 36
    259c:	8f 77       	andi	r24, 0x7F	; 127
    259e:	02 c0       	rjmp	.+4      	; 0x25a4 <turnOffPWM+0x3a>
    25a0:	84 b5       	in	r24, 0x24	; 36
    25a2:	8f 7d       	andi	r24, 0xDF	; 223
    25a4:	84 bd       	out	0x24, r24	; 36
    25a6:	08 95       	ret
    25a8:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    25ac:	8f 77       	andi	r24, 0x7F	; 127
    25ae:	03 c0       	rjmp	.+6      	; 0x25b6 <turnOffPWM+0x4c>
    25b0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    25b4:	8f 7d       	andi	r24, 0xDF	; 223
    25b6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__DATA_REGION_ORIGIN__+0x50>
    25ba:	08 95       	ret

000025bc <pinMode>:
    25bc:	cf 93       	push	r28
    25be:	df 93       	push	r29
    25c0:	90 e0       	ldi	r25, 0x00	; 0
    25c2:	fc 01       	movw	r30, r24
    25c4:	e0 55       	subi	r30, 0x50	; 80
    25c6:	ff 4f       	sbci	r31, 0xFF	; 255
    25c8:	24 91       	lpm	r18, Z
    25ca:	fc 01       	movw	r30, r24
    25cc:	ec 53       	subi	r30, 0x3C	; 60
    25ce:	ff 4f       	sbci	r31, 0xFF	; 255
    25d0:	84 91       	lpm	r24, Z
    25d2:	88 23       	and	r24, r24
    25d4:	61 f1       	breq	.+88     	; 0x262e <pinMode+0x72>
    25d6:	90 e0       	ldi	r25, 0x00	; 0
    25d8:	88 0f       	add	r24, r24
    25da:	99 1f       	adc	r25, r25
    25dc:	fc 01       	movw	r30, r24
    25de:	e4 51       	subi	r30, 0x14	; 20
    25e0:	ff 4f       	sbci	r31, 0xFF	; 255
    25e2:	c5 91       	lpm	r28, Z+
    25e4:	d4 91       	lpm	r29, Z
    25e6:	fc 01       	movw	r30, r24
    25e8:	ee 51       	subi	r30, 0x1E	; 30
    25ea:	ff 4f       	sbci	r31, 0xFF	; 255
    25ec:	a5 91       	lpm	r26, Z+
    25ee:	b4 91       	lpm	r27, Z
    25f0:	61 11       	cpse	r22, r1
    25f2:	09 c0       	rjmp	.+18     	; 0x2606 <pinMode+0x4a>
    25f4:	9f b7       	in	r25, 0x3f	; 63
    25f6:	f8 94       	cli
    25f8:	88 81       	ld	r24, Y
    25fa:	20 95       	com	r18
    25fc:	82 23       	and	r24, r18
    25fe:	88 83       	st	Y, r24
    2600:	ec 91       	ld	r30, X
    2602:	2e 23       	and	r18, r30
    2604:	0b c0       	rjmp	.+22     	; 0x261c <pinMode+0x60>
    2606:	62 30       	cpi	r22, 0x02	; 2
    2608:	61 f4       	brne	.+24     	; 0x2622 <pinMode+0x66>
    260a:	9f b7       	in	r25, 0x3f	; 63
    260c:	f8 94       	cli
    260e:	88 81       	ld	r24, Y
    2610:	32 2f       	mov	r19, r18
    2612:	30 95       	com	r19
    2614:	83 23       	and	r24, r19
    2616:	88 83       	st	Y, r24
    2618:	ec 91       	ld	r30, X
    261a:	2e 2b       	or	r18, r30
    261c:	2c 93       	st	X, r18
    261e:	9f bf       	out	0x3f, r25	; 63
    2620:	06 c0       	rjmp	.+12     	; 0x262e <pinMode+0x72>
    2622:	8f b7       	in	r24, 0x3f	; 63
    2624:	f8 94       	cli
    2626:	e8 81       	ld	r30, Y
    2628:	2e 2b       	or	r18, r30
    262a:	28 83       	st	Y, r18
    262c:	8f bf       	out	0x3f, r24	; 63
    262e:	df 91       	pop	r29
    2630:	cf 91       	pop	r28
    2632:	08 95       	ret

00002634 <digitalWrite>:
    2634:	1f 93       	push	r17
    2636:	cf 93       	push	r28
    2638:	df 93       	push	r29
    263a:	28 2f       	mov	r18, r24
    263c:	30 e0       	ldi	r19, 0x00	; 0
    263e:	f9 01       	movw	r30, r18
    2640:	e4 56       	subi	r30, 0x64	; 100
    2642:	ff 4f       	sbci	r31, 0xFF	; 255
    2644:	84 91       	lpm	r24, Z
    2646:	f9 01       	movw	r30, r18
    2648:	e0 55       	subi	r30, 0x50	; 80
    264a:	ff 4f       	sbci	r31, 0xFF	; 255
    264c:	d4 91       	lpm	r29, Z
    264e:	f9 01       	movw	r30, r18
    2650:	ec 53       	subi	r30, 0x3C	; 60
    2652:	ff 4f       	sbci	r31, 0xFF	; 255
    2654:	c4 91       	lpm	r28, Z
    2656:	cc 23       	and	r28, r28
    2658:	c1 f0       	breq	.+48     	; 0x268a <digitalWrite+0x56>
    265a:	16 2f       	mov	r17, r22
    265c:	81 11       	cpse	r24, r1
    265e:	0e 94 b5 12 	call	0x256a	; 0x256a <turnOffPWM>
    2662:	ec 2f       	mov	r30, r28
    2664:	f0 e0       	ldi	r31, 0x00	; 0
    2666:	ee 0f       	add	r30, r30
    2668:	ff 1f       	adc	r31, r31
    266a:	ee 51       	subi	r30, 0x1E	; 30
    266c:	ff 4f       	sbci	r31, 0xFF	; 255
    266e:	a5 91       	lpm	r26, Z+
    2670:	b4 91       	lpm	r27, Z
    2672:	9f b7       	in	r25, 0x3f	; 63
    2674:	f8 94       	cli
    2676:	11 11       	cpse	r17, r1
    2678:	04 c0       	rjmp	.+8      	; 0x2682 <digitalWrite+0x4e>
    267a:	8c 91       	ld	r24, X
    267c:	d0 95       	com	r29
    267e:	d8 23       	and	r29, r24
    2680:	02 c0       	rjmp	.+4      	; 0x2686 <digitalWrite+0x52>
    2682:	ec 91       	ld	r30, X
    2684:	de 2b       	or	r29, r30
    2686:	dc 93       	st	X, r29
    2688:	9f bf       	out	0x3f, r25	; 63
    268a:	df 91       	pop	r29
    268c:	cf 91       	pop	r28
    268e:	1f 91       	pop	r17
    2690:	08 95       	ret

00002692 <prvIsQueueEmpty>:
    2692:	0f b6       	in	r0, 0x3f	; 63
    2694:	f8 94       	cli
    2696:	0f 92       	push	r0
    2698:	fc 01       	movw	r30, r24
    269a:	92 8d       	ldd	r25, Z+26	; 0x1a
    269c:	0f 90       	pop	r0
    269e:	0f be       	out	0x3f, r0	; 63
    26a0:	81 e0       	ldi	r24, 0x01	; 1
    26a2:	91 11       	cpse	r25, r1
    26a4:	80 e0       	ldi	r24, 0x00	; 0
    26a6:	08 95       	ret

000026a8 <prvCopyDataToQueue>:
    26a8:	0f 93       	push	r16
    26aa:	1f 93       	push	r17
    26ac:	cf 93       	push	r28
    26ae:	df 93       	push	r29
    26b0:	ec 01       	movw	r28, r24
    26b2:	04 2f       	mov	r16, r20
    26b4:	1a 8d       	ldd	r17, Y+26	; 0x1a
    26b6:	4c 8d       	ldd	r20, Y+28	; 0x1c
    26b8:	41 11       	cpse	r20, r1
    26ba:	0b c0       	rjmp	.+22     	; 0x26d2 <prvCopyDataToQueue+0x2a>
    26bc:	88 81       	ld	r24, Y
    26be:	99 81       	ldd	r25, Y+1	; 0x01
    26c0:	89 2b       	or	r24, r25
    26c2:	e9 f5       	brne	.+122    	; 0x273e <prvCopyDataToQueue+0x96>
    26c4:	8c 81       	ldd	r24, Y+4	; 0x04
    26c6:	9d 81       	ldd	r25, Y+5	; 0x05
    26c8:	0e 94 9e 1a 	call	0x353c	; 0x353c <xTaskPriorityDisinherit>
    26cc:	1d 82       	std	Y+5, r1	; 0x05
    26ce:	1c 82       	std	Y+4, r1	; 0x04
    26d0:	37 c0       	rjmp	.+110    	; 0x2740 <prvCopyDataToQueue+0x98>
    26d2:	50 e0       	ldi	r21, 0x00	; 0
    26d4:	01 11       	cpse	r16, r1
    26d6:	15 c0       	rjmp	.+42     	; 0x2702 <prvCopyDataToQueue+0x5a>
    26d8:	8a 81       	ldd	r24, Y+2	; 0x02
    26da:	9b 81       	ldd	r25, Y+3	; 0x03
    26dc:	0e 94 22 21 	call	0x4244	; 0x4244 <memcpy>
    26e0:	2c 8d       	ldd	r18, Y+28	; 0x1c
    26e2:	8a 81       	ldd	r24, Y+2	; 0x02
    26e4:	9b 81       	ldd	r25, Y+3	; 0x03
    26e6:	82 0f       	add	r24, r18
    26e8:	91 1d       	adc	r25, r1
    26ea:	9b 83       	std	Y+3, r25	; 0x03
    26ec:	8a 83       	std	Y+2, r24	; 0x02
    26ee:	2c 81       	ldd	r18, Y+4	; 0x04
    26f0:	3d 81       	ldd	r19, Y+5	; 0x05
    26f2:	82 17       	cp	r24, r18
    26f4:	93 07       	cpc	r25, r19
    26f6:	18 f1       	brcs	.+70     	; 0x273e <prvCopyDataToQueue+0x96>
    26f8:	88 81       	ld	r24, Y
    26fa:	99 81       	ldd	r25, Y+1	; 0x01
    26fc:	9b 83       	std	Y+3, r25	; 0x03
    26fe:	8a 83       	std	Y+2, r24	; 0x02
    2700:	1e c0       	rjmp	.+60     	; 0x273e <prvCopyDataToQueue+0x96>
    2702:	8e 81       	ldd	r24, Y+6	; 0x06
    2704:	9f 81       	ldd	r25, Y+7	; 0x07
    2706:	0e 94 22 21 	call	0x4244	; 0x4244 <memcpy>
    270a:	8c 8d       	ldd	r24, Y+28	; 0x1c
    270c:	90 e0       	ldi	r25, 0x00	; 0
    270e:	91 95       	neg	r25
    2710:	81 95       	neg	r24
    2712:	91 09       	sbc	r25, r1
    2714:	2e 81       	ldd	r18, Y+6	; 0x06
    2716:	3f 81       	ldd	r19, Y+7	; 0x07
    2718:	28 0f       	add	r18, r24
    271a:	39 1f       	adc	r19, r25
    271c:	3f 83       	std	Y+7, r19	; 0x07
    271e:	2e 83       	std	Y+6, r18	; 0x06
    2720:	48 81       	ld	r20, Y
    2722:	59 81       	ldd	r21, Y+1	; 0x01
    2724:	24 17       	cp	r18, r20
    2726:	35 07       	cpc	r19, r21
    2728:	30 f4       	brcc	.+12     	; 0x2736 <prvCopyDataToQueue+0x8e>
    272a:	2c 81       	ldd	r18, Y+4	; 0x04
    272c:	3d 81       	ldd	r19, Y+5	; 0x05
    272e:	82 0f       	add	r24, r18
    2730:	93 1f       	adc	r25, r19
    2732:	9f 83       	std	Y+7, r25	; 0x07
    2734:	8e 83       	std	Y+6, r24	; 0x06
    2736:	02 30       	cpi	r16, 0x02	; 2
    2738:	11 f4       	brne	.+4      	; 0x273e <prvCopyDataToQueue+0x96>
    273a:	11 11       	cpse	r17, r1
    273c:	11 50       	subi	r17, 0x01	; 1
    273e:	80 e0       	ldi	r24, 0x00	; 0
    2740:	1f 5f       	subi	r17, 0xFF	; 255
    2742:	1a 8f       	std	Y+26, r17	; 0x1a
    2744:	df 91       	pop	r29
    2746:	cf 91       	pop	r28
    2748:	1f 91       	pop	r17
    274a:	0f 91       	pop	r16
    274c:	08 95       	ret

0000274e <prvCopyDataFromQueue>:
    274e:	fc 01       	movw	r30, r24
    2750:	cb 01       	movw	r24, r22
    2752:	44 8d       	ldd	r20, Z+28	; 0x1c
    2754:	44 23       	and	r20, r20
    2756:	a1 f0       	breq	.+40     	; 0x2780 <prvCopyDataFromQueue+0x32>
    2758:	50 e0       	ldi	r21, 0x00	; 0
    275a:	26 81       	ldd	r18, Z+6	; 0x06
    275c:	37 81       	ldd	r19, Z+7	; 0x07
    275e:	24 0f       	add	r18, r20
    2760:	35 1f       	adc	r19, r21
    2762:	37 83       	std	Z+7, r19	; 0x07
    2764:	26 83       	std	Z+6, r18	; 0x06
    2766:	64 81       	ldd	r22, Z+4	; 0x04
    2768:	75 81       	ldd	r23, Z+5	; 0x05
    276a:	26 17       	cp	r18, r22
    276c:	37 07       	cpc	r19, r23
    276e:	20 f0       	brcs	.+8      	; 0x2778 <prvCopyDataFromQueue+0x2a>
    2770:	20 81       	ld	r18, Z
    2772:	31 81       	ldd	r19, Z+1	; 0x01
    2774:	37 83       	std	Z+7, r19	; 0x07
    2776:	26 83       	std	Z+6, r18	; 0x06
    2778:	66 81       	ldd	r22, Z+6	; 0x06
    277a:	77 81       	ldd	r23, Z+7	; 0x07
    277c:	0c 94 22 21 	jmp	0x4244	; 0x4244 <memcpy>
    2780:	08 95       	ret

00002782 <prvUnlockQueue>:
    2782:	ef 92       	push	r14
    2784:	ff 92       	push	r15
    2786:	1f 93       	push	r17
    2788:	cf 93       	push	r28
    278a:	df 93       	push	r29
    278c:	ec 01       	movw	r28, r24
    278e:	0f b6       	in	r0, 0x3f	; 63
    2790:	f8 94       	cli
    2792:	0f 92       	push	r0
    2794:	1e 8d       	ldd	r17, Y+30	; 0x1e
    2796:	7c 01       	movw	r14, r24
    2798:	81 e1       	ldi	r24, 0x11	; 17
    279a:	e8 0e       	add	r14, r24
    279c:	f1 1c       	adc	r15, r1
    279e:	11 16       	cp	r1, r17
    27a0:	5c f4       	brge	.+22     	; 0x27b8 <prvUnlockQueue+0x36>
    27a2:	89 89       	ldd	r24, Y+17	; 0x11
    27a4:	88 23       	and	r24, r24
    27a6:	41 f0       	breq	.+16     	; 0x27b8 <prvUnlockQueue+0x36>
    27a8:	c7 01       	movw	r24, r14
    27aa:	0e 94 0e 1a 	call	0x341c	; 0x341c <xTaskRemoveFromEventList>
    27ae:	81 11       	cpse	r24, r1
    27b0:	0e 94 8c 1a 	call	0x3518	; 0x3518 <vTaskMissedYield>
    27b4:	11 50       	subi	r17, 0x01	; 1
    27b6:	f3 cf       	rjmp	.-26     	; 0x279e <prvUnlockQueue+0x1c>
    27b8:	8f ef       	ldi	r24, 0xFF	; 255
    27ba:	8e 8f       	std	Y+30, r24	; 0x1e
    27bc:	0f 90       	pop	r0
    27be:	0f be       	out	0x3f, r0	; 63
    27c0:	0f b6       	in	r0, 0x3f	; 63
    27c2:	f8 94       	cli
    27c4:	0f 92       	push	r0
    27c6:	1d 8d       	ldd	r17, Y+29	; 0x1d
    27c8:	7e 01       	movw	r14, r28
    27ca:	88 e0       	ldi	r24, 0x08	; 8
    27cc:	e8 0e       	add	r14, r24
    27ce:	f1 1c       	adc	r15, r1
    27d0:	11 16       	cp	r1, r17
    27d2:	5c f4       	brge	.+22     	; 0x27ea <prvUnlockQueue+0x68>
    27d4:	88 85       	ldd	r24, Y+8	; 0x08
    27d6:	88 23       	and	r24, r24
    27d8:	41 f0       	breq	.+16     	; 0x27ea <prvUnlockQueue+0x68>
    27da:	c7 01       	movw	r24, r14
    27dc:	0e 94 0e 1a 	call	0x341c	; 0x341c <xTaskRemoveFromEventList>
    27e0:	81 11       	cpse	r24, r1
    27e2:	0e 94 8c 1a 	call	0x3518	; 0x3518 <vTaskMissedYield>
    27e6:	11 50       	subi	r17, 0x01	; 1
    27e8:	f3 cf       	rjmp	.-26     	; 0x27d0 <prvUnlockQueue+0x4e>
    27ea:	8f ef       	ldi	r24, 0xFF	; 255
    27ec:	8d 8f       	std	Y+29, r24	; 0x1d
    27ee:	0f 90       	pop	r0
    27f0:	0f be       	out	0x3f, r0	; 63
    27f2:	df 91       	pop	r29
    27f4:	cf 91       	pop	r28
    27f6:	1f 91       	pop	r17
    27f8:	ff 90       	pop	r15
    27fa:	ef 90       	pop	r14
    27fc:	08 95       	ret

000027fe <xQueueGenericReset>:
    27fe:	cf 93       	push	r28
    2800:	df 93       	push	r29
    2802:	ec 01       	movw	r28, r24
    2804:	0f b6       	in	r0, 0x3f	; 63
    2806:	f8 94       	cli
    2808:	0f 92       	push	r0
    280a:	48 81       	ld	r20, Y
    280c:	59 81       	ldd	r21, Y+1	; 0x01
    280e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2810:	7c 8d       	ldd	r23, Y+28	; 0x1c
    2812:	9a 01       	movw	r18, r20
    2814:	87 9f       	mul	r24, r23
    2816:	20 0d       	add	r18, r0
    2818:	31 1d       	adc	r19, r1
    281a:	11 24       	eor	r1, r1
    281c:	3d 83       	std	Y+5, r19	; 0x05
    281e:	2c 83       	std	Y+4, r18	; 0x04
    2820:	1a 8e       	std	Y+26, r1	; 0x1a
    2822:	5b 83       	std	Y+3, r21	; 0x03
    2824:	4a 83       	std	Y+2, r20	; 0x02
    2826:	90 e0       	ldi	r25, 0x00	; 0
    2828:	01 97       	sbiw	r24, 0x01	; 1
    282a:	78 9f       	mul	r23, r24
    282c:	90 01       	movw	r18, r0
    282e:	79 9f       	mul	r23, r25
    2830:	30 0d       	add	r19, r0
    2832:	11 24       	eor	r1, r1
    2834:	ca 01       	movw	r24, r20
    2836:	82 0f       	add	r24, r18
    2838:	93 1f       	adc	r25, r19
    283a:	9f 83       	std	Y+7, r25	; 0x07
    283c:	8e 83       	std	Y+6, r24	; 0x06
    283e:	8f ef       	ldi	r24, 0xFF	; 255
    2840:	8d 8f       	std	Y+29, r24	; 0x1d
    2842:	8e 8f       	std	Y+30, r24	; 0x1e
    2844:	61 11       	cpse	r22, r1
    2846:	0c c0       	rjmp	.+24     	; 0x2860 <xQueueGenericReset+0x62>
    2848:	88 85       	ldd	r24, Y+8	; 0x08
    284a:	88 23       	and	r24, r24
    284c:	89 f0       	breq	.+34     	; 0x2870 <xQueueGenericReset+0x72>
    284e:	ce 01       	movw	r24, r28
    2850:	08 96       	adiw	r24, 0x08	; 8
    2852:	0e 94 0e 1a 	call	0x341c	; 0x341c <xTaskRemoveFromEventList>
    2856:	88 23       	and	r24, r24
    2858:	59 f0       	breq	.+22     	; 0x2870 <xQueueGenericReset+0x72>
    285a:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    285e:	08 c0       	rjmp	.+16     	; 0x2870 <xQueueGenericReset+0x72>
    2860:	ce 01       	movw	r24, r28
    2862:	08 96       	adiw	r24, 0x08	; 8
    2864:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2868:	ce 01       	movw	r24, r28
    286a:	41 96       	adiw	r24, 0x11	; 17
    286c:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2870:	0f 90       	pop	r0
    2872:	0f be       	out	0x3f, r0	; 63
    2874:	81 e0       	ldi	r24, 0x01	; 1
    2876:	df 91       	pop	r29
    2878:	cf 91       	pop	r28
    287a:	08 95       	ret

0000287c <xQueueGenericCreate>:
    287c:	0f 93       	push	r16
    287e:	1f 93       	push	r17
    2880:	cf 93       	push	r28
    2882:	df 93       	push	r29
    2884:	08 2f       	mov	r16, r24
    2886:	16 2f       	mov	r17, r22
    2888:	66 23       	and	r22, r22
    288a:	21 f0       	breq	.+8      	; 0x2894 <xQueueGenericCreate+0x18>
    288c:	86 9f       	mul	r24, r22
    288e:	c0 01       	movw	r24, r0
    2890:	11 24       	eor	r1, r1
    2892:	02 c0       	rjmp	.+4      	; 0x2898 <xQueueGenericCreate+0x1c>
    2894:	80 e0       	ldi	r24, 0x00	; 0
    2896:	90 e0       	ldi	r25, 0x00	; 0
    2898:	4f 96       	adiw	r24, 0x1f	; 31
    289a:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <pvPortMalloc>
    289e:	ec 01       	movw	r28, r24
    28a0:	00 97       	sbiw	r24, 0x00	; 0
    28a2:	71 f0       	breq	.+28     	; 0x28c0 <xQueueGenericCreate+0x44>
    28a4:	11 11       	cpse	r17, r1
    28a6:	03 c0       	rjmp	.+6      	; 0x28ae <xQueueGenericCreate+0x32>
    28a8:	99 83       	std	Y+1, r25	; 0x01
    28aa:	88 83       	st	Y, r24
    28ac:	03 c0       	rjmp	.+6      	; 0x28b4 <xQueueGenericCreate+0x38>
    28ae:	4f 96       	adiw	r24, 0x1f	; 31
    28b0:	99 83       	std	Y+1, r25	; 0x01
    28b2:	88 83       	st	Y, r24
    28b4:	0b 8f       	std	Y+27, r16	; 0x1b
    28b6:	1c 8f       	std	Y+28, r17	; 0x1c
    28b8:	61 e0       	ldi	r22, 0x01	; 1
    28ba:	ce 01       	movw	r24, r28
    28bc:	0e 94 ff 13 	call	0x27fe	; 0x27fe <xQueueGenericReset>
    28c0:	ce 01       	movw	r24, r28
    28c2:	df 91       	pop	r29
    28c4:	cf 91       	pop	r28
    28c6:	1f 91       	pop	r17
    28c8:	0f 91       	pop	r16
    28ca:	08 95       	ret

000028cc <xQueueGenericSend>:
    28cc:	af 92       	push	r10
    28ce:	bf 92       	push	r11
    28d0:	cf 92       	push	r12
    28d2:	df 92       	push	r13
    28d4:	ff 92       	push	r15
    28d6:	0f 93       	push	r16
    28d8:	1f 93       	push	r17
    28da:	cf 93       	push	r28
    28dc:	df 93       	push	r29
    28de:	00 d0       	rcall	.+0      	; 0x28e0 <xQueueGenericSend+0x14>
    28e0:	00 d0       	rcall	.+0      	; 0x28e2 <xQueueGenericSend+0x16>
    28e2:	1f 92       	push	r1
    28e4:	cd b7       	in	r28, 0x3d	; 61
    28e6:	de b7       	in	r29, 0x3e	; 62
    28e8:	8c 01       	movw	r16, r24
    28ea:	6b 01       	movw	r12, r22
    28ec:	5d 83       	std	Y+5, r21	; 0x05
    28ee:	4c 83       	std	Y+4, r20	; 0x04
    28f0:	f2 2e       	mov	r15, r18
    28f2:	80 e0       	ldi	r24, 0x00	; 0
    28f4:	58 01       	movw	r10, r16
    28f6:	98 e0       	ldi	r25, 0x08	; 8
    28f8:	a9 0e       	add	r10, r25
    28fa:	b1 1c       	adc	r11, r1
    28fc:	0f b6       	in	r0, 0x3f	; 63
    28fe:	f8 94       	cli
    2900:	0f 92       	push	r0
    2902:	f8 01       	movw	r30, r16
    2904:	22 8d       	ldd	r18, Z+26	; 0x1a
    2906:	93 8d       	ldd	r25, Z+27	; 0x1b
    2908:	29 17       	cp	r18, r25
    290a:	18 f0       	brcs	.+6      	; 0x2912 <xQueueGenericSend+0x46>
    290c:	f2 e0       	ldi	r31, 0x02	; 2
    290e:	ff 12       	cpse	r15, r31
    2910:	14 c0       	rjmp	.+40     	; 0x293a <xQueueGenericSend+0x6e>
    2912:	4f 2d       	mov	r20, r15
    2914:	b6 01       	movw	r22, r12
    2916:	c8 01       	movw	r24, r16
    2918:	0e 94 54 13 	call	0x26a8	; 0x26a8 <prvCopyDataToQueue>
    291c:	f8 01       	movw	r30, r16
    291e:	91 89       	ldd	r25, Z+17	; 0x11
    2920:	99 23       	and	r25, r25
    2922:	21 f0       	breq	.+8      	; 0x292c <xQueueGenericSend+0x60>
    2924:	c8 01       	movw	r24, r16
    2926:	41 96       	adiw	r24, 0x11	; 17
    2928:	0e 94 0e 1a 	call	0x341c	; 0x341c <xTaskRemoveFromEventList>
    292c:	81 11       	cpse	r24, r1
    292e:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    2932:	0f 90       	pop	r0
    2934:	0f be       	out	0x3f, r0	; 63
    2936:	81 e0       	ldi	r24, 0x01	; 1
    2938:	50 c0       	rjmp	.+160    	; 0x29da <xQueueGenericSend+0x10e>
    293a:	2c 81       	ldd	r18, Y+4	; 0x04
    293c:	3d 81       	ldd	r19, Y+5	; 0x05
    293e:	23 2b       	or	r18, r19
    2940:	19 f4       	brne	.+6      	; 0x2948 <xQueueGenericSend+0x7c>
    2942:	0f 90       	pop	r0
    2944:	0f be       	out	0x3f, r0	; 63
    2946:	48 c0       	rjmp	.+144    	; 0x29d8 <xQueueGenericSend+0x10c>
    2948:	81 11       	cpse	r24, r1
    294a:	04 c0       	rjmp	.+8      	; 0x2954 <xQueueGenericSend+0x88>
    294c:	ce 01       	movw	r24, r28
    294e:	01 96       	adiw	r24, 0x01	; 1
    2950:	0e 94 4e 1a 	call	0x349c	; 0x349c <vTaskInternalSetTimeOutState>
    2954:	0f 90       	pop	r0
    2956:	0f be       	out	0x3f, r0	; 63
    2958:	0e 94 24 18 	call	0x3048	; 0x3048 <vTaskSuspendAll>
    295c:	0f b6       	in	r0, 0x3f	; 63
    295e:	f8 94       	cli
    2960:	0f 92       	push	r0
    2962:	f8 01       	movw	r30, r16
    2964:	85 8d       	ldd	r24, Z+29	; 0x1d
    2966:	8f 3f       	cpi	r24, 0xFF	; 255
    2968:	09 f4       	brne	.+2      	; 0x296c <xQueueGenericSend+0xa0>
    296a:	15 8e       	std	Z+29, r1	; 0x1d
    296c:	f8 01       	movw	r30, r16
    296e:	86 8d       	ldd	r24, Z+30	; 0x1e
    2970:	8f 3f       	cpi	r24, 0xFF	; 255
    2972:	09 f4       	brne	.+2      	; 0x2976 <xQueueGenericSend+0xaa>
    2974:	16 8e       	std	Z+30, r1	; 0x1e
    2976:	0f 90       	pop	r0
    2978:	0f be       	out	0x3f, r0	; 63
    297a:	be 01       	movw	r22, r28
    297c:	6c 5f       	subi	r22, 0xFC	; 252
    297e:	7f 4f       	sbci	r23, 0xFF	; 255
    2980:	ce 01       	movw	r24, r28
    2982:	01 96       	adiw	r24, 0x01	; 1
    2984:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <xTaskCheckForTimeOut>
    2988:	81 11       	cpse	r24, r1
    298a:	21 c0       	rjmp	.+66     	; 0x29ce <xQueueGenericSend+0x102>
    298c:	0f b6       	in	r0, 0x3f	; 63
    298e:	f8 94       	cli
    2990:	0f 92       	push	r0
    2992:	f8 01       	movw	r30, r16
    2994:	92 8d       	ldd	r25, Z+26	; 0x1a
    2996:	83 8d       	ldd	r24, Z+27	; 0x1b
    2998:	0f 90       	pop	r0
    299a:	0f be       	out	0x3f, r0	; 63
    299c:	98 13       	cpse	r25, r24
    299e:	11 c0       	rjmp	.+34     	; 0x29c2 <xQueueGenericSend+0xf6>
    29a0:	6c 81       	ldd	r22, Y+4	; 0x04
    29a2:	7d 81       	ldd	r23, Y+5	; 0x05
    29a4:	c5 01       	movw	r24, r10
    29a6:	0e 94 e5 19 	call	0x33ca	; 0x33ca <vTaskPlaceOnEventList>
    29aa:	c8 01       	movw	r24, r16
    29ac:	0e 94 c1 13 	call	0x2782	; 0x2782 <prvUnlockQueue>
    29b0:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    29b4:	88 23       	and	r24, r24
    29b6:	11 f0       	breq	.+4      	; 0x29bc <xQueueGenericSend+0xf0>
    29b8:	81 e0       	ldi	r24, 0x01	; 1
    29ba:	a0 cf       	rjmp	.-192    	; 0x28fc <xQueueGenericSend+0x30>
    29bc:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    29c0:	fb cf       	rjmp	.-10     	; 0x29b8 <xQueueGenericSend+0xec>
    29c2:	c8 01       	movw	r24, r16
    29c4:	0e 94 c1 13 	call	0x2782	; 0x2782 <prvUnlockQueue>
    29c8:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    29cc:	f5 cf       	rjmp	.-22     	; 0x29b8 <xQueueGenericSend+0xec>
    29ce:	c8 01       	movw	r24, r16
    29d0:	0e 94 c1 13 	call	0x2782	; 0x2782 <prvUnlockQueue>
    29d4:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    29d8:	80 e0       	ldi	r24, 0x00	; 0
    29da:	0f 90       	pop	r0
    29dc:	0f 90       	pop	r0
    29de:	0f 90       	pop	r0
    29e0:	0f 90       	pop	r0
    29e2:	0f 90       	pop	r0
    29e4:	df 91       	pop	r29
    29e6:	cf 91       	pop	r28
    29e8:	1f 91       	pop	r17
    29ea:	0f 91       	pop	r16
    29ec:	ff 90       	pop	r15
    29ee:	df 90       	pop	r13
    29f0:	cf 90       	pop	r12
    29f2:	bf 90       	pop	r11
    29f4:	af 90       	pop	r10
    29f6:	08 95       	ret

000029f8 <xQueueGenericSendFromISR>:
    29f8:	ef 92       	push	r14
    29fa:	ff 92       	push	r15
    29fc:	1f 93       	push	r17
    29fe:	cf 93       	push	r28
    2a00:	df 93       	push	r29
    2a02:	ec 01       	movw	r28, r24
    2a04:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2a06:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2a08:	98 17       	cp	r25, r24
    2a0a:	10 f0       	brcs	.+4      	; 0x2a10 <xQueueGenericSendFromISR+0x18>
    2a0c:	22 30       	cpi	r18, 0x02	; 2
    2a0e:	e1 f4       	brne	.+56     	; 0x2a48 <xQueueGenericSendFromISR+0x50>
    2a10:	7a 01       	movw	r14, r20
    2a12:	1e 8d       	ldd	r17, Y+30	; 0x1e
    2a14:	42 2f       	mov	r20, r18
    2a16:	ce 01       	movw	r24, r28
    2a18:	0e 94 54 13 	call	0x26a8	; 0x26a8 <prvCopyDataToQueue>
    2a1c:	1f 3f       	cpi	r17, 0xFF	; 255
    2a1e:	81 f4       	brne	.+32     	; 0x2a40 <xQueueGenericSendFromISR+0x48>
    2a20:	89 89       	ldd	r24, Y+17	; 0x11
    2a22:	88 23       	and	r24, r24
    2a24:	79 f0       	breq	.+30     	; 0x2a44 <xQueueGenericSendFromISR+0x4c>
    2a26:	ce 01       	movw	r24, r28
    2a28:	41 96       	adiw	r24, 0x11	; 17
    2a2a:	0e 94 0e 1a 	call	0x341c	; 0x341c <xTaskRemoveFromEventList>
    2a2e:	88 23       	and	r24, r24
    2a30:	49 f0       	breq	.+18     	; 0x2a44 <xQueueGenericSendFromISR+0x4c>
    2a32:	e1 14       	cp	r14, r1
    2a34:	f1 04       	cpc	r15, r1
    2a36:	31 f0       	breq	.+12     	; 0x2a44 <xQueueGenericSendFromISR+0x4c>
    2a38:	81 e0       	ldi	r24, 0x01	; 1
    2a3a:	f7 01       	movw	r30, r14
    2a3c:	80 83       	st	Z, r24
    2a3e:	05 c0       	rjmp	.+10     	; 0x2a4a <xQueueGenericSendFromISR+0x52>
    2a40:	1f 5f       	subi	r17, 0xFF	; 255
    2a42:	1e 8f       	std	Y+30, r17	; 0x1e
    2a44:	81 e0       	ldi	r24, 0x01	; 1
    2a46:	01 c0       	rjmp	.+2      	; 0x2a4a <xQueueGenericSendFromISR+0x52>
    2a48:	80 e0       	ldi	r24, 0x00	; 0
    2a4a:	df 91       	pop	r29
    2a4c:	cf 91       	pop	r28
    2a4e:	1f 91       	pop	r17
    2a50:	ff 90       	pop	r15
    2a52:	ef 90       	pop	r14
    2a54:	08 95       	ret

00002a56 <xQueueGiveFromISR>:
    2a56:	cf 93       	push	r28
    2a58:	df 93       	push	r29
    2a5a:	fc 01       	movw	r30, r24
    2a5c:	92 8d       	ldd	r25, Z+26	; 0x1a
    2a5e:	83 8d       	ldd	r24, Z+27	; 0x1b
    2a60:	98 17       	cp	r25, r24
    2a62:	c0 f4       	brcc	.+48     	; 0x2a94 <xQueueGiveFromISR+0x3e>
    2a64:	86 8d       	ldd	r24, Z+30	; 0x1e
    2a66:	9f 5f       	subi	r25, 0xFF	; 255
    2a68:	92 8f       	std	Z+26, r25	; 0x1a
    2a6a:	8f 3f       	cpi	r24, 0xFF	; 255
    2a6c:	79 f4       	brne	.+30     	; 0x2a8c <xQueueGiveFromISR+0x36>
    2a6e:	81 89       	ldd	r24, Z+17	; 0x11
    2a70:	88 23       	and	r24, r24
    2a72:	71 f0       	breq	.+28     	; 0x2a90 <xQueueGiveFromISR+0x3a>
    2a74:	eb 01       	movw	r28, r22
    2a76:	cf 01       	movw	r24, r30
    2a78:	41 96       	adiw	r24, 0x11	; 17
    2a7a:	0e 94 0e 1a 	call	0x341c	; 0x341c <xTaskRemoveFromEventList>
    2a7e:	88 23       	and	r24, r24
    2a80:	39 f0       	breq	.+14     	; 0x2a90 <xQueueGiveFromISR+0x3a>
    2a82:	20 97       	sbiw	r28, 0x00	; 0
    2a84:	29 f0       	breq	.+10     	; 0x2a90 <xQueueGiveFromISR+0x3a>
    2a86:	81 e0       	ldi	r24, 0x01	; 1
    2a88:	88 83       	st	Y, r24
    2a8a:	05 c0       	rjmp	.+10     	; 0x2a96 <xQueueGiveFromISR+0x40>
    2a8c:	8f 5f       	subi	r24, 0xFF	; 255
    2a8e:	86 8f       	std	Z+30, r24	; 0x1e
    2a90:	81 e0       	ldi	r24, 0x01	; 1
    2a92:	01 c0       	rjmp	.+2      	; 0x2a96 <xQueueGiveFromISR+0x40>
    2a94:	80 e0       	ldi	r24, 0x00	; 0
    2a96:	df 91       	pop	r29
    2a98:	cf 91       	pop	r28
    2a9a:	08 95       	ret

00002a9c <xQueueReceive>:
    2a9c:	af 92       	push	r10
    2a9e:	bf 92       	push	r11
    2aa0:	cf 92       	push	r12
    2aa2:	df 92       	push	r13
    2aa4:	ff 92       	push	r15
    2aa6:	0f 93       	push	r16
    2aa8:	1f 93       	push	r17
    2aaa:	cf 93       	push	r28
    2aac:	df 93       	push	r29
    2aae:	00 d0       	rcall	.+0      	; 0x2ab0 <xQueueReceive+0x14>
    2ab0:	00 d0       	rcall	.+0      	; 0x2ab2 <xQueueReceive+0x16>
    2ab2:	1f 92       	push	r1
    2ab4:	cd b7       	in	r28, 0x3d	; 61
    2ab6:	de b7       	in	r29, 0x3e	; 62
    2ab8:	8c 01       	movw	r16, r24
    2aba:	6b 01       	movw	r12, r22
    2abc:	5d 83       	std	Y+5, r21	; 0x05
    2abe:	4c 83       	std	Y+4, r20	; 0x04
    2ac0:	80 e0       	ldi	r24, 0x00	; 0
    2ac2:	58 01       	movw	r10, r16
    2ac4:	91 e1       	ldi	r25, 0x11	; 17
    2ac6:	a9 0e       	add	r10, r25
    2ac8:	b1 1c       	adc	r11, r1
    2aca:	0f b6       	in	r0, 0x3f	; 63
    2acc:	f8 94       	cli
    2ace:	0f 92       	push	r0
    2ad0:	f8 01       	movw	r30, r16
    2ad2:	f2 8c       	ldd	r15, Z+26	; 0x1a
    2ad4:	ff 20       	and	r15, r15
    2ad6:	a9 f0       	breq	.+42     	; 0x2b02 <xQueueReceive+0x66>
    2ad8:	b6 01       	movw	r22, r12
    2ada:	c8 01       	movw	r24, r16
    2adc:	0e 94 a7 13 	call	0x274e	; 0x274e <prvCopyDataFromQueue>
    2ae0:	fa 94       	dec	r15
    2ae2:	f8 01       	movw	r30, r16
    2ae4:	f2 8e       	std	Z+26, r15	; 0x1a
    2ae6:	80 85       	ldd	r24, Z+8	; 0x08
    2ae8:	88 23       	and	r24, r24
    2aea:	39 f0       	breq	.+14     	; 0x2afa <xQueueReceive+0x5e>
    2aec:	c8 01       	movw	r24, r16
    2aee:	08 96       	adiw	r24, 0x08	; 8
    2af0:	0e 94 0e 1a 	call	0x341c	; 0x341c <xTaskRemoveFromEventList>
    2af4:	81 11       	cpse	r24, r1
    2af6:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    2afa:	0f 90       	pop	r0
    2afc:	0f be       	out	0x3f, r0	; 63
    2afe:	81 e0       	ldi	r24, 0x01	; 1
    2b00:	50 c0       	rjmp	.+160    	; 0x2ba2 <xQueueReceive+0x106>
    2b02:	2c 81       	ldd	r18, Y+4	; 0x04
    2b04:	3d 81       	ldd	r19, Y+5	; 0x05
    2b06:	23 2b       	or	r18, r19
    2b08:	19 f4       	brne	.+6      	; 0x2b10 <xQueueReceive+0x74>
    2b0a:	0f 90       	pop	r0
    2b0c:	0f be       	out	0x3f, r0	; 63
    2b0e:	48 c0       	rjmp	.+144    	; 0x2ba0 <xQueueReceive+0x104>
    2b10:	81 11       	cpse	r24, r1
    2b12:	04 c0       	rjmp	.+8      	; 0x2b1c <xQueueReceive+0x80>
    2b14:	ce 01       	movw	r24, r28
    2b16:	01 96       	adiw	r24, 0x01	; 1
    2b18:	0e 94 4e 1a 	call	0x349c	; 0x349c <vTaskInternalSetTimeOutState>
    2b1c:	0f 90       	pop	r0
    2b1e:	0f be       	out	0x3f, r0	; 63
    2b20:	0e 94 24 18 	call	0x3048	; 0x3048 <vTaskSuspendAll>
    2b24:	0f b6       	in	r0, 0x3f	; 63
    2b26:	f8 94       	cli
    2b28:	0f 92       	push	r0
    2b2a:	f8 01       	movw	r30, r16
    2b2c:	85 8d       	ldd	r24, Z+29	; 0x1d
    2b2e:	8f 3f       	cpi	r24, 0xFF	; 255
    2b30:	09 f4       	brne	.+2      	; 0x2b34 <xQueueReceive+0x98>
    2b32:	15 8e       	std	Z+29, r1	; 0x1d
    2b34:	f8 01       	movw	r30, r16
    2b36:	86 8d       	ldd	r24, Z+30	; 0x1e
    2b38:	8f 3f       	cpi	r24, 0xFF	; 255
    2b3a:	09 f4       	brne	.+2      	; 0x2b3e <xQueueReceive+0xa2>
    2b3c:	16 8e       	std	Z+30, r1	; 0x1e
    2b3e:	0f 90       	pop	r0
    2b40:	0f be       	out	0x3f, r0	; 63
    2b42:	be 01       	movw	r22, r28
    2b44:	6c 5f       	subi	r22, 0xFC	; 252
    2b46:	7f 4f       	sbci	r23, 0xFF	; 255
    2b48:	ce 01       	movw	r24, r28
    2b4a:	01 96       	adiw	r24, 0x01	; 1
    2b4c:	0e 94 59 1a 	call	0x34b2	; 0x34b2 <xTaskCheckForTimeOut>
    2b50:	81 11       	cpse	r24, r1
    2b52:	1c c0       	rjmp	.+56     	; 0x2b8c <xQueueReceive+0xf0>
    2b54:	c8 01       	movw	r24, r16
    2b56:	0e 94 49 13 	call	0x2692	; 0x2692 <prvIsQueueEmpty>
    2b5a:	88 23       	and	r24, r24
    2b5c:	89 f0       	breq	.+34     	; 0x2b80 <xQueueReceive+0xe4>
    2b5e:	6c 81       	ldd	r22, Y+4	; 0x04
    2b60:	7d 81       	ldd	r23, Y+5	; 0x05
    2b62:	c5 01       	movw	r24, r10
    2b64:	0e 94 e5 19 	call	0x33ca	; 0x33ca <vTaskPlaceOnEventList>
    2b68:	c8 01       	movw	r24, r16
    2b6a:	0e 94 c1 13 	call	0x2782	; 0x2782 <prvUnlockQueue>
    2b6e:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    2b72:	88 23       	and	r24, r24
    2b74:	11 f0       	breq	.+4      	; 0x2b7a <xQueueReceive+0xde>
    2b76:	81 e0       	ldi	r24, 0x01	; 1
    2b78:	a8 cf       	rjmp	.-176    	; 0x2aca <xQueueReceive+0x2e>
    2b7a:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    2b7e:	fb cf       	rjmp	.-10     	; 0x2b76 <xQueueReceive+0xda>
    2b80:	c8 01       	movw	r24, r16
    2b82:	0e 94 c1 13 	call	0x2782	; 0x2782 <prvUnlockQueue>
    2b86:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    2b8a:	f5 cf       	rjmp	.-22     	; 0x2b76 <xQueueReceive+0xda>
    2b8c:	c8 01       	movw	r24, r16
    2b8e:	0e 94 c1 13 	call	0x2782	; 0x2782 <prvUnlockQueue>
    2b92:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    2b96:	c8 01       	movw	r24, r16
    2b98:	0e 94 49 13 	call	0x2692	; 0x2692 <prvIsQueueEmpty>
    2b9c:	88 23       	and	r24, r24
    2b9e:	59 f3       	breq	.-42     	; 0x2b76 <xQueueReceive+0xda>
    2ba0:	80 e0       	ldi	r24, 0x00	; 0
    2ba2:	0f 90       	pop	r0
    2ba4:	0f 90       	pop	r0
    2ba6:	0f 90       	pop	r0
    2ba8:	0f 90       	pop	r0
    2baa:	0f 90       	pop	r0
    2bac:	df 91       	pop	r29
    2bae:	cf 91       	pop	r28
    2bb0:	1f 91       	pop	r17
    2bb2:	0f 91       	pop	r16
    2bb4:	ff 90       	pop	r15
    2bb6:	df 90       	pop	r13
    2bb8:	cf 90       	pop	r12
    2bba:	bf 90       	pop	r11
    2bbc:	af 90       	pop	r10
    2bbe:	08 95       	ret

00002bc0 <vQueueWaitForMessageRestricted>:
    2bc0:	cf 93       	push	r28
    2bc2:	df 93       	push	r29
    2bc4:	ec 01       	movw	r28, r24
    2bc6:	0f b6       	in	r0, 0x3f	; 63
    2bc8:	f8 94       	cli
    2bca:	0f 92       	push	r0
    2bcc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2bce:	8f 3f       	cpi	r24, 0xFF	; 255
    2bd0:	09 f4       	brne	.+2      	; 0x2bd4 <vQueueWaitForMessageRestricted+0x14>
    2bd2:	1d 8e       	std	Y+29, r1	; 0x1d
    2bd4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2bd6:	8f 3f       	cpi	r24, 0xFF	; 255
    2bd8:	09 f4       	brne	.+2      	; 0x2bdc <vQueueWaitForMessageRestricted+0x1c>
    2bda:	1e 8e       	std	Y+30, r1	; 0x1e
    2bdc:	0f 90       	pop	r0
    2bde:	0f be       	out	0x3f, r0	; 63
    2be0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2be2:	81 11       	cpse	r24, r1
    2be4:	04 c0       	rjmp	.+8      	; 0x2bee <vQueueWaitForMessageRestricted+0x2e>
    2be6:	ce 01       	movw	r24, r28
    2be8:	41 96       	adiw	r24, 0x11	; 17
    2bea:	0e 94 f6 19 	call	0x33ec	; 0x33ec <vTaskPlaceOnEventListRestricted>
    2bee:	ce 01       	movw	r24, r28
    2bf0:	df 91       	pop	r29
    2bf2:	cf 91       	pop	r28
    2bf4:	0c 94 c1 13 	jmp	0x2782	; 0x2782 <prvUnlockQueue>

00002bf8 <prvResetNextTaskUnblockTime>:
    2bf8:	e0 91 43 05 	lds	r30, 0x0543	; 0x800543 <pxDelayedTaskList>
    2bfc:	f0 91 44 05 	lds	r31, 0x0544	; 0x800544 <pxDelayedTaskList+0x1>
    2c00:	80 81       	ld	r24, Z
    2c02:	81 11       	cpse	r24, r1
    2c04:	03 c0       	rjmp	.+6      	; 0x2c0c <prvResetNextTaskUnblockTime+0x14>
    2c06:	8f ef       	ldi	r24, 0xFF	; 255
    2c08:	9f ef       	ldi	r25, 0xFF	; 255
    2c0a:	0c c0       	rjmp	.+24     	; 0x2c24 <prvResetNextTaskUnblockTime+0x2c>
    2c0c:	e0 91 43 05 	lds	r30, 0x0543	; 0x800543 <pxDelayedTaskList>
    2c10:	f0 91 44 05 	lds	r31, 0x0544	; 0x800544 <pxDelayedTaskList+0x1>
    2c14:	05 80       	ldd	r0, Z+5	; 0x05
    2c16:	f6 81       	ldd	r31, Z+6	; 0x06
    2c18:	e0 2d       	mov	r30, r0
    2c1a:	06 80       	ldd	r0, Z+6	; 0x06
    2c1c:	f7 81       	ldd	r31, Z+7	; 0x07
    2c1e:	e0 2d       	mov	r30, r0
    2c20:	82 81       	ldd	r24, Z+2	; 0x02
    2c22:	93 81       	ldd	r25, Z+3	; 0x03
    2c24:	90 93 1b 05 	sts	0x051B, r25	; 0x80051b <xNextTaskUnblockTime+0x1>
    2c28:	80 93 1a 05 	sts	0x051A, r24	; 0x80051a <xNextTaskUnblockTime>
    2c2c:	08 95       	ret

00002c2e <prvAddCurrentTaskToDelayedList>:
    2c2e:	ff 92       	push	r15
    2c30:	0f 93       	push	r16
    2c32:	1f 93       	push	r17
    2c34:	cf 93       	push	r28
    2c36:	df 93       	push	r29
    2c38:	ec 01       	movw	r28, r24
    2c3a:	f6 2e       	mov	r15, r22
    2c3c:	00 91 22 05 	lds	r16, 0x0522	; 0x800522 <xTickCount>
    2c40:	10 91 23 05 	lds	r17, 0x0523	; 0x800523 <xTickCount+0x1>
    2c44:	80 91 7b 05 	lds	r24, 0x057B	; 0x80057b <pxCurrentTCB>
    2c48:	90 91 7c 05 	lds	r25, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2c4c:	02 96       	adiw	r24, 0x02	; 2
    2c4e:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    2c52:	cf 3f       	cpi	r28, 0xFF	; 255
    2c54:	8f ef       	ldi	r24, 0xFF	; 255
    2c56:	d8 07       	cpc	r29, r24
    2c58:	89 f4       	brne	.+34     	; 0x2c7c <prvAddCurrentTaskToDelayedList+0x4e>
    2c5a:	ff 20       	and	r15, r15
    2c5c:	79 f0       	breq	.+30     	; 0x2c7c <prvAddCurrentTaskToDelayedList+0x4e>
    2c5e:	60 91 7b 05 	lds	r22, 0x057B	; 0x80057b <pxCurrentTCB>
    2c62:	70 91 7c 05 	lds	r23, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2c66:	6e 5f       	subi	r22, 0xFE	; 254
    2c68:	7f 4f       	sbci	r23, 0xFF	; 255
    2c6a:	85 e2       	ldi	r24, 0x25	; 37
    2c6c:	95 e0       	ldi	r25, 0x05	; 5
    2c6e:	df 91       	pop	r29
    2c70:	cf 91       	pop	r28
    2c72:	1f 91       	pop	r17
    2c74:	0f 91       	pop	r16
    2c76:	ff 90       	pop	r15
    2c78:	0c 94 b3 1d 	jmp	0x3b66	; 0x3b66 <vListInsertEnd>
    2c7c:	c0 0f       	add	r28, r16
    2c7e:	d1 1f       	adc	r29, r17
    2c80:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    2c84:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2c88:	d3 83       	std	Z+3, r29	; 0x03
    2c8a:	c2 83       	std	Z+2, r28	; 0x02
    2c8c:	60 91 7b 05 	lds	r22, 0x057B	; 0x80057b <pxCurrentTCB>
    2c90:	70 91 7c 05 	lds	r23, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2c94:	c0 17       	cp	r28, r16
    2c96:	d1 07       	cpc	r29, r17
    2c98:	68 f4       	brcc	.+26     	; 0x2cb4 <prvAddCurrentTaskToDelayedList+0x86>
    2c9a:	80 91 41 05 	lds	r24, 0x0541	; 0x800541 <pxOverflowDelayedTaskList>
    2c9e:	90 91 42 05 	lds	r25, 0x0542	; 0x800542 <pxOverflowDelayedTaskList+0x1>
    2ca2:	6e 5f       	subi	r22, 0xFE	; 254
    2ca4:	7f 4f       	sbci	r23, 0xFF	; 255
    2ca6:	df 91       	pop	r29
    2ca8:	cf 91       	pop	r28
    2caa:	1f 91       	pop	r17
    2cac:	0f 91       	pop	r16
    2cae:	ff 90       	pop	r15
    2cb0:	0c 94 d4 1d 	jmp	0x3ba8	; 0x3ba8 <vListInsert>
    2cb4:	80 91 43 05 	lds	r24, 0x0543	; 0x800543 <pxDelayedTaskList>
    2cb8:	90 91 44 05 	lds	r25, 0x0544	; 0x800544 <pxDelayedTaskList+0x1>
    2cbc:	6e 5f       	subi	r22, 0xFE	; 254
    2cbe:	7f 4f       	sbci	r23, 0xFF	; 255
    2cc0:	0e 94 d4 1d 	call	0x3ba8	; 0x3ba8 <vListInsert>
    2cc4:	80 91 1a 05 	lds	r24, 0x051A	; 0x80051a <xNextTaskUnblockTime>
    2cc8:	90 91 1b 05 	lds	r25, 0x051B	; 0x80051b <xNextTaskUnblockTime+0x1>
    2ccc:	c8 17       	cp	r28, r24
    2cce:	d9 07       	cpc	r29, r25
    2cd0:	20 f4       	brcc	.+8      	; 0x2cda <prvAddCurrentTaskToDelayedList+0xac>
    2cd2:	d0 93 1b 05 	sts	0x051B, r29	; 0x80051b <xNextTaskUnblockTime+0x1>
    2cd6:	c0 93 1a 05 	sts	0x051A, r28	; 0x80051a <xNextTaskUnblockTime>
    2cda:	df 91       	pop	r29
    2cdc:	cf 91       	pop	r28
    2cde:	1f 91       	pop	r17
    2ce0:	0f 91       	pop	r16
    2ce2:	ff 90       	pop	r15
    2ce4:	08 95       	ret

00002ce6 <prvIdleTask>:
    2ce6:	80 91 2e 05 	lds	r24, 0x052E	; 0x80052e <uxDeletedTasksWaitingCleanUp>
    2cea:	88 23       	and	r24, r24
    2cec:	09 f1       	breq	.+66     	; 0x2d30 <prvIdleTask+0x4a>
    2cee:	0f b6       	in	r0, 0x3f	; 63
    2cf0:	f8 94       	cli
    2cf2:	0f 92       	push	r0
    2cf4:	e0 91 34 05 	lds	r30, 0x0534	; 0x800534 <xTasksWaitingTermination+0x5>
    2cf8:	f0 91 35 05 	lds	r31, 0x0535	; 0x800535 <xTasksWaitingTermination+0x6>
    2cfc:	c6 81       	ldd	r28, Z+6	; 0x06
    2cfe:	d7 81       	ldd	r29, Z+7	; 0x07
    2d00:	ce 01       	movw	r24, r28
    2d02:	02 96       	adiw	r24, 0x02	; 2
    2d04:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    2d08:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <uxCurrentNumberOfTasks>
    2d0c:	81 50       	subi	r24, 0x01	; 1
    2d0e:	80 93 24 05 	sts	0x0524, r24	; 0x800524 <uxCurrentNumberOfTasks>
    2d12:	80 91 2e 05 	lds	r24, 0x052E	; 0x80052e <uxDeletedTasksWaitingCleanUp>
    2d16:	81 50       	subi	r24, 0x01	; 1
    2d18:	80 93 2e 05 	sts	0x052E, r24	; 0x80052e <uxDeletedTasksWaitingCleanUp>
    2d1c:	0f 90       	pop	r0
    2d1e:	0f be       	out	0x3f, r0	; 63
    2d20:	8f 89       	ldd	r24, Y+23	; 0x17
    2d22:	98 8d       	ldd	r25, Y+24	; 0x18
    2d24:	0e 94 90 1d 	call	0x3b20	; 0x3b20 <vPortFree>
    2d28:	ce 01       	movw	r24, r28
    2d2a:	0e 94 90 1d 	call	0x3b20	; 0x3b20 <vPortFree>
    2d2e:	db cf       	rjmp	.-74     	; 0x2ce6 <prvIdleTask>
    2d30:	80 91 57 05 	lds	r24, 0x0557	; 0x800557 <pxReadyTasksLists>
    2d34:	82 30       	cpi	r24, 0x02	; 2
    2d36:	10 f0       	brcs	.+4      	; 0x2d3c <prvIdleTask+0x56>
    2d38:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    2d3c:	0e 94 e3 1c 	call	0x39c6	; 0x39c6 <vApplicationIdleHook>
    2d40:	d2 cf       	rjmp	.-92     	; 0x2ce6 <prvIdleTask>

00002d42 <xTaskCreate>:
    2d42:	5f 92       	push	r5
    2d44:	6f 92       	push	r6
    2d46:	7f 92       	push	r7
    2d48:	8f 92       	push	r8
    2d4a:	9f 92       	push	r9
    2d4c:	af 92       	push	r10
    2d4e:	bf 92       	push	r11
    2d50:	cf 92       	push	r12
    2d52:	df 92       	push	r13
    2d54:	ef 92       	push	r14
    2d56:	ff 92       	push	r15
    2d58:	0f 93       	push	r16
    2d5a:	1f 93       	push	r17
    2d5c:	cf 93       	push	r28
    2d5e:	df 93       	push	r29
    2d60:	3c 01       	movw	r6, r24
    2d62:	6b 01       	movw	r12, r22
    2d64:	5a 01       	movw	r10, r20
    2d66:	49 01       	movw	r8, r18
    2d68:	50 2e       	mov	r5, r16
    2d6a:	ca 01       	movw	r24, r20
    2d6c:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <pvPortMalloc>
    2d70:	8c 01       	movw	r16, r24
    2d72:	89 2b       	or	r24, r25
    2d74:	09 f4       	brne	.+2      	; 0x2d78 <xTaskCreate+0x36>
    2d76:	e0 c0       	rjmp	.+448    	; 0x2f38 <xTaskCreate+0x1f6>
    2d78:	88 e2       	ldi	r24, 0x28	; 40
    2d7a:	90 e0       	ldi	r25, 0x00	; 0
    2d7c:	0e 94 7d 1d 	call	0x3afa	; 0x3afa <pvPortMalloc>
    2d80:	ec 01       	movw	r28, r24
    2d82:	89 2b       	or	r24, r25
    2d84:	c9 f0       	breq	.+50     	; 0x2db8 <xTaskCreate+0x76>
    2d86:	18 8f       	std	Y+24, r17	; 0x18
    2d88:	0f 8b       	std	Y+23, r16	; 0x17
    2d8a:	a5 01       	movw	r20, r10
    2d8c:	65 ea       	ldi	r22, 0xA5	; 165
    2d8e:	70 e0       	ldi	r23, 0x00	; 0
    2d90:	c8 01       	movw	r24, r16
    2d92:	0e 94 2b 21 	call	0x4256	; 0x4256 <memset>
    2d96:	21 e0       	ldi	r18, 0x01	; 1
    2d98:	a2 1a       	sub	r10, r18
    2d9a:	b1 08       	sbc	r11, r1
    2d9c:	8f 89       	ldd	r24, Y+23	; 0x17
    2d9e:	98 8d       	ldd	r25, Y+24	; 0x18
    2da0:	a8 0e       	add	r10, r24
    2da2:	b9 1e       	adc	r11, r25
    2da4:	c1 14       	cp	r12, r1
    2da6:	d1 04       	cpc	r13, r1
    2da8:	c9 f0       	breq	.+50     	; 0x2ddc <xTaskCreate+0x9a>
    2daa:	be 01       	movw	r22, r28
    2dac:	67 5e       	subi	r22, 0xE7	; 231
    2dae:	7f 4f       	sbci	r23, 0xFF	; 255
    2db0:	f6 01       	movw	r30, r12
    2db2:	c6 01       	movw	r24, r12
    2db4:	08 96       	adiw	r24, 0x08	; 8
    2db6:	07 c0       	rjmp	.+14     	; 0x2dc6 <xTaskCreate+0x84>
    2db8:	c8 01       	movw	r24, r16
    2dba:	0e 94 90 1d 	call	0x3b20	; 0x3b20 <vPortFree>
    2dbe:	bc c0       	rjmp	.+376    	; 0x2f38 <xTaskCreate+0x1f6>
    2dc0:	e8 17       	cp	r30, r24
    2dc2:	f9 07       	cpc	r31, r25
    2dc4:	49 f0       	breq	.+18     	; 0x2dd8 <xTaskCreate+0x96>
    2dc6:	9f 01       	movw	r18, r30
    2dc8:	41 91       	ld	r20, Z+
    2dca:	db 01       	movw	r26, r22
    2dcc:	4d 93       	st	X+, r20
    2dce:	bd 01       	movw	r22, r26
    2dd0:	d9 01       	movw	r26, r18
    2dd2:	2c 91       	ld	r18, X
    2dd4:	21 11       	cpse	r18, r1
    2dd6:	f4 cf       	rjmp	.-24     	; 0x2dc0 <xTaskCreate+0x7e>
    2dd8:	18 a2       	std	Y+32, r1	; 0x20
    2dda:	01 c0       	rjmp	.+2      	; 0x2dde <xTaskCreate+0x9c>
    2ddc:	19 8e       	std	Y+25, r1	; 0x19
    2dde:	05 2d       	mov	r16, r5
    2de0:	04 30       	cpi	r16, 0x04	; 4
    2de2:	08 f0       	brcs	.+2      	; 0x2de6 <xTaskCreate+0xa4>
    2de4:	03 e0       	ldi	r16, 0x03	; 3
    2de6:	0e 8b       	std	Y+22, r16	; 0x16
    2de8:	09 a3       	std	Y+33, r16	; 0x21
    2dea:	1a a2       	std	Y+34, r1	; 0x22
    2dec:	6e 01       	movw	r12, r28
    2dee:	b2 e0       	ldi	r27, 0x02	; 2
    2df0:	cb 0e       	add	r12, r27
    2df2:	d1 1c       	adc	r13, r1
    2df4:	c6 01       	movw	r24, r12
    2df6:	0e 94 af 1d 	call	0x3b5e	; 0x3b5e <vListInitialiseItem>
    2dfa:	ce 01       	movw	r24, r28
    2dfc:	0c 96       	adiw	r24, 0x0c	; 12
    2dfe:	0e 94 af 1d 	call	0x3b5e	; 0x3b5e <vListInitialiseItem>
    2e02:	d9 87       	std	Y+9, r29	; 0x09
    2e04:	c8 87       	std	Y+8, r28	; 0x08
    2e06:	84 e0       	ldi	r24, 0x04	; 4
    2e08:	90 e0       	ldi	r25, 0x00	; 0
    2e0a:	80 1b       	sub	r24, r16
    2e0c:	91 09       	sbc	r25, r1
    2e0e:	9d 87       	std	Y+13, r25	; 0x0d
    2e10:	8c 87       	std	Y+12, r24	; 0x0c
    2e12:	db 8b       	std	Y+19, r29	; 0x13
    2e14:	ca 8b       	std	Y+18, r28	; 0x12
    2e16:	1b a2       	std	Y+35, r1	; 0x23
    2e18:	1c a2       	std	Y+36, r1	; 0x24
    2e1a:	1d a2       	std	Y+37, r1	; 0x25
    2e1c:	1e a2       	std	Y+38, r1	; 0x26
    2e1e:	1f a2       	std	Y+39, r1	; 0x27
    2e20:	a4 01       	movw	r20, r8
    2e22:	b3 01       	movw	r22, r6
    2e24:	c5 01       	movw	r24, r10
    2e26:	0e 94 30 1e 	call	0x3c60	; 0x3c60 <pxPortInitialiseStack>
    2e2a:	99 83       	std	Y+1, r25	; 0x01
    2e2c:	88 83       	st	Y, r24
    2e2e:	e1 14       	cp	r14, r1
    2e30:	f1 04       	cpc	r15, r1
    2e32:	19 f0       	breq	.+6      	; 0x2e3a <xTaskCreate+0xf8>
    2e34:	f7 01       	movw	r30, r14
    2e36:	d1 83       	std	Z+1, r29	; 0x01
    2e38:	c0 83       	st	Z, r28
    2e3a:	0f b6       	in	r0, 0x3f	; 63
    2e3c:	f8 94       	cli
    2e3e:	0f 92       	push	r0
    2e40:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <uxCurrentNumberOfTasks>
    2e44:	8f 5f       	subi	r24, 0xFF	; 255
    2e46:	80 93 24 05 	sts	0x0524, r24	; 0x800524 <uxCurrentNumberOfTasks>
    2e4a:	80 91 7b 05 	lds	r24, 0x057B	; 0x80057b <pxCurrentTCB>
    2e4e:	90 91 7c 05 	lds	r25, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2e52:	89 2b       	or	r24, r25
    2e54:	d1 f5       	brne	.+116    	; 0x2eca <xTaskCreate+0x188>
    2e56:	d0 93 7c 05 	sts	0x057C, r29	; 0x80057c <pxCurrentTCB+0x1>
    2e5a:	c0 93 7b 05 	sts	0x057B, r28	; 0x80057b <pxCurrentTCB>
    2e5e:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <uxCurrentNumberOfTasks>
    2e62:	81 30       	cpi	r24, 0x01	; 1
    2e64:	09 f0       	breq	.+2      	; 0x2e68 <xTaskCreate+0x126>
    2e66:	41 c0       	rjmp	.+130    	; 0x2eea <xTaskCreate+0x1a8>
    2e68:	87 e5       	ldi	r24, 0x57	; 87
    2e6a:	95 e0       	ldi	r25, 0x05	; 5
    2e6c:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2e70:	80 e6       	ldi	r24, 0x60	; 96
    2e72:	95 e0       	ldi	r25, 0x05	; 5
    2e74:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2e78:	89 e6       	ldi	r24, 0x69	; 105
    2e7a:	95 e0       	ldi	r25, 0x05	; 5
    2e7c:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2e80:	82 e7       	ldi	r24, 0x72	; 114
    2e82:	95 e0       	ldi	r25, 0x05	; 5
    2e84:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2e88:	8e e4       	ldi	r24, 0x4E	; 78
    2e8a:	95 e0       	ldi	r25, 0x05	; 5
    2e8c:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2e90:	85 e4       	ldi	r24, 0x45	; 69
    2e92:	95 e0       	ldi	r25, 0x05	; 5
    2e94:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2e98:	88 e3       	ldi	r24, 0x38	; 56
    2e9a:	95 e0       	ldi	r25, 0x05	; 5
    2e9c:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2ea0:	8f e2       	ldi	r24, 0x2F	; 47
    2ea2:	95 e0       	ldi	r25, 0x05	; 5
    2ea4:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2ea8:	85 e2       	ldi	r24, 0x25	; 37
    2eaa:	95 e0       	ldi	r25, 0x05	; 5
    2eac:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    2eb0:	8e e4       	ldi	r24, 0x4E	; 78
    2eb2:	95 e0       	ldi	r25, 0x05	; 5
    2eb4:	90 93 44 05 	sts	0x0544, r25	; 0x800544 <pxDelayedTaskList+0x1>
    2eb8:	80 93 43 05 	sts	0x0543, r24	; 0x800543 <pxDelayedTaskList>
    2ebc:	85 e4       	ldi	r24, 0x45	; 69
    2ebe:	95 e0       	ldi	r25, 0x05	; 5
    2ec0:	90 93 42 05 	sts	0x0542, r25	; 0x800542 <pxOverflowDelayedTaskList+0x1>
    2ec4:	80 93 41 05 	sts	0x0541, r24	; 0x800541 <pxOverflowDelayedTaskList>
    2ec8:	10 c0       	rjmp	.+32     	; 0x2eea <xTaskCreate+0x1a8>
    2eca:	80 91 20 05 	lds	r24, 0x0520	; 0x800520 <xSchedulerRunning>
    2ece:	81 11       	cpse	r24, r1
    2ed0:	0c c0       	rjmp	.+24     	; 0x2eea <xTaskCreate+0x1a8>
    2ed2:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    2ed6:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2eda:	96 89       	ldd	r25, Z+22	; 0x16
    2edc:	8e 89       	ldd	r24, Y+22	; 0x16
    2ede:	89 17       	cp	r24, r25
    2ee0:	20 f0       	brcs	.+8      	; 0x2eea <xTaskCreate+0x1a8>
    2ee2:	d0 93 7c 05 	sts	0x057C, r29	; 0x80057c <pxCurrentTCB+0x1>
    2ee6:	c0 93 7b 05 	sts	0x057B, r28	; 0x80057b <pxCurrentTCB>
    2eea:	80 91 1c 05 	lds	r24, 0x051C	; 0x80051c <uxTaskNumber>
    2eee:	8f 5f       	subi	r24, 0xFF	; 255
    2ef0:	80 93 1c 05 	sts	0x051C, r24	; 0x80051c <uxTaskNumber>
    2ef4:	8e 89       	ldd	r24, Y+22	; 0x16
    2ef6:	90 91 21 05 	lds	r25, 0x0521	; 0x800521 <uxTopReadyPriority>
    2efa:	98 17       	cp	r25, r24
    2efc:	10 f4       	brcc	.+4      	; 0x2f02 <xTaskCreate+0x1c0>
    2efe:	80 93 21 05 	sts	0x0521, r24	; 0x800521 <uxTopReadyPriority>
    2f02:	f9 e0       	ldi	r31, 0x09	; 9
    2f04:	8f 9f       	mul	r24, r31
    2f06:	c0 01       	movw	r24, r0
    2f08:	11 24       	eor	r1, r1
    2f0a:	b6 01       	movw	r22, r12
    2f0c:	89 5a       	subi	r24, 0xA9	; 169
    2f0e:	9a 4f       	sbci	r25, 0xFA	; 250
    2f10:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <vListInsertEnd>
    2f14:	0f 90       	pop	r0
    2f16:	0f be       	out	0x3f, r0	; 63
    2f18:	80 91 20 05 	lds	r24, 0x0520	; 0x800520 <xSchedulerRunning>
    2f1c:	88 23       	and	r24, r24
    2f1e:	51 f0       	breq	.+20     	; 0x2f34 <xTaskCreate+0x1f2>
    2f20:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    2f24:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2f28:	96 89       	ldd	r25, Z+22	; 0x16
    2f2a:	8e 89       	ldd	r24, Y+22	; 0x16
    2f2c:	98 17       	cp	r25, r24
    2f2e:	10 f4       	brcc	.+4      	; 0x2f34 <xTaskCreate+0x1f2>
    2f30:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    2f34:	81 e0       	ldi	r24, 0x01	; 1
    2f36:	01 c0       	rjmp	.+2      	; 0x2f3a <xTaskCreate+0x1f8>
    2f38:	8f ef       	ldi	r24, 0xFF	; 255
    2f3a:	df 91       	pop	r29
    2f3c:	cf 91       	pop	r28
    2f3e:	1f 91       	pop	r17
    2f40:	0f 91       	pop	r16
    2f42:	ff 90       	pop	r15
    2f44:	ef 90       	pop	r14
    2f46:	df 90       	pop	r13
    2f48:	cf 90       	pop	r12
    2f4a:	bf 90       	pop	r11
    2f4c:	af 90       	pop	r10
    2f4e:	9f 90       	pop	r9
    2f50:	8f 90       	pop	r8
    2f52:	7f 90       	pop	r7
    2f54:	6f 90       	pop	r6
    2f56:	5f 90       	pop	r5
    2f58:	08 95       	ret

00002f5a <vTaskResume>:
    2f5a:	0f 93       	push	r16
    2f5c:	1f 93       	push	r17
    2f5e:	cf 93       	push	r28
    2f60:	df 93       	push	r29
    2f62:	20 91 7b 05 	lds	r18, 0x057B	; 0x80057b <pxCurrentTCB>
    2f66:	30 91 7c 05 	lds	r19, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2f6a:	82 17       	cp	r24, r18
    2f6c:	93 07       	cpc	r25, r19
    2f6e:	09 f4       	brne	.+2      	; 0x2f72 <vTaskResume+0x18>
    2f70:	38 c0       	rjmp	.+112    	; 0x2fe2 <vTaskResume+0x88>
    2f72:	00 97       	sbiw	r24, 0x00	; 0
    2f74:	09 f4       	brne	.+2      	; 0x2f78 <vTaskResume+0x1e>
    2f76:	35 c0       	rjmp	.+106    	; 0x2fe2 <vTaskResume+0x88>
    2f78:	0f b6       	in	r0, 0x3f	; 63
    2f7a:	f8 94       	cli
    2f7c:	0f 92       	push	r0
    2f7e:	fc 01       	movw	r30, r24
    2f80:	22 85       	ldd	r18, Z+10	; 0x0a
    2f82:	33 85       	ldd	r19, Z+11	; 0x0b
    2f84:	25 52       	subi	r18, 0x25	; 37
    2f86:	35 40       	sbci	r19, 0x05	; 5
    2f88:	51 f5       	brne	.+84     	; 0x2fde <vTaskResume+0x84>
    2f8a:	fc 01       	movw	r30, r24
    2f8c:	24 89       	ldd	r18, Z+20	; 0x14
    2f8e:	35 89       	ldd	r19, Z+21	; 0x15
    2f90:	f5 e0       	ldi	r31, 0x05	; 5
    2f92:	28 33       	cpi	r18, 0x38	; 56
    2f94:	3f 07       	cpc	r19, r31
    2f96:	19 f1       	breq	.+70     	; 0x2fde <vTaskResume+0x84>
    2f98:	23 2b       	or	r18, r19
    2f9a:	09 f5       	brne	.+66     	; 0x2fde <vTaskResume+0x84>
    2f9c:	ec 01       	movw	r28, r24
    2f9e:	8c 01       	movw	r16, r24
    2fa0:	0e 5f       	subi	r16, 0xFE	; 254
    2fa2:	1f 4f       	sbci	r17, 0xFF	; 255
    2fa4:	c8 01       	movw	r24, r16
    2fa6:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    2faa:	8e 89       	ldd	r24, Y+22	; 0x16
    2fac:	90 91 21 05 	lds	r25, 0x0521	; 0x800521 <uxTopReadyPriority>
    2fb0:	98 17       	cp	r25, r24
    2fb2:	10 f4       	brcc	.+4      	; 0x2fb8 <vTaskResume+0x5e>
    2fb4:	80 93 21 05 	sts	0x0521, r24	; 0x800521 <uxTopReadyPriority>
    2fb8:	29 e0       	ldi	r18, 0x09	; 9
    2fba:	82 9f       	mul	r24, r18
    2fbc:	c0 01       	movw	r24, r0
    2fbe:	11 24       	eor	r1, r1
    2fc0:	b8 01       	movw	r22, r16
    2fc2:	89 5a       	subi	r24, 0xA9	; 169
    2fc4:	9a 4f       	sbci	r25, 0xFA	; 250
    2fc6:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <vListInsertEnd>
    2fca:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    2fce:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    2fd2:	9e 89       	ldd	r25, Y+22	; 0x16
    2fd4:	86 89       	ldd	r24, Z+22	; 0x16
    2fd6:	98 17       	cp	r25, r24
    2fd8:	10 f0       	brcs	.+4      	; 0x2fde <vTaskResume+0x84>
    2fda:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    2fde:	0f 90       	pop	r0
    2fe0:	0f be       	out	0x3f, r0	; 63
    2fe2:	df 91       	pop	r29
    2fe4:	cf 91       	pop	r28
    2fe6:	1f 91       	pop	r17
    2fe8:	0f 91       	pop	r16
    2fea:	08 95       	ret

00002fec <vTaskStartScheduler>:
    2fec:	ef 92       	push	r14
    2fee:	ff 92       	push	r15
    2ff0:	0f 93       	push	r16
    2ff2:	88 e1       	ldi	r24, 0x18	; 24
    2ff4:	e8 2e       	mov	r14, r24
    2ff6:	85 e0       	ldi	r24, 0x05	; 5
    2ff8:	f8 2e       	mov	r15, r24
    2ffa:	00 e0       	ldi	r16, 0x00	; 0
    2ffc:	20 e0       	ldi	r18, 0x00	; 0
    2ffe:	30 e0       	ldi	r19, 0x00	; 0
    3000:	40 ec       	ldi	r20, 0xC0	; 192
    3002:	50 e0       	ldi	r21, 0x00	; 0
    3004:	6c ec       	ldi	r22, 0xCC	; 204
    3006:	72 e0       	ldi	r23, 0x02	; 2
    3008:	83 e7       	ldi	r24, 0x73	; 115
    300a:	96 e1       	ldi	r25, 0x16	; 22
    300c:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <xTaskCreate>
    3010:	81 30       	cpi	r24, 0x01	; 1
    3012:	b1 f4       	brne	.+44     	; 0x3040 <vTaskStartScheduler+0x54>
    3014:	0e 94 2b 1b 	call	0x3656	; 0x3656 <xTimerCreateTimerTask>
    3018:	81 30       	cpi	r24, 0x01	; 1
    301a:	91 f4       	brne	.+36     	; 0x3040 <vTaskStartScheduler+0x54>
    301c:	f8 94       	cli
    301e:	2f ef       	ldi	r18, 0xFF	; 255
    3020:	3f ef       	ldi	r19, 0xFF	; 255
    3022:	30 93 1b 05 	sts	0x051B, r19	; 0x80051b <xNextTaskUnblockTime+0x1>
    3026:	20 93 1a 05 	sts	0x051A, r18	; 0x80051a <xNextTaskUnblockTime>
    302a:	80 93 20 05 	sts	0x0520, r24	; 0x800520 <xSchedulerRunning>
    302e:	10 92 23 05 	sts	0x0523, r1	; 0x800523 <xTickCount+0x1>
    3032:	10 92 22 05 	sts	0x0522, r1	; 0x800522 <xTickCount>
    3036:	0f 91       	pop	r16
    3038:	ff 90       	pop	r15
    303a:	ef 90       	pop	r14
    303c:	0c 94 9c 1e 	jmp	0x3d38	; 0x3d38 <xPortStartScheduler>
    3040:	0f 91       	pop	r16
    3042:	ff 90       	pop	r15
    3044:	ef 90       	pop	r14
    3046:	08 95       	ret

00003048 <vTaskSuspendAll>:
    3048:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <uxSchedulerSuspended>
    304c:	8f 5f       	subi	r24, 0xFF	; 255
    304e:	80 93 17 05 	sts	0x0517, r24	; 0x800517 <uxSchedulerSuspended>
    3052:	08 95       	ret

00003054 <xTaskGetTickCount>:
    3054:	0f b6       	in	r0, 0x3f	; 63
    3056:	f8 94       	cli
    3058:	0f 92       	push	r0
    305a:	80 91 22 05 	lds	r24, 0x0522	; 0x800522 <xTickCount>
    305e:	90 91 23 05 	lds	r25, 0x0523	; 0x800523 <xTickCount+0x1>
    3062:	0f 90       	pop	r0
    3064:	0f be       	out	0x3f, r0	; 63
    3066:	08 95       	ret

00003068 <xTaskIncrementTick>:
    3068:	cf 92       	push	r12
    306a:	df 92       	push	r13
    306c:	ef 92       	push	r14
    306e:	ff 92       	push	r15
    3070:	0f 93       	push	r16
    3072:	1f 93       	push	r17
    3074:	cf 93       	push	r28
    3076:	df 93       	push	r29
    3078:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <uxSchedulerSuspended>
    307c:	81 11       	cpse	r24, r1
    307e:	8c c0       	rjmp	.+280    	; 0x3198 <xTaskIncrementTick+0x130>
    3080:	00 91 22 05 	lds	r16, 0x0522	; 0x800522 <xTickCount>
    3084:	10 91 23 05 	lds	r17, 0x0523	; 0x800523 <xTickCount+0x1>
    3088:	0f 5f       	subi	r16, 0xFF	; 255
    308a:	1f 4f       	sbci	r17, 0xFF	; 255
    308c:	10 93 23 05 	sts	0x0523, r17	; 0x800523 <xTickCount+0x1>
    3090:	00 93 22 05 	sts	0x0522, r16	; 0x800522 <xTickCount>
    3094:	01 15       	cp	r16, r1
    3096:	11 05       	cpc	r17, r1
    3098:	b9 f4       	brne	.+46     	; 0x30c8 <xTaskIncrementTick+0x60>
    309a:	80 91 43 05 	lds	r24, 0x0543	; 0x800543 <pxDelayedTaskList>
    309e:	90 91 44 05 	lds	r25, 0x0544	; 0x800544 <pxDelayedTaskList+0x1>
    30a2:	20 91 41 05 	lds	r18, 0x0541	; 0x800541 <pxOverflowDelayedTaskList>
    30a6:	30 91 42 05 	lds	r19, 0x0542	; 0x800542 <pxOverflowDelayedTaskList+0x1>
    30aa:	30 93 44 05 	sts	0x0544, r19	; 0x800544 <pxDelayedTaskList+0x1>
    30ae:	20 93 43 05 	sts	0x0543, r18	; 0x800543 <pxDelayedTaskList>
    30b2:	90 93 42 05 	sts	0x0542, r25	; 0x800542 <pxOverflowDelayedTaskList+0x1>
    30b6:	80 93 41 05 	sts	0x0541, r24	; 0x800541 <pxOverflowDelayedTaskList>
    30ba:	80 91 1d 05 	lds	r24, 0x051D	; 0x80051d <xNumOfOverflows>
    30be:	8f 5f       	subi	r24, 0xFF	; 255
    30c0:	80 93 1d 05 	sts	0x051D, r24	; 0x80051d <xNumOfOverflows>
    30c4:	0e 94 fc 15 	call	0x2bf8	; 0x2bf8 <prvResetNextTaskUnblockTime>
    30c8:	80 91 1a 05 	lds	r24, 0x051A	; 0x80051a <xNextTaskUnblockTime>
    30cc:	90 91 1b 05 	lds	r25, 0x051B	; 0x80051b <xNextTaskUnblockTime+0x1>
    30d0:	c0 e0       	ldi	r28, 0x00	; 0
    30d2:	08 17       	cp	r16, r24
    30d4:	19 07       	cpc	r17, r25
    30d6:	08 f4       	brcc	.+2      	; 0x30da <xTaskIncrementTick+0x72>
    30d8:	4f c0       	rjmp	.+158    	; 0x3178 <xTaskIncrementTick+0x110>
    30da:	d9 e0       	ldi	r29, 0x09	; 9
    30dc:	e0 91 43 05 	lds	r30, 0x0543	; 0x800543 <pxDelayedTaskList>
    30e0:	f0 91 44 05 	lds	r31, 0x0544	; 0x800544 <pxDelayedTaskList+0x1>
    30e4:	80 81       	ld	r24, Z
    30e6:	81 11       	cpse	r24, r1
    30e8:	03 c0       	rjmp	.+6      	; 0x30f0 <xTaskIncrementTick+0x88>
    30ea:	8f ef       	ldi	r24, 0xFF	; 255
    30ec:	9f ef       	ldi	r25, 0xFF	; 255
    30ee:	11 c0       	rjmp	.+34     	; 0x3112 <xTaskIncrementTick+0xaa>
    30f0:	e0 91 43 05 	lds	r30, 0x0543	; 0x800543 <pxDelayedTaskList>
    30f4:	f0 91 44 05 	lds	r31, 0x0544	; 0x800544 <pxDelayedTaskList+0x1>
    30f8:	05 80       	ldd	r0, Z+5	; 0x05
    30fa:	f6 81       	ldd	r31, Z+6	; 0x06
    30fc:	e0 2d       	mov	r30, r0
    30fe:	e6 80       	ldd	r14, Z+6	; 0x06
    3100:	f7 80       	ldd	r15, Z+7	; 0x07
    3102:	d7 01       	movw	r26, r14
    3104:	12 96       	adiw	r26, 0x02	; 2
    3106:	8d 91       	ld	r24, X+
    3108:	9c 91       	ld	r25, X
    310a:	13 97       	sbiw	r26, 0x03	; 3
    310c:	08 17       	cp	r16, r24
    310e:	19 07       	cpc	r17, r25
    3110:	28 f4       	brcc	.+10     	; 0x311c <xTaskIncrementTick+0xb4>
    3112:	90 93 1b 05 	sts	0x051B, r25	; 0x80051b <xNextTaskUnblockTime+0x1>
    3116:	80 93 1a 05 	sts	0x051A, r24	; 0x80051a <xNextTaskUnblockTime>
    311a:	2e c0       	rjmp	.+92     	; 0x3178 <xTaskIncrementTick+0x110>
    311c:	67 01       	movw	r12, r14
    311e:	b2 e0       	ldi	r27, 0x02	; 2
    3120:	cb 0e       	add	r12, r27
    3122:	d1 1c       	adc	r13, r1
    3124:	c6 01       	movw	r24, r12
    3126:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    312a:	f7 01       	movw	r30, r14
    312c:	84 89       	ldd	r24, Z+20	; 0x14
    312e:	95 89       	ldd	r25, Z+21	; 0x15
    3130:	89 2b       	or	r24, r25
    3132:	21 f0       	breq	.+8      	; 0x313c <xTaskIncrementTick+0xd4>
    3134:	c7 01       	movw	r24, r14
    3136:	0c 96       	adiw	r24, 0x0c	; 12
    3138:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    313c:	d7 01       	movw	r26, r14
    313e:	56 96       	adiw	r26, 0x16	; 22
    3140:	8c 91       	ld	r24, X
    3142:	90 91 21 05 	lds	r25, 0x0521	; 0x800521 <uxTopReadyPriority>
    3146:	98 17       	cp	r25, r24
    3148:	10 f4       	brcc	.+4      	; 0x314e <xTaskIncrementTick+0xe6>
    314a:	80 93 21 05 	sts	0x0521, r24	; 0x800521 <uxTopReadyPriority>
    314e:	d8 9f       	mul	r29, r24
    3150:	c0 01       	movw	r24, r0
    3152:	11 24       	eor	r1, r1
    3154:	b6 01       	movw	r22, r12
    3156:	89 5a       	subi	r24, 0xA9	; 169
    3158:	9a 4f       	sbci	r25, 0xFA	; 250
    315a:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <vListInsertEnd>
    315e:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    3162:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3166:	d7 01       	movw	r26, r14
    3168:	56 96       	adiw	r26, 0x16	; 22
    316a:	9c 91       	ld	r25, X
    316c:	86 89       	ldd	r24, Z+22	; 0x16
    316e:	98 17       	cp	r25, r24
    3170:	08 f4       	brcc	.+2      	; 0x3174 <xTaskIncrementTick+0x10c>
    3172:	b4 cf       	rjmp	.-152    	; 0x30dc <xTaskIncrementTick+0x74>
    3174:	c1 e0       	ldi	r28, 0x01	; 1
    3176:	b2 cf       	rjmp	.-156    	; 0x30dc <xTaskIncrementTick+0x74>
    3178:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    317c:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3180:	e6 89       	ldd	r30, Z+22	; 0x16
    3182:	b9 e0       	ldi	r27, 0x09	; 9
    3184:	eb 9f       	mul	r30, r27
    3186:	f0 01       	movw	r30, r0
    3188:	11 24       	eor	r1, r1
    318a:	e9 5a       	subi	r30, 0xA9	; 169
    318c:	fa 4f       	sbci	r31, 0xFA	; 250
    318e:	80 81       	ld	r24, Z
    3190:	82 30       	cpi	r24, 0x02	; 2
    3192:	40 f0       	brcs	.+16     	; 0x31a4 <xTaskIncrementTick+0x13c>
    3194:	c1 e0       	ldi	r28, 0x01	; 1
    3196:	06 c0       	rjmp	.+12     	; 0x31a4 <xTaskIncrementTick+0x13c>
    3198:	80 91 1f 05 	lds	r24, 0x051F	; 0x80051f <uxPendedTicks>
    319c:	8f 5f       	subi	r24, 0xFF	; 255
    319e:	80 93 1f 05 	sts	0x051F, r24	; 0x80051f <uxPendedTicks>
    31a2:	c0 e0       	ldi	r28, 0x00	; 0
    31a4:	80 91 1e 05 	lds	r24, 0x051E	; 0x80051e <xYieldPending>
    31a8:	81 11       	cpse	r24, r1
    31aa:	c1 e0       	ldi	r28, 0x01	; 1
    31ac:	8c 2f       	mov	r24, r28
    31ae:	df 91       	pop	r29
    31b0:	cf 91       	pop	r28
    31b2:	1f 91       	pop	r17
    31b4:	0f 91       	pop	r16
    31b6:	ff 90       	pop	r15
    31b8:	ef 90       	pop	r14
    31ba:	df 90       	pop	r13
    31bc:	cf 90       	pop	r12
    31be:	08 95       	ret

000031c0 <xTaskResumeAll>:
    31c0:	ef 92       	push	r14
    31c2:	ff 92       	push	r15
    31c4:	0f 93       	push	r16
    31c6:	1f 93       	push	r17
    31c8:	cf 93       	push	r28
    31ca:	df 93       	push	r29
    31cc:	0f b6       	in	r0, 0x3f	; 63
    31ce:	f8 94       	cli
    31d0:	0f 92       	push	r0
    31d2:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <uxSchedulerSuspended>
    31d6:	81 50       	subi	r24, 0x01	; 1
    31d8:	80 93 17 05 	sts	0x0517, r24	; 0x800517 <uxSchedulerSuspended>
    31dc:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <uxSchedulerSuspended>
    31e0:	88 23       	and	r24, r24
    31e2:	11 f0       	breq	.+4      	; 0x31e8 <xTaskResumeAll+0x28>
    31e4:	80 e0       	ldi	r24, 0x00	; 0
    31e6:	52 c0       	rjmp	.+164    	; 0x328c <xTaskResumeAll+0xcc>
    31e8:	80 91 24 05 	lds	r24, 0x0524	; 0x800524 <uxCurrentNumberOfTasks>
    31ec:	88 23       	and	r24, r24
    31ee:	d1 f3       	breq	.-12     	; 0x31e4 <xTaskResumeAll+0x24>
    31f0:	c0 e0       	ldi	r28, 0x00	; 0
    31f2:	d0 e0       	ldi	r29, 0x00	; 0
    31f4:	89 e0       	ldi	r24, 0x09	; 9
    31f6:	f8 2e       	mov	r15, r24
    31f8:	ee 24       	eor	r14, r14
    31fa:	e3 94       	inc	r14
    31fc:	80 91 38 05 	lds	r24, 0x0538	; 0x800538 <xPendingReadyList>
    3200:	88 23       	and	r24, r24
    3202:	51 f1       	breq	.+84     	; 0x3258 <xTaskResumeAll+0x98>
    3204:	e0 91 3d 05 	lds	r30, 0x053D	; 0x80053d <xPendingReadyList+0x5>
    3208:	f0 91 3e 05 	lds	r31, 0x053E	; 0x80053e <xPendingReadyList+0x6>
    320c:	c6 81       	ldd	r28, Z+6	; 0x06
    320e:	d7 81       	ldd	r29, Z+7	; 0x07
    3210:	ce 01       	movw	r24, r28
    3212:	0c 96       	adiw	r24, 0x0c	; 12
    3214:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    3218:	8e 01       	movw	r16, r28
    321a:	0e 5f       	subi	r16, 0xFE	; 254
    321c:	1f 4f       	sbci	r17, 0xFF	; 255
    321e:	c8 01       	movw	r24, r16
    3220:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    3224:	8e 89       	ldd	r24, Y+22	; 0x16
    3226:	90 91 21 05 	lds	r25, 0x0521	; 0x800521 <uxTopReadyPriority>
    322a:	98 17       	cp	r25, r24
    322c:	10 f4       	brcc	.+4      	; 0x3232 <xTaskResumeAll+0x72>
    322e:	80 93 21 05 	sts	0x0521, r24	; 0x800521 <uxTopReadyPriority>
    3232:	f8 9e       	mul	r15, r24
    3234:	c0 01       	movw	r24, r0
    3236:	11 24       	eor	r1, r1
    3238:	b8 01       	movw	r22, r16
    323a:	89 5a       	subi	r24, 0xA9	; 169
    323c:	9a 4f       	sbci	r25, 0xFA	; 250
    323e:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <vListInsertEnd>
    3242:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    3246:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    324a:	9e 89       	ldd	r25, Y+22	; 0x16
    324c:	86 89       	ldd	r24, Z+22	; 0x16
    324e:	98 17       	cp	r25, r24
    3250:	a8 f2       	brcs	.-86     	; 0x31fc <xTaskResumeAll+0x3c>
    3252:	e0 92 1e 05 	sts	0x051E, r14	; 0x80051e <xYieldPending>
    3256:	d2 cf       	rjmp	.-92     	; 0x31fc <xTaskResumeAll+0x3c>
    3258:	cd 2b       	or	r28, r29
    325a:	11 f0       	breq	.+4      	; 0x3260 <xTaskResumeAll+0xa0>
    325c:	0e 94 fc 15 	call	0x2bf8	; 0x2bf8 <prvResetNextTaskUnblockTime>
    3260:	c0 91 1f 05 	lds	r28, 0x051F	; 0x80051f <uxPendedTicks>
    3264:	cc 23       	and	r28, r28
    3266:	51 f0       	breq	.+20     	; 0x327c <xTaskResumeAll+0xbc>
    3268:	d1 e0       	ldi	r29, 0x01	; 1
    326a:	0e 94 34 18 	call	0x3068	; 0x3068 <xTaskIncrementTick>
    326e:	81 11       	cpse	r24, r1
    3270:	d0 93 1e 05 	sts	0x051E, r29	; 0x80051e <xYieldPending>
    3274:	c1 50       	subi	r28, 0x01	; 1
    3276:	c9 f7       	brne	.-14     	; 0x326a <xTaskResumeAll+0xaa>
    3278:	10 92 1f 05 	sts	0x051F, r1	; 0x80051f <uxPendedTicks>
    327c:	80 91 1e 05 	lds	r24, 0x051E	; 0x80051e <xYieldPending>
    3280:	88 23       	and	r24, r24
    3282:	09 f4       	brne	.+2      	; 0x3286 <xTaskResumeAll+0xc6>
    3284:	af cf       	rjmp	.-162    	; 0x31e4 <xTaskResumeAll+0x24>
    3286:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    328a:	81 e0       	ldi	r24, 0x01	; 1
    328c:	0f 90       	pop	r0
    328e:	0f be       	out	0x3f, r0	; 63
    3290:	df 91       	pop	r29
    3292:	cf 91       	pop	r28
    3294:	1f 91       	pop	r17
    3296:	0f 91       	pop	r16
    3298:	ff 90       	pop	r15
    329a:	ef 90       	pop	r14
    329c:	08 95       	ret

0000329e <vTaskDelayUntil>:
    329e:	0f 93       	push	r16
    32a0:	1f 93       	push	r17
    32a2:	cf 93       	push	r28
    32a4:	df 93       	push	r29
    32a6:	8c 01       	movw	r16, r24
    32a8:	eb 01       	movw	r28, r22
    32aa:	0e 94 24 18 	call	0x3048	; 0x3048 <vTaskSuspendAll>
    32ae:	40 91 22 05 	lds	r20, 0x0522	; 0x800522 <xTickCount>
    32b2:	50 91 23 05 	lds	r21, 0x0523	; 0x800523 <xTickCount+0x1>
    32b6:	f8 01       	movw	r30, r16
    32b8:	20 81       	ld	r18, Z
    32ba:	31 81       	ldd	r19, Z+1	; 0x01
    32bc:	c9 01       	movw	r24, r18
    32be:	8c 0f       	add	r24, r28
    32c0:	9d 1f       	adc	r25, r29
    32c2:	42 17       	cp	r20, r18
    32c4:	53 07       	cpc	r21, r19
    32c6:	20 f4       	brcc	.+8      	; 0x32d0 <vTaskDelayUntil+0x32>
    32c8:	82 17       	cp	r24, r18
    32ca:	93 07       	cpc	r25, r19
    32cc:	40 f4       	brcc	.+16     	; 0x32de <vTaskDelayUntil+0x40>
    32ce:	03 c0       	rjmp	.+6      	; 0x32d6 <vTaskDelayUntil+0x38>
    32d0:	82 17       	cp	r24, r18
    32d2:	93 07       	cpc	r25, r19
    32d4:	30 f0       	brcs	.+12     	; 0x32e2 <vTaskDelayUntil+0x44>
    32d6:	21 e0       	ldi	r18, 0x01	; 1
    32d8:	48 17       	cp	r20, r24
    32da:	59 07       	cpc	r21, r25
    32dc:	18 f0       	brcs	.+6      	; 0x32e4 <vTaskDelayUntil+0x46>
    32de:	20 e0       	ldi	r18, 0x00	; 0
    32e0:	01 c0       	rjmp	.+2      	; 0x32e4 <vTaskDelayUntil+0x46>
    32e2:	21 e0       	ldi	r18, 0x01	; 1
    32e4:	f8 01       	movw	r30, r16
    32e6:	91 83       	std	Z+1, r25	; 0x01
    32e8:	80 83       	st	Z, r24
    32ea:	22 23       	and	r18, r18
    32ec:	29 f0       	breq	.+10     	; 0x32f8 <vTaskDelayUntil+0x5a>
    32ee:	60 e0       	ldi	r22, 0x00	; 0
    32f0:	84 1b       	sub	r24, r20
    32f2:	95 0b       	sbc	r25, r21
    32f4:	0e 94 17 16 	call	0x2c2e	; 0x2c2e <prvAddCurrentTaskToDelayedList>
    32f8:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    32fc:	81 11       	cpse	r24, r1
    32fe:	02 c0       	rjmp	.+4      	; 0x3304 <vTaskDelayUntil+0x66>
    3300:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    3304:	df 91       	pop	r29
    3306:	cf 91       	pop	r28
    3308:	1f 91       	pop	r17
    330a:	0f 91       	pop	r16
    330c:	08 95       	ret

0000330e <vTaskSwitchContext>:
    330e:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <uxSchedulerSuspended>
    3312:	88 23       	and	r24, r24
    3314:	21 f0       	breq	.+8      	; 0x331e <vTaskSwitchContext+0x10>
    3316:	81 e0       	ldi	r24, 0x01	; 1
    3318:	80 93 1e 05 	sts	0x051E, r24	; 0x80051e <xYieldPending>
    331c:	08 95       	ret
    331e:	10 92 1e 05 	sts	0x051E, r1	; 0x80051e <xYieldPending>
    3322:	a0 91 7b 05 	lds	r26, 0x057B	; 0x80057b <pxCurrentTCB>
    3326:	b0 91 7c 05 	lds	r27, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    332a:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    332e:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3332:	2d 91       	ld	r18, X+
    3334:	3c 91       	ld	r19, X
    3336:	87 89       	ldd	r24, Z+23	; 0x17
    3338:	90 8d       	ldd	r25, Z+24	; 0x18
    333a:	82 17       	cp	r24, r18
    333c:	93 07       	cpc	r25, r19
    333e:	60 f0       	brcs	.+24     	; 0x3358 <vTaskSwitchContext+0x4a>
    3340:	60 91 7b 05 	lds	r22, 0x057B	; 0x80057b <pxCurrentTCB>
    3344:	70 91 7c 05 	lds	r23, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3348:	80 91 7b 05 	lds	r24, 0x057B	; 0x80057b <pxCurrentTCB>
    334c:	90 91 7c 05 	lds	r25, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3350:	67 5e       	subi	r22, 0xE7	; 231
    3352:	7f 4f       	sbci	r23, 0xFF	; 255
    3354:	0e 94 f9 1c 	call	0x39f2	; 0x39f2 <vApplicationStackOverflowHook>
    3358:	80 91 21 05 	lds	r24, 0x0521	; 0x800521 <uxTopReadyPriority>
    335c:	69 e0       	ldi	r22, 0x09	; 9
    335e:	48 2f       	mov	r20, r24
    3360:	50 e0       	ldi	r21, 0x00	; 0
    3362:	64 9f       	mul	r22, r20
    3364:	90 01       	movw	r18, r0
    3366:	65 9f       	mul	r22, r21
    3368:	30 0d       	add	r19, r0
    336a:	11 24       	eor	r1, r1
    336c:	f9 01       	movw	r30, r18
    336e:	e9 5a       	subi	r30, 0xA9	; 169
    3370:	fa 4f       	sbci	r31, 0xFA	; 250
    3372:	90 81       	ld	r25, Z
    3374:	91 11       	cpse	r25, r1
    3376:	02 c0       	rjmp	.+4      	; 0x337c <vTaskSwitchContext+0x6e>
    3378:	81 50       	subi	r24, 0x01	; 1
    337a:	f1 cf       	rjmp	.-30     	; 0x335e <vTaskSwitchContext+0x50>
    337c:	a1 81       	ldd	r26, Z+1	; 0x01
    337e:	b2 81       	ldd	r27, Z+2	; 0x02
    3380:	12 96       	adiw	r26, 0x02	; 2
    3382:	0d 90       	ld	r0, X+
    3384:	bc 91       	ld	r27, X
    3386:	a0 2d       	mov	r26, r0
    3388:	b2 83       	std	Z+2, r27	; 0x02
    338a:	a1 83       	std	Z+1, r26	; 0x01
    338c:	26 5a       	subi	r18, 0xA6	; 166
    338e:	3a 4f       	sbci	r19, 0xFA	; 250
    3390:	a2 17       	cp	r26, r18
    3392:	b3 07       	cpc	r27, r19
    3394:	31 f4       	brne	.+12     	; 0x33a2 <vTaskSwitchContext+0x94>
    3396:	12 96       	adiw	r26, 0x02	; 2
    3398:	2d 91       	ld	r18, X+
    339a:	3c 91       	ld	r19, X
    339c:	13 97       	sbiw	r26, 0x03	; 3
    339e:	32 83       	std	Z+2, r19	; 0x02
    33a0:	21 83       	std	Z+1, r18	; 0x01
    33a2:	99 e0       	ldi	r25, 0x09	; 9
    33a4:	94 9f       	mul	r25, r20
    33a6:	f0 01       	movw	r30, r0
    33a8:	95 9f       	mul	r25, r21
    33aa:	f0 0d       	add	r31, r0
    33ac:	11 24       	eor	r1, r1
    33ae:	e9 5a       	subi	r30, 0xA9	; 169
    33b0:	fa 4f       	sbci	r31, 0xFA	; 250
    33b2:	01 80       	ldd	r0, Z+1	; 0x01
    33b4:	f2 81       	ldd	r31, Z+2	; 0x02
    33b6:	e0 2d       	mov	r30, r0
    33b8:	26 81       	ldd	r18, Z+6	; 0x06
    33ba:	37 81       	ldd	r19, Z+7	; 0x07
    33bc:	30 93 7c 05 	sts	0x057C, r19	; 0x80057c <pxCurrentTCB+0x1>
    33c0:	20 93 7b 05 	sts	0x057B, r18	; 0x80057b <pxCurrentTCB>
    33c4:	80 93 21 05 	sts	0x0521, r24	; 0x800521 <uxTopReadyPriority>
    33c8:	08 95       	ret

000033ca <vTaskPlaceOnEventList>:
    33ca:	cf 93       	push	r28
    33cc:	df 93       	push	r29
    33ce:	eb 01       	movw	r28, r22
    33d0:	60 91 7b 05 	lds	r22, 0x057B	; 0x80057b <pxCurrentTCB>
    33d4:	70 91 7c 05 	lds	r23, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    33d8:	64 5f       	subi	r22, 0xF4	; 244
    33da:	7f 4f       	sbci	r23, 0xFF	; 255
    33dc:	0e 94 d4 1d 	call	0x3ba8	; 0x3ba8 <vListInsert>
    33e0:	61 e0       	ldi	r22, 0x01	; 1
    33e2:	ce 01       	movw	r24, r28
    33e4:	df 91       	pop	r29
    33e6:	cf 91       	pop	r28
    33e8:	0c 94 17 16 	jmp	0x2c2e	; 0x2c2e <prvAddCurrentTaskToDelayedList>

000033ec <vTaskPlaceOnEventListRestricted>:
    33ec:	1f 93       	push	r17
    33ee:	cf 93       	push	r28
    33f0:	df 93       	push	r29
    33f2:	eb 01       	movw	r28, r22
    33f4:	14 2f       	mov	r17, r20
    33f6:	60 91 7b 05 	lds	r22, 0x057B	; 0x80057b <pxCurrentTCB>
    33fa:	70 91 7c 05 	lds	r23, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    33fe:	64 5f       	subi	r22, 0xF4	; 244
    3400:	7f 4f       	sbci	r23, 0xFF	; 255
    3402:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <vListInsertEnd>
    3406:	11 23       	and	r17, r17
    3408:	11 f0       	breq	.+4      	; 0x340e <vTaskPlaceOnEventListRestricted+0x22>
    340a:	cf ef       	ldi	r28, 0xFF	; 255
    340c:	df ef       	ldi	r29, 0xFF	; 255
    340e:	61 2f       	mov	r22, r17
    3410:	ce 01       	movw	r24, r28
    3412:	df 91       	pop	r29
    3414:	cf 91       	pop	r28
    3416:	1f 91       	pop	r17
    3418:	0c 94 17 16 	jmp	0x2c2e	; 0x2c2e <prvAddCurrentTaskToDelayedList>

0000341c <xTaskRemoveFromEventList>:
    341c:	0f 93       	push	r16
    341e:	1f 93       	push	r17
    3420:	cf 93       	push	r28
    3422:	df 93       	push	r29
    3424:	dc 01       	movw	r26, r24
    3426:	15 96       	adiw	r26, 0x05	; 5
    3428:	ed 91       	ld	r30, X+
    342a:	fc 91       	ld	r31, X
    342c:	16 97       	sbiw	r26, 0x06	; 6
    342e:	c6 81       	ldd	r28, Z+6	; 0x06
    3430:	d7 81       	ldd	r29, Z+7	; 0x07
    3432:	8e 01       	movw	r16, r28
    3434:	04 5f       	subi	r16, 0xF4	; 244
    3436:	1f 4f       	sbci	r17, 0xFF	; 255
    3438:	c8 01       	movw	r24, r16
    343a:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    343e:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <uxSchedulerSuspended>
    3442:	81 11       	cpse	r24, r1
    3444:	14 c0       	rjmp	.+40     	; 0x346e <xTaskRemoveFromEventList+0x52>
    3446:	0a 50       	subi	r16, 0x0A	; 10
    3448:	11 09       	sbc	r17, r1
    344a:	c8 01       	movw	r24, r16
    344c:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    3450:	8e 89       	ldd	r24, Y+22	; 0x16
    3452:	90 91 21 05 	lds	r25, 0x0521	; 0x800521 <uxTopReadyPriority>
    3456:	98 17       	cp	r25, r24
    3458:	10 f4       	brcc	.+4      	; 0x345e <xTaskRemoveFromEventList+0x42>
    345a:	80 93 21 05 	sts	0x0521, r24	; 0x800521 <uxTopReadyPriority>
    345e:	b9 e0       	ldi	r27, 0x09	; 9
    3460:	8b 9f       	mul	r24, r27
    3462:	c0 01       	movw	r24, r0
    3464:	11 24       	eor	r1, r1
    3466:	b8 01       	movw	r22, r16
    3468:	89 5a       	subi	r24, 0xA9	; 169
    346a:	9a 4f       	sbci	r25, 0xFA	; 250
    346c:	03 c0       	rjmp	.+6      	; 0x3474 <xTaskRemoveFromEventList+0x58>
    346e:	b8 01       	movw	r22, r16
    3470:	88 e3       	ldi	r24, 0x38	; 56
    3472:	95 e0       	ldi	r25, 0x05	; 5
    3474:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <vListInsertEnd>
    3478:	e0 91 7b 05 	lds	r30, 0x057B	; 0x80057b <pxCurrentTCB>
    347c:	f0 91 7c 05 	lds	r31, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3480:	9e 89       	ldd	r25, Y+22	; 0x16
    3482:	86 89       	ldd	r24, Z+22	; 0x16
    3484:	89 17       	cp	r24, r25
    3486:	20 f4       	brcc	.+8      	; 0x3490 <xTaskRemoveFromEventList+0x74>
    3488:	81 e0       	ldi	r24, 0x01	; 1
    348a:	80 93 1e 05 	sts	0x051E, r24	; 0x80051e <xYieldPending>
    348e:	01 c0       	rjmp	.+2      	; 0x3492 <xTaskRemoveFromEventList+0x76>
    3490:	80 e0       	ldi	r24, 0x00	; 0
    3492:	df 91       	pop	r29
    3494:	cf 91       	pop	r28
    3496:	1f 91       	pop	r17
    3498:	0f 91       	pop	r16
    349a:	08 95       	ret

0000349c <vTaskInternalSetTimeOutState>:
    349c:	20 91 1d 05 	lds	r18, 0x051D	; 0x80051d <xNumOfOverflows>
    34a0:	fc 01       	movw	r30, r24
    34a2:	20 83       	st	Z, r18
    34a4:	20 91 22 05 	lds	r18, 0x0522	; 0x800522 <xTickCount>
    34a8:	30 91 23 05 	lds	r19, 0x0523	; 0x800523 <xTickCount+0x1>
    34ac:	32 83       	std	Z+2, r19	; 0x02
    34ae:	21 83       	std	Z+1, r18	; 0x01
    34b0:	08 95       	ret

000034b2 <xTaskCheckForTimeOut>:
    34b2:	cf 93       	push	r28
    34b4:	df 93       	push	r29
    34b6:	0f b6       	in	r0, 0x3f	; 63
    34b8:	f8 94       	cli
    34ba:	0f 92       	push	r0
    34bc:	40 91 22 05 	lds	r20, 0x0522	; 0x800522 <xTickCount>
    34c0:	50 91 23 05 	lds	r21, 0x0523	; 0x800523 <xTickCount+0x1>
    34c4:	db 01       	movw	r26, r22
    34c6:	2d 91       	ld	r18, X+
    34c8:	3c 91       	ld	r19, X
    34ca:	2f 3f       	cpi	r18, 0xFF	; 255
    34cc:	bf ef       	ldi	r27, 0xFF	; 255
    34ce:	3b 07       	cpc	r19, r27
    34d0:	d9 f0       	breq	.+54     	; 0x3508 <xTaskCheckForTimeOut+0x56>
    34d2:	ec 01       	movw	r28, r24
    34d4:	e9 81       	ldd	r30, Y+1	; 0x01
    34d6:	fa 81       	ldd	r31, Y+2	; 0x02
    34d8:	a0 91 1d 05 	lds	r26, 0x051D	; 0x80051d <xNumOfOverflows>
    34dc:	b8 81       	ld	r27, Y
    34de:	ba 17       	cp	r27, r26
    34e0:	19 f0       	breq	.+6      	; 0x34e8 <xTaskCheckForTimeOut+0x36>
    34e2:	4e 17       	cp	r20, r30
    34e4:	5f 07       	cpc	r21, r31
    34e6:	90 f4       	brcc	.+36     	; 0x350c <xTaskCheckForTimeOut+0x5a>
    34e8:	4e 1b       	sub	r20, r30
    34ea:	5f 0b       	sbc	r21, r31
    34ec:	fb 01       	movw	r30, r22
    34ee:	42 17       	cp	r20, r18
    34f0:	53 07       	cpc	r21, r19
    34f2:	38 f4       	brcc	.+14     	; 0x3502 <xTaskCheckForTimeOut+0x50>
    34f4:	24 1b       	sub	r18, r20
    34f6:	35 0b       	sbc	r19, r21
    34f8:	31 83       	std	Z+1, r19	; 0x01
    34fa:	20 83       	st	Z, r18
    34fc:	0e 94 4e 1a 	call	0x349c	; 0x349c <vTaskInternalSetTimeOutState>
    3500:	03 c0       	rjmp	.+6      	; 0x3508 <xTaskCheckForTimeOut+0x56>
    3502:	11 82       	std	Z+1, r1	; 0x01
    3504:	10 82       	st	Z, r1
    3506:	02 c0       	rjmp	.+4      	; 0x350c <xTaskCheckForTimeOut+0x5a>
    3508:	80 e0       	ldi	r24, 0x00	; 0
    350a:	01 c0       	rjmp	.+2      	; 0x350e <xTaskCheckForTimeOut+0x5c>
    350c:	81 e0       	ldi	r24, 0x01	; 1
    350e:	0f 90       	pop	r0
    3510:	0f be       	out	0x3f, r0	; 63
    3512:	df 91       	pop	r29
    3514:	cf 91       	pop	r28
    3516:	08 95       	ret

00003518 <vTaskMissedYield>:
    3518:	81 e0       	ldi	r24, 0x01	; 1
    351a:	80 93 1e 05 	sts	0x051E, r24	; 0x80051e <xYieldPending>
    351e:	08 95       	ret

00003520 <xTaskGetSchedulerState>:
    3520:	80 91 20 05 	lds	r24, 0x0520	; 0x800520 <xSchedulerRunning>
    3524:	88 23       	and	r24, r24
    3526:	31 f0       	breq	.+12     	; 0x3534 <xTaskGetSchedulerState+0x14>
    3528:	80 91 17 05 	lds	r24, 0x0517	; 0x800517 <uxSchedulerSuspended>
    352c:	88 23       	and	r24, r24
    352e:	21 f0       	breq	.+8      	; 0x3538 <xTaskGetSchedulerState+0x18>
    3530:	80 e0       	ldi	r24, 0x00	; 0
    3532:	08 95       	ret
    3534:	81 e0       	ldi	r24, 0x01	; 1
    3536:	08 95       	ret
    3538:	82 e0       	ldi	r24, 0x02	; 2
    353a:	08 95       	ret

0000353c <xTaskPriorityDisinherit>:
    353c:	0f 93       	push	r16
    353e:	1f 93       	push	r17
    3540:	cf 93       	push	r28
    3542:	df 93       	push	r29
    3544:	fc 01       	movw	r30, r24
    3546:	89 2b       	or	r24, r25
    3548:	11 f4       	brne	.+4      	; 0x354e <xTaskPriorityDisinherit+0x12>
    354a:	80 e0       	ldi	r24, 0x00	; 0
    354c:	2c c0       	rjmp	.+88     	; 0x35a6 <xTaskPriorityDisinherit+0x6a>
    354e:	82 a1       	ldd	r24, Z+34	; 0x22
    3550:	81 50       	subi	r24, 0x01	; 1
    3552:	82 a3       	std	Z+34, r24	; 0x22
    3554:	26 89       	ldd	r18, Z+22	; 0x16
    3556:	91 a1       	ldd	r25, Z+33	; 0x21
    3558:	29 17       	cp	r18, r25
    355a:	b9 f3       	breq	.-18     	; 0x354a <xTaskPriorityDisinherit+0xe>
    355c:	81 11       	cpse	r24, r1
    355e:	f5 cf       	rjmp	.-22     	; 0x354a <xTaskPriorityDisinherit+0xe>
    3560:	ef 01       	movw	r28, r30
    3562:	8f 01       	movw	r16, r30
    3564:	0e 5f       	subi	r16, 0xFE	; 254
    3566:	1f 4f       	sbci	r17, 0xFF	; 255
    3568:	c8 01       	movw	r24, r16
    356a:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    356e:	89 a1       	ldd	r24, Y+33	; 0x21
    3570:	8e 8b       	std	Y+22, r24	; 0x16
    3572:	48 2f       	mov	r20, r24
    3574:	50 e0       	ldi	r21, 0x00	; 0
    3576:	24 e0       	ldi	r18, 0x04	; 4
    3578:	30 e0       	ldi	r19, 0x00	; 0
    357a:	24 1b       	sub	r18, r20
    357c:	35 0b       	sbc	r19, r21
    357e:	3d 87       	std	Y+13, r19	; 0x0d
    3580:	2c 87       	std	Y+12, r18	; 0x0c
    3582:	90 91 21 05 	lds	r25, 0x0521	; 0x800521 <uxTopReadyPriority>
    3586:	98 17       	cp	r25, r24
    3588:	10 f4       	brcc	.+4      	; 0x358e <xTaskPriorityDisinherit+0x52>
    358a:	80 93 21 05 	sts	0x0521, r24	; 0x800521 <uxTopReadyPriority>
    358e:	29 e0       	ldi	r18, 0x09	; 9
    3590:	24 9f       	mul	r18, r20
    3592:	c0 01       	movw	r24, r0
    3594:	25 9f       	mul	r18, r21
    3596:	90 0d       	add	r25, r0
    3598:	11 24       	eor	r1, r1
    359a:	b8 01       	movw	r22, r16
    359c:	89 5a       	subi	r24, 0xA9	; 169
    359e:	9a 4f       	sbci	r25, 0xFA	; 250
    35a0:	0e 94 b3 1d 	call	0x3b66	; 0x3b66 <vListInsertEnd>
    35a4:	81 e0       	ldi	r24, 0x01	; 1
    35a6:	df 91       	pop	r29
    35a8:	cf 91       	pop	r28
    35aa:	1f 91       	pop	r17
    35ac:	0f 91       	pop	r16
    35ae:	08 95       	ret

000035b0 <prvCheckForValidListAndQueue>:
    35b0:	0f b6       	in	r0, 0x3f	; 63
    35b2:	f8 94       	cli
    35b4:	0f 92       	push	r0
    35b6:	80 91 81 05 	lds	r24, 0x0581	; 0x800581 <xTimerQueue>
    35ba:	90 91 82 05 	lds	r25, 0x0582	; 0x800582 <xTimerQueue+0x1>
    35be:	89 2b       	or	r24, r25
    35c0:	e9 f4       	brne	.+58     	; 0x35fc <prvCheckForValidListAndQueue+0x4c>
    35c2:	80 e9       	ldi	r24, 0x90	; 144
    35c4:	95 e0       	ldi	r25, 0x05	; 5
    35c6:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    35ca:	87 e8       	ldi	r24, 0x87	; 135
    35cc:	95 e0       	ldi	r25, 0x05	; 5
    35ce:	0e 94 a1 1d 	call	0x3b42	; 0x3b42 <vListInitialise>
    35d2:	80 e9       	ldi	r24, 0x90	; 144
    35d4:	95 e0       	ldi	r25, 0x05	; 5
    35d6:	90 93 86 05 	sts	0x0586, r25	; 0x800586 <pxCurrentTimerList+0x1>
    35da:	80 93 85 05 	sts	0x0585, r24	; 0x800585 <pxCurrentTimerList>
    35de:	87 e8       	ldi	r24, 0x87	; 135
    35e0:	95 e0       	ldi	r25, 0x05	; 5
    35e2:	90 93 84 05 	sts	0x0584, r25	; 0x800584 <pxOverflowTimerList+0x1>
    35e6:	80 93 83 05 	sts	0x0583, r24	; 0x800583 <pxOverflowTimerList>
    35ea:	40 e0       	ldi	r20, 0x00	; 0
    35ec:	65 e0       	ldi	r22, 0x05	; 5
    35ee:	8a e0       	ldi	r24, 0x0A	; 10
    35f0:	0e 94 3e 14 	call	0x287c	; 0x287c <xQueueGenericCreate>
    35f4:	90 93 82 05 	sts	0x0582, r25	; 0x800582 <xTimerQueue+0x1>
    35f8:	80 93 81 05 	sts	0x0581, r24	; 0x800581 <xTimerQueue>
    35fc:	0f 90       	pop	r0
    35fe:	0f be       	out	0x3f, r0	; 63
    3600:	08 95       	ret

00003602 <prvInsertTimerInActiveList>:
    3602:	fc 01       	movw	r30, r24
    3604:	73 83       	std	Z+3, r23	; 0x03
    3606:	62 83       	std	Z+2, r22	; 0x02
    3608:	91 87       	std	Z+9, r25	; 0x09
    360a:	80 87       	std	Z+8, r24	; 0x08
    360c:	46 17       	cp	r20, r22
    360e:	57 07       	cpc	r21, r23
    3610:	78 f0       	brcs	.+30     	; 0x3630 <prvInsertTimerInActiveList+0x2e>
    3612:	42 1b       	sub	r20, r18
    3614:	53 0b       	sbc	r21, r19
    3616:	84 85       	ldd	r24, Z+12	; 0x0c
    3618:	95 85       	ldd	r25, Z+13	; 0x0d
    361a:	48 17       	cp	r20, r24
    361c:	59 07       	cpc	r21, r25
    361e:	c8 f4       	brcc	.+50     	; 0x3652 <prvInsertTimerInActiveList+0x50>
    3620:	bf 01       	movw	r22, r30
    3622:	6e 5f       	subi	r22, 0xFE	; 254
    3624:	7f 4f       	sbci	r23, 0xFF	; 255
    3626:	80 91 83 05 	lds	r24, 0x0583	; 0x800583 <pxOverflowTimerList>
    362a:	90 91 84 05 	lds	r25, 0x0584	; 0x800584 <pxOverflowTimerList+0x1>
    362e:	0d c0       	rjmp	.+26     	; 0x364a <prvInsertTimerInActiveList+0x48>
    3630:	42 17       	cp	r20, r18
    3632:	53 07       	cpc	r21, r19
    3634:	18 f4       	brcc	.+6      	; 0x363c <prvInsertTimerInActiveList+0x3a>
    3636:	62 17       	cp	r22, r18
    3638:	73 07       	cpc	r23, r19
    363a:	58 f4       	brcc	.+22     	; 0x3652 <prvInsertTimerInActiveList+0x50>
    363c:	bf 01       	movw	r22, r30
    363e:	6e 5f       	subi	r22, 0xFE	; 254
    3640:	7f 4f       	sbci	r23, 0xFF	; 255
    3642:	80 91 85 05 	lds	r24, 0x0585	; 0x800585 <pxCurrentTimerList>
    3646:	90 91 86 05 	lds	r25, 0x0586	; 0x800586 <pxCurrentTimerList+0x1>
    364a:	0e 94 d4 1d 	call	0x3ba8	; 0x3ba8 <vListInsert>
    364e:	80 e0       	ldi	r24, 0x00	; 0
    3650:	08 95       	ret
    3652:	81 e0       	ldi	r24, 0x01	; 1
    3654:	08 95       	ret

00003656 <xTimerCreateTimerTask>:
    3656:	ef 92       	push	r14
    3658:	ff 92       	push	r15
    365a:	0f 93       	push	r16
    365c:	0e 94 d8 1a 	call	0x35b0	; 0x35b0 <prvCheckForValidListAndQueue>
    3660:	80 91 81 05 	lds	r24, 0x0581	; 0x800581 <xTimerQueue>
    3664:	90 91 82 05 	lds	r25, 0x0582	; 0x800582 <xTimerQueue+0x1>
    3668:	89 2b       	or	r24, r25
    366a:	81 f0       	breq	.+32     	; 0x368c <xTimerCreateTimerTask+0x36>
    366c:	8f e7       	ldi	r24, 0x7F	; 127
    366e:	e8 2e       	mov	r14, r24
    3670:	85 e0       	ldi	r24, 0x05	; 5
    3672:	f8 2e       	mov	r15, r24
    3674:	03 e0       	ldi	r16, 0x03	; 3
    3676:	20 e0       	ldi	r18, 0x00	; 0
    3678:	30 e0       	ldi	r19, 0x00	; 0
    367a:	45 e5       	ldi	r20, 0x55	; 85
    367c:	50 e0       	ldi	r21, 0x00	; 0
    367e:	61 ed       	ldi	r22, 0xD1	; 209
    3680:	72 e0       	ldi	r23, 0x02	; 2
    3682:	8b ed       	ldi	r24, 0xDB	; 219
    3684:	9b e1       	ldi	r25, 0x1B	; 27
    3686:	0e 94 a1 16 	call	0x2d42	; 0x2d42 <xTaskCreate>
    368a:	01 c0       	rjmp	.+2      	; 0x368e <xTimerCreateTimerTask+0x38>
    368c:	80 e0       	ldi	r24, 0x00	; 0
    368e:	0f 91       	pop	r16
    3690:	ff 90       	pop	r15
    3692:	ef 90       	pop	r14
    3694:	08 95       	ret

00003696 <xTimerGenericCommand>:
    3696:	0f 93       	push	r16
    3698:	1f 93       	push	r17
    369a:	cf 93       	push	r28
    369c:	df 93       	push	r29
    369e:	00 d0       	rcall	.+0      	; 0x36a0 <xTimerGenericCommand+0xa>
    36a0:	00 d0       	rcall	.+0      	; 0x36a2 <xTimerGenericCommand+0xc>
    36a2:	1f 92       	push	r1
    36a4:	cd b7       	in	r28, 0x3d	; 61
    36a6:	de b7       	in	r29, 0x3e	; 62
    36a8:	a0 91 81 05 	lds	r26, 0x0581	; 0x800581 <xTimerQueue>
    36ac:	b0 91 82 05 	lds	r27, 0x0582	; 0x800582 <xTimerQueue+0x1>
    36b0:	10 97       	sbiw	r26, 0x00	; 0
    36b2:	29 f1       	breq	.+74     	; 0x36fe <xTimerGenericCommand+0x68>
    36b4:	f9 01       	movw	r30, r18
    36b6:	69 83       	std	Y+1, r22	; 0x01
    36b8:	5b 83       	std	Y+3, r21	; 0x03
    36ba:	4a 83       	std	Y+2, r20	; 0x02
    36bc:	9d 83       	std	Y+5, r25	; 0x05
    36be:	8c 83       	std	Y+4, r24	; 0x04
    36c0:	66 30       	cpi	r22, 0x06	; 6
    36c2:	a4 f4       	brge	.+40     	; 0x36ec <xTimerGenericCommand+0x56>
    36c4:	0e 94 90 1a 	call	0x3520	; 0x3520 <xTaskGetSchedulerState>
    36c8:	e0 91 81 05 	lds	r30, 0x0581	; 0x800581 <xTimerQueue>
    36cc:	f0 91 82 05 	lds	r31, 0x0582	; 0x800582 <xTimerQueue+0x1>
    36d0:	20 e0       	ldi	r18, 0x00	; 0
    36d2:	82 30       	cpi	r24, 0x02	; 2
    36d4:	11 f4       	brne	.+4      	; 0x36da <xTimerGenericCommand+0x44>
    36d6:	a8 01       	movw	r20, r16
    36d8:	02 c0       	rjmp	.+4      	; 0x36de <xTimerGenericCommand+0x48>
    36da:	40 e0       	ldi	r20, 0x00	; 0
    36dc:	50 e0       	ldi	r21, 0x00	; 0
    36de:	be 01       	movw	r22, r28
    36e0:	6f 5f       	subi	r22, 0xFF	; 255
    36e2:	7f 4f       	sbci	r23, 0xFF	; 255
    36e4:	cf 01       	movw	r24, r30
    36e6:	0e 94 66 14 	call	0x28cc	; 0x28cc <xQueueGenericSend>
    36ea:	0a c0       	rjmp	.+20     	; 0x3700 <xTimerGenericCommand+0x6a>
    36ec:	20 e0       	ldi	r18, 0x00	; 0
    36ee:	af 01       	movw	r20, r30
    36f0:	be 01       	movw	r22, r28
    36f2:	6f 5f       	subi	r22, 0xFF	; 255
    36f4:	7f 4f       	sbci	r23, 0xFF	; 255
    36f6:	cd 01       	movw	r24, r26
    36f8:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <xQueueGenericSendFromISR>
    36fc:	01 c0       	rjmp	.+2      	; 0x3700 <xTimerGenericCommand+0x6a>
    36fe:	80 e0       	ldi	r24, 0x00	; 0
    3700:	0f 90       	pop	r0
    3702:	0f 90       	pop	r0
    3704:	0f 90       	pop	r0
    3706:	0f 90       	pop	r0
    3708:	0f 90       	pop	r0
    370a:	df 91       	pop	r29
    370c:	cf 91       	pop	r28
    370e:	1f 91       	pop	r17
    3710:	0f 91       	pop	r16
    3712:	08 95       	ret

00003714 <prvSwitchTimerLists>:
    3714:	ef 92       	push	r14
    3716:	ff 92       	push	r15
    3718:	0f 93       	push	r16
    371a:	1f 93       	push	r17
    371c:	cf 93       	push	r28
    371e:	df 93       	push	r29
    3720:	e0 91 85 05 	lds	r30, 0x0585	; 0x800585 <pxCurrentTimerList>
    3724:	f0 91 86 05 	lds	r31, 0x0586	; 0x800586 <pxCurrentTimerList+0x1>
    3728:	80 81       	ld	r24, Z
    372a:	88 23       	and	r24, r24
    372c:	89 f1       	breq	.+98     	; 0x3790 <prvSwitchTimerLists+0x7c>
    372e:	05 80       	ldd	r0, Z+5	; 0x05
    3730:	f6 81       	ldd	r31, Z+6	; 0x06
    3732:	e0 2d       	mov	r30, r0
    3734:	e0 80       	ld	r14, Z
    3736:	f1 80       	ldd	r15, Z+1	; 0x01
    3738:	c6 81       	ldd	r28, Z+6	; 0x06
    373a:	d7 81       	ldd	r29, Z+7	; 0x07
    373c:	8e 01       	movw	r16, r28
    373e:	0e 5f       	subi	r16, 0xFE	; 254
    3740:	1f 4f       	sbci	r17, 0xFF	; 255
    3742:	c8 01       	movw	r24, r16
    3744:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    3748:	e8 89       	ldd	r30, Y+16	; 0x10
    374a:	f9 89       	ldd	r31, Y+17	; 0x11
    374c:	ce 01       	movw	r24, r28
    374e:	09 95       	icall
    3750:	8a 89       	ldd	r24, Y+18	; 0x12
    3752:	82 ff       	sbrs	r24, 2
    3754:	e5 cf       	rjmp	.-54     	; 0x3720 <prvSwitchTimerLists+0xc>
    3756:	8c 85       	ldd	r24, Y+12	; 0x0c
    3758:	9d 85       	ldd	r25, Y+13	; 0x0d
    375a:	8e 0d       	add	r24, r14
    375c:	9f 1d       	adc	r25, r15
    375e:	e8 16       	cp	r14, r24
    3760:	f9 06       	cpc	r15, r25
    3762:	60 f4       	brcc	.+24     	; 0x377c <prvSwitchTimerLists+0x68>
    3764:	9b 83       	std	Y+3, r25	; 0x03
    3766:	8a 83       	std	Y+2, r24	; 0x02
    3768:	d9 87       	std	Y+9, r29	; 0x09
    376a:	c8 87       	std	Y+8, r28	; 0x08
    376c:	b8 01       	movw	r22, r16
    376e:	80 91 85 05 	lds	r24, 0x0585	; 0x800585 <pxCurrentTimerList>
    3772:	90 91 86 05 	lds	r25, 0x0586	; 0x800586 <pxCurrentTimerList+0x1>
    3776:	0e 94 d4 1d 	call	0x3ba8	; 0x3ba8 <vListInsert>
    377a:	d2 cf       	rjmp	.-92     	; 0x3720 <prvSwitchTimerLists+0xc>
    377c:	00 e0       	ldi	r16, 0x00	; 0
    377e:	10 e0       	ldi	r17, 0x00	; 0
    3780:	20 e0       	ldi	r18, 0x00	; 0
    3782:	30 e0       	ldi	r19, 0x00	; 0
    3784:	a7 01       	movw	r20, r14
    3786:	60 e0       	ldi	r22, 0x00	; 0
    3788:	ce 01       	movw	r24, r28
    378a:	0e 94 4b 1b 	call	0x3696	; 0x3696 <xTimerGenericCommand>
    378e:	c8 cf       	rjmp	.-112    	; 0x3720 <prvSwitchTimerLists+0xc>
    3790:	80 91 83 05 	lds	r24, 0x0583	; 0x800583 <pxOverflowTimerList>
    3794:	90 91 84 05 	lds	r25, 0x0584	; 0x800584 <pxOverflowTimerList+0x1>
    3798:	90 93 86 05 	sts	0x0586, r25	; 0x800586 <pxCurrentTimerList+0x1>
    379c:	80 93 85 05 	sts	0x0585, r24	; 0x800585 <pxCurrentTimerList>
    37a0:	f0 93 84 05 	sts	0x0584, r31	; 0x800584 <pxOverflowTimerList+0x1>
    37a4:	e0 93 83 05 	sts	0x0583, r30	; 0x800583 <pxOverflowTimerList>
    37a8:	df 91       	pop	r29
    37aa:	cf 91       	pop	r28
    37ac:	1f 91       	pop	r17
    37ae:	0f 91       	pop	r16
    37b0:	ff 90       	pop	r15
    37b2:	ef 90       	pop	r14
    37b4:	08 95       	ret

000037b6 <prvTimerTask>:
    37b6:	cf 93       	push	r28
    37b8:	df 93       	push	r29
    37ba:	00 d0       	rcall	.+0      	; 0x37bc <prvTimerTask+0x6>
    37bc:	00 d0       	rcall	.+0      	; 0x37be <prvTimerTask+0x8>
    37be:	1f 92       	push	r1
    37c0:	cd b7       	in	r28, 0x3d	; 61
    37c2:	de b7       	in	r29, 0x3e	; 62
    37c4:	e0 91 85 05 	lds	r30, 0x0585	; 0x800585 <pxCurrentTimerList>
    37c8:	f0 91 86 05 	lds	r31, 0x0586	; 0x800586 <pxCurrentTimerList+0x1>
    37cc:	d0 80       	ld	r13, Z
    37ce:	dd 20       	and	r13, r13
    37d0:	31 f0       	breq	.+12     	; 0x37de <prvTimerTask+0x28>
    37d2:	05 80       	ldd	r0, Z+5	; 0x05
    37d4:	f6 81       	ldd	r31, Z+6	; 0x06
    37d6:	e0 2d       	mov	r30, r0
    37d8:	e0 80       	ld	r14, Z
    37da:	f1 80       	ldd	r15, Z+1	; 0x01
    37dc:	02 c0       	rjmp	.+4      	; 0x37e2 <prvTimerTask+0x2c>
    37de:	e1 2c       	mov	r14, r1
    37e0:	f1 2c       	mov	r15, r1
    37e2:	0e 94 24 18 	call	0x3048	; 0x3048 <vTaskSuspendAll>
    37e6:	0e 94 2a 18 	call	0x3054	; 0x3054 <xTaskGetTickCount>
    37ea:	8c 01       	movw	r16, r24
    37ec:	80 91 7d 05 	lds	r24, 0x057D	; 0x80057d <xLastTime.2412>
    37f0:	90 91 7e 05 	lds	r25, 0x057E	; 0x80057e <xLastTime.2412+0x1>
    37f4:	08 17       	cp	r16, r24
    37f6:	19 07       	cpc	r17, r25
    37f8:	20 f4       	brcc	.+8      	; 0x3802 <prvTimerTask+0x4c>
    37fa:	0e 94 8a 1b 	call	0x3714	; 0x3714 <prvSwitchTimerLists>
    37fe:	81 e0       	ldi	r24, 0x01	; 1
    3800:	01 c0       	rjmp	.+2      	; 0x3804 <prvTimerTask+0x4e>
    3802:	80 e0       	ldi	r24, 0x00	; 0
    3804:	10 93 7e 05 	sts	0x057E, r17	; 0x80057e <xLastTime.2412+0x1>
    3808:	00 93 7d 05 	sts	0x057D, r16	; 0x80057d <xLastTime.2412>
    380c:	81 11       	cpse	r24, r1
    380e:	55 c0       	rjmp	.+170    	; 0x38ba <prvTimerTask+0x104>
    3810:	dd 20       	and	r13, r13
    3812:	d9 f1       	breq	.+118    	; 0x388a <prvTimerTask+0xd4>
    3814:	0e 15       	cp	r16, r14
    3816:	1f 05       	cpc	r17, r15
    3818:	08 f4       	brcc	.+2      	; 0x381c <prvTimerTask+0x66>
    381a:	3e c0       	rjmp	.+124    	; 0x3898 <prvTimerTask+0xe2>
    381c:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    3820:	e0 91 85 05 	lds	r30, 0x0585	; 0x800585 <pxCurrentTimerList>
    3824:	f0 91 86 05 	lds	r31, 0x0586	; 0x800586 <pxCurrentTimerList+0x1>
    3828:	05 80       	ldd	r0, Z+5	; 0x05
    382a:	f6 81       	ldd	r31, Z+6	; 0x06
    382c:	e0 2d       	mov	r30, r0
    382e:	c6 80       	ldd	r12, Z+6	; 0x06
    3830:	d7 80       	ldd	r13, Z+7	; 0x07
    3832:	c6 01       	movw	r24, r12
    3834:	02 96       	adiw	r24, 0x02	; 2
    3836:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    383a:	d6 01       	movw	r26, r12
    383c:	52 96       	adiw	r26, 0x12	; 18
    383e:	8c 91       	ld	r24, X
    3840:	52 97       	sbiw	r26, 0x12	; 18
    3842:	82 ff       	sbrs	r24, 2
    3844:	17 c0       	rjmp	.+46     	; 0x3874 <prvTimerTask+0xbe>
    3846:	1c 96       	adiw	r26, 0x0c	; 12
    3848:	6d 91       	ld	r22, X+
    384a:	7c 91       	ld	r23, X
    384c:	1d 97       	sbiw	r26, 0x0d	; 13
    384e:	6e 0d       	add	r22, r14
    3850:	7f 1d       	adc	r23, r15
    3852:	97 01       	movw	r18, r14
    3854:	a8 01       	movw	r20, r16
    3856:	c6 01       	movw	r24, r12
    3858:	0e 94 01 1b 	call	0x3602	; 0x3602 <prvInsertTimerInActiveList>
    385c:	88 23       	and	r24, r24
    385e:	69 f0       	breq	.+26     	; 0x387a <prvTimerTask+0xc4>
    3860:	00 e0       	ldi	r16, 0x00	; 0
    3862:	10 e0       	ldi	r17, 0x00	; 0
    3864:	20 e0       	ldi	r18, 0x00	; 0
    3866:	30 e0       	ldi	r19, 0x00	; 0
    3868:	a7 01       	movw	r20, r14
    386a:	60 e0       	ldi	r22, 0x00	; 0
    386c:	c6 01       	movw	r24, r12
    386e:	0e 94 4b 1b 	call	0x3696	; 0x3696 <xTimerGenericCommand>
    3872:	03 c0       	rjmp	.+6      	; 0x387a <prvTimerTask+0xc4>
    3874:	8e 7f       	andi	r24, 0xFE	; 254
    3876:	f6 01       	movw	r30, r12
    3878:	82 8b       	std	Z+18, r24	; 0x12
    387a:	d6 01       	movw	r26, r12
    387c:	50 96       	adiw	r26, 0x10	; 16
    387e:	ed 91       	ld	r30, X+
    3880:	fc 91       	ld	r31, X
    3882:	51 97       	sbiw	r26, 0x11	; 17
    3884:	c6 01       	movw	r24, r12
    3886:	09 95       	icall
    3888:	1e c0       	rjmp	.+60     	; 0x38c6 <prvTimerTask+0x110>
    388a:	e0 91 83 05 	lds	r30, 0x0583	; 0x800583 <pxOverflowTimerList>
    388e:	f0 91 84 05 	lds	r31, 0x0584	; 0x800584 <pxOverflowTimerList+0x1>
    3892:	80 81       	ld	r24, Z
    3894:	41 e0       	ldi	r20, 0x01	; 1
    3896:	81 11       	cpse	r24, r1
    3898:	40 e0       	ldi	r20, 0x00	; 0
    389a:	b7 01       	movw	r22, r14
    389c:	60 1b       	sub	r22, r16
    389e:	71 0b       	sbc	r23, r17
    38a0:	80 91 81 05 	lds	r24, 0x0581	; 0x800581 <xTimerQueue>
    38a4:	90 91 82 05 	lds	r25, 0x0582	; 0x800582 <xTimerQueue+0x1>
    38a8:	0e 94 e0 15 	call	0x2bc0	; 0x2bc0 <vQueueWaitForMessageRestricted>
    38ac:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    38b0:	81 11       	cpse	r24, r1
    38b2:	09 c0       	rjmp	.+18     	; 0x38c6 <prvTimerTask+0x110>
    38b4:	0e 94 d4 1e 	call	0x3da8	; 0x3da8 <vPortYield>
    38b8:	06 c0       	rjmp	.+12     	; 0x38c6 <prvTimerTask+0x110>
    38ba:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    38be:	03 c0       	rjmp	.+6      	; 0x38c6 <prvTimerTask+0x110>
    38c0:	89 81       	ldd	r24, Y+1	; 0x01
    38c2:	87 ff       	sbrs	r24, 7
    38c4:	0e c0       	rjmp	.+28     	; 0x38e2 <prvTimerTask+0x12c>
    38c6:	40 e0       	ldi	r20, 0x00	; 0
    38c8:	50 e0       	ldi	r21, 0x00	; 0
    38ca:	be 01       	movw	r22, r28
    38cc:	6f 5f       	subi	r22, 0xFF	; 255
    38ce:	7f 4f       	sbci	r23, 0xFF	; 255
    38d0:	80 91 81 05 	lds	r24, 0x0581	; 0x800581 <xTimerQueue>
    38d4:	90 91 82 05 	lds	r25, 0x0582	; 0x800582 <xTimerQueue+0x1>
    38d8:	0e 94 4e 15 	call	0x2a9c	; 0x2a9c <xQueueReceive>
    38dc:	81 11       	cpse	r24, r1
    38de:	f0 cf       	rjmp	.-32     	; 0x38c0 <prvTimerTask+0x10a>
    38e0:	71 cf       	rjmp	.-286    	; 0x37c4 <prvTimerTask+0xe>
    38e2:	ec 80       	ldd	r14, Y+4	; 0x04
    38e4:	fd 80       	ldd	r15, Y+5	; 0x05
    38e6:	f7 01       	movw	r30, r14
    38e8:	82 85       	ldd	r24, Z+10	; 0x0a
    38ea:	93 85       	ldd	r25, Z+11	; 0x0b
    38ec:	89 2b       	or	r24, r25
    38ee:	21 f0       	breq	.+8      	; 0x38f8 <prvTimerTask+0x142>
    38f0:	c7 01       	movw	r24, r14
    38f2:	02 96       	adiw	r24, 0x02	; 2
    38f4:	0e 94 0c 1e 	call	0x3c18	; 0x3c18 <uxListRemove>
    38f8:	0e 94 2a 18 	call	0x3054	; 0x3054 <xTaskGetTickCount>
    38fc:	6c 01       	movw	r12, r24
    38fe:	80 91 7d 05 	lds	r24, 0x057D	; 0x80057d <xLastTime.2412>
    3902:	90 91 7e 05 	lds	r25, 0x057E	; 0x80057e <xLastTime.2412+0x1>
    3906:	c8 16       	cp	r12, r24
    3908:	d9 06       	cpc	r13, r25
    390a:	10 f4       	brcc	.+4      	; 0x3910 <prvTimerTask+0x15a>
    390c:	0e 94 8a 1b 	call	0x3714	; 0x3714 <prvSwitchTimerLists>
    3910:	d0 92 7e 05 	sts	0x057E, r13	; 0x80057e <xLastTime.2412+0x1>
    3914:	c0 92 7d 05 	sts	0x057D, r12	; 0x80057d <xLastTime.2412>
    3918:	e9 81       	ldd	r30, Y+1	; 0x01
    391a:	0e 2e       	mov	r0, r30
    391c:	00 0c       	add	r0, r0
    391e:	ff 0b       	sbc	r31, r31
    3920:	ea 30       	cpi	r30, 0x0A	; 10
    3922:	f1 05       	cpc	r31, r1
    3924:	80 f6       	brcc	.-96     	; 0x38c6 <prvTimerTask+0x110>
    3926:	ec 5c       	subi	r30, 0xCC	; 204
    3928:	ff 4f       	sbci	r31, 0xFF	; 255
    392a:	d7 01       	movw	r26, r14
    392c:	52 96       	adiw	r26, 0x12	; 18
    392e:	8c 91       	ld	r24, X
    3930:	0c 94 e7 1f 	jmp	0x3fce	; 0x3fce <__tablejump2__>
    3934:	81 60       	ori	r24, 0x01	; 1
    3936:	f7 01       	movw	r30, r14
    3938:	82 8b       	std	Z+18, r24	; 0x12
    393a:	2a 81       	ldd	r18, Y+2	; 0x02
    393c:	3b 81       	ldd	r19, Y+3	; 0x03
    393e:	64 85       	ldd	r22, Z+12	; 0x0c
    3940:	75 85       	ldd	r23, Z+13	; 0x0d
    3942:	62 0f       	add	r22, r18
    3944:	73 1f       	adc	r23, r19
    3946:	a6 01       	movw	r20, r12
    3948:	c7 01       	movw	r24, r14
    394a:	0e 94 01 1b 	call	0x3602	; 0x3602 <prvInsertTimerInActiveList>
    394e:	88 23       	and	r24, r24
    3950:	09 f4       	brne	.+2      	; 0x3954 <prvTimerTask+0x19e>
    3952:	b9 cf       	rjmp	.-142    	; 0x38c6 <prvTimerTask+0x110>
    3954:	d7 01       	movw	r26, r14
    3956:	50 96       	adiw	r26, 0x10	; 16
    3958:	ed 91       	ld	r30, X+
    395a:	fc 91       	ld	r31, X
    395c:	51 97       	sbiw	r26, 0x11	; 17
    395e:	c7 01       	movw	r24, r14
    3960:	09 95       	icall
    3962:	f7 01       	movw	r30, r14
    3964:	82 89       	ldd	r24, Z+18	; 0x12
    3966:	82 ff       	sbrs	r24, 2
    3968:	ae cf       	rjmp	.-164    	; 0x38c6 <prvTimerTask+0x110>
    396a:	4a 81       	ldd	r20, Y+2	; 0x02
    396c:	5b 81       	ldd	r21, Y+3	; 0x03
    396e:	84 85       	ldd	r24, Z+12	; 0x0c
    3970:	95 85       	ldd	r25, Z+13	; 0x0d
    3972:	48 0f       	add	r20, r24
    3974:	59 1f       	adc	r21, r25
    3976:	00 e0       	ldi	r16, 0x00	; 0
    3978:	10 e0       	ldi	r17, 0x00	; 0
    397a:	20 e0       	ldi	r18, 0x00	; 0
    397c:	30 e0       	ldi	r19, 0x00	; 0
    397e:	60 e0       	ldi	r22, 0x00	; 0
    3980:	c7 01       	movw	r24, r14
    3982:	0e 94 4b 1b 	call	0x3696	; 0x3696 <xTimerGenericCommand>
    3986:	9f cf       	rjmp	.-194    	; 0x38c6 <prvTimerTask+0x110>
    3988:	81 60       	ori	r24, 0x01	; 1
    398a:	f7 01       	movw	r30, r14
    398c:	82 8b       	std	Z+18, r24	; 0x12
    398e:	6a 81       	ldd	r22, Y+2	; 0x02
    3990:	7b 81       	ldd	r23, Y+3	; 0x03
    3992:	75 87       	std	Z+13, r23	; 0x0d
    3994:	64 87       	std	Z+12, r22	; 0x0c
    3996:	6c 0d       	add	r22, r12
    3998:	7d 1d       	adc	r23, r13
    399a:	96 01       	movw	r18, r12
    399c:	a6 01       	movw	r20, r12
    399e:	c7 01       	movw	r24, r14
    39a0:	0e 94 01 1b 	call	0x3602	; 0x3602 <prvInsertTimerInActiveList>
    39a4:	90 cf       	rjmp	.-224    	; 0x38c6 <prvTimerTask+0x110>
    39a6:	81 fd       	sbrc	r24, 1
    39a8:	04 c0       	rjmp	.+8      	; 0x39b2 <prvTimerTask+0x1fc>
    39aa:	c7 01       	movw	r24, r14
    39ac:	0e 94 90 1d 	call	0x3b20	; 0x3b20 <vPortFree>
    39b0:	8a cf       	rjmp	.-236    	; 0x38c6 <prvTimerTask+0x110>
    39b2:	8e 7f       	andi	r24, 0xFE	; 254
    39b4:	d7 01       	movw	r26, r14
    39b6:	52 96       	adiw	r26, 0x12	; 18
    39b8:	8c 93       	st	X, r24
    39ba:	85 cf       	rjmp	.-246    	; 0x38c6 <prvTimerTask+0x110>

000039bc <initVariant>:
    39bc:	0e 94 77 04 	call	0x8ee	; 0x8ee <setup>
    39c0:	0e 94 f6 17 	call	0x2fec	; 0x2fec <vTaskStartScheduler>
    39c4:	08 95       	ret

000039c6 <vApplicationIdleHook>:
    39c6:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <loop>
    39ca:	89 eb       	ldi	r24, 0xB9	; 185
    39cc:	9d e0       	ldi	r25, 0x0D	; 13
    39ce:	89 2b       	or	r24, r25
    39d0:	11 f0       	breq	.+4      	; 0x39d6 <vApplicationIdleHook+0x10>
    39d2:	0c 94 b9 0d 	jmp	0x1b72	; 0x1b72 <_Z14serialEventRunv>
    39d6:	08 95       	ret

000039d8 <vApplicationMallocFailedHook>:
    39d8:	25 9a       	sbi	0x04, 5	; 4
    39da:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    39dc:	2f ef       	ldi	r18, 0xFF	; 255
    39de:	80 e7       	ldi	r24, 0x70	; 112
    39e0:	92 e0       	ldi	r25, 0x02	; 2
    39e2:	21 50       	subi	r18, 0x01	; 1
    39e4:	80 40       	sbci	r24, 0x00	; 0
    39e6:	90 40       	sbci	r25, 0x00	; 0
    39e8:	e1 f7       	brne	.-8      	; 0x39e2 <vApplicationMallocFailedHook+0xa>
    39ea:	00 c0       	rjmp	.+0      	; 0x39ec <vApplicationMallocFailedHook+0x14>
    39ec:	00 00       	nop
    39ee:	1d 9a       	sbi	0x03, 5	; 3
    39f0:	f5 cf       	rjmp	.-22     	; 0x39dc <vApplicationMallocFailedHook+0x4>

000039f2 <vApplicationStackOverflowHook>:
    39f2:	25 9a       	sbi	0x04, 5	; 4
    39f4:	2d 9a       	sbi	0x05, 5	; 5
    39f6:	2f ef       	ldi	r18, 0xFF	; 255
    39f8:	87 ea       	ldi	r24, 0xA7	; 167
    39fa:	91 e6       	ldi	r25, 0x61	; 97
    39fc:	21 50       	subi	r18, 0x01	; 1
    39fe:	80 40       	sbci	r24, 0x00	; 0
    3a00:	90 40       	sbci	r25, 0x00	; 0
    3a02:	e1 f7       	brne	.-8      	; 0x39fc <vApplicationStackOverflowHook+0xa>
    3a04:	00 c0       	rjmp	.+0      	; 0x3a06 <vApplicationStackOverflowHook+0x14>
    3a06:	00 00       	nop
    3a08:	1d 9a       	sbi	0x03, 5	; 3
    3a0a:	f5 cf       	rjmp	.-22     	; 0x39f6 <vApplicationStackOverflowHook+0x4>

00003a0c <__vector_7>:
    3a0c:	1f 92       	push	r1
    3a0e:	0f 92       	push	r0
    3a10:	0f b6       	in	r0, 0x3f	; 63
    3a12:	0f 92       	push	r0
    3a14:	11 24       	eor	r1, r1
    3a16:	0f 93       	push	r16
    3a18:	1f 93       	push	r17
    3a1a:	2f 93       	push	r18
    3a1c:	3f 93       	push	r19
    3a1e:	4f 93       	push	r20
    3a20:	5f 93       	push	r21
    3a22:	6f 93       	push	r22
    3a24:	7f 93       	push	r23
    3a26:	8f 93       	push	r24
    3a28:	9f 93       	push	r25
    3a2a:	af 93       	push	r26
    3a2c:	bf 93       	push	r27
    3a2e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    3a32:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    3a36:	b0 9b       	sbis	0x16, 0	; 22
    3a38:	0b c0       	rjmp	.+22     	; 0x3a50 <__vector_7+0x44>
    3a3a:	81 e0       	ldi	r24, 0x01	; 1
    3a3c:	86 bb       	out	0x16, r24	; 22
    3a3e:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <_ZL9count_msw>
    3a42:	90 91 a7 05 	lds	r25, 0x05A7	; 0x8005a7 <_ZL9count_msw+0x1>
    3a46:	01 96       	adiw	r24, 0x01	; 1
    3a48:	90 93 a7 05 	sts	0x05A7, r25	; 0x8005a7 <_ZL9count_msw+0x1>
    3a4c:	80 93 a6 05 	sts	0x05A6, r24	; 0x8005a6 <_ZL9count_msw>
    3a50:	80 91 99 05 	lds	r24, 0x0599	; 0x800599 <_ZL10gate_index>
    3a54:	90 91 9a 05 	lds	r25, 0x059A	; 0x80059a <_ZL10gate_index+0x1>
    3a58:	01 96       	adiw	r24, 0x01	; 1
    3a5a:	40 91 9b 05 	lds	r20, 0x059B	; 0x80059b <_ZL11gate_length>
    3a5e:	50 91 9c 05 	lds	r21, 0x059C	; 0x80059c <_ZL11gate_length+0x1>
    3a62:	84 17       	cp	r24, r20
    3a64:	95 07       	cpc	r25, r21
    3a66:	98 f1       	brcs	.+102    	; 0x3ace <__vector_7+0xc2>
    3a68:	10 92 9a 05 	sts	0x059A, r1	; 0x80059a <_ZL10gate_index+0x1>
    3a6c:	10 92 99 05 	sts	0x0599, r1	; 0x800599 <_ZL10gate_index>
    3a70:	80 91 a6 05 	lds	r24, 0x05A6	; 0x8005a6 <_ZL9count_msw>
    3a74:	90 91 a7 05 	lds	r25, 0x05A7	; 0x8005a7 <_ZL9count_msw+0x1>
    3a78:	a0 e0       	ldi	r26, 0x00	; 0
    3a7a:	b0 e0       	ldi	r27, 0x00	; 0
    3a7c:	dc 01       	movw	r26, r24
    3a7e:	99 27       	eor	r25, r25
    3a80:	88 27       	eor	r24, r24
    3a82:	82 0f       	add	r24, r18
    3a84:	93 1f       	adc	r25, r19
    3a86:	a1 1d       	adc	r26, r1
    3a88:	b1 1d       	adc	r27, r1
    3a8a:	40 91 a2 05 	lds	r20, 0x05A2	; 0x8005a2 <_ZL10count_prev>
    3a8e:	50 91 a3 05 	lds	r21, 0x05A3	; 0x8005a3 <_ZL10count_prev+0x1>
    3a92:	60 91 a4 05 	lds	r22, 0x05A4	; 0x8005a4 <_ZL10count_prev+0x2>
    3a96:	70 91 a5 05 	lds	r23, 0x05A5	; 0x8005a5 <_ZL10count_prev+0x3>
    3a9a:	8c 01       	movw	r16, r24
    3a9c:	9d 01       	movw	r18, r26
    3a9e:	04 1b       	sub	r16, r20
    3aa0:	15 0b       	sbc	r17, r21
    3aa2:	26 0b       	sbc	r18, r22
    3aa4:	37 0b       	sbc	r19, r23
    3aa6:	00 93 9e 05 	sts	0x059E, r16	; 0x80059e <_ZL12count_output>
    3aaa:	10 93 9f 05 	sts	0x059F, r17	; 0x80059f <_ZL12count_output+0x1>
    3aae:	20 93 a0 05 	sts	0x05A0, r18	; 0x8005a0 <_ZL12count_output+0x2>
    3ab2:	30 93 a1 05 	sts	0x05A1, r19	; 0x8005a1 <_ZL12count_output+0x3>
    3ab6:	80 93 a2 05 	sts	0x05A2, r24	; 0x8005a2 <_ZL10count_prev>
    3aba:	90 93 a3 05 	sts	0x05A3, r25	; 0x8005a3 <_ZL10count_prev+0x1>
    3abe:	a0 93 a4 05 	sts	0x05A4, r26	; 0x8005a4 <_ZL10count_prev+0x2>
    3ac2:	b0 93 a5 05 	sts	0x05A5, r27	; 0x8005a5 <_ZL10count_prev+0x3>
    3ac6:	81 e0       	ldi	r24, 0x01	; 1
    3ac8:	80 93 9d 05 	sts	0x059D, r24	; 0x80059d <_ZL11count_ready>
    3acc:	04 c0       	rjmp	.+8      	; 0x3ad6 <__vector_7+0xca>
    3ace:	90 93 9a 05 	sts	0x059A, r25	; 0x80059a <_ZL10gate_index+0x1>
    3ad2:	80 93 99 05 	sts	0x0599, r24	; 0x800599 <_ZL10gate_index>
    3ad6:	bf 91       	pop	r27
    3ad8:	af 91       	pop	r26
    3ada:	9f 91       	pop	r25
    3adc:	8f 91       	pop	r24
    3ade:	7f 91       	pop	r23
    3ae0:	6f 91       	pop	r22
    3ae2:	5f 91       	pop	r21
    3ae4:	4f 91       	pop	r20
    3ae6:	3f 91       	pop	r19
    3ae8:	2f 91       	pop	r18
    3aea:	1f 91       	pop	r17
    3aec:	0f 91       	pop	r16
    3aee:	0f 90       	pop	r0
    3af0:	0f be       	out	0x3f, r0	; 63
    3af2:	0f 90       	pop	r0
    3af4:	1f 90       	pop	r1
    3af6:	18 95       	reti

00003af8 <yield>:
    3af8:	08 95       	ret

00003afa <pvPortMalloc>:
    3afa:	cf 93       	push	r28
    3afc:	df 93       	push	r29
    3afe:	ec 01       	movw	r28, r24
    3b00:	0e 94 24 18 	call	0x3048	; 0x3048 <vTaskSuspendAll>
    3b04:	ce 01       	movw	r24, r28
    3b06:	0e 94 01 20 	call	0x4002	; 0x4002 <malloc>
    3b0a:	ec 01       	movw	r28, r24
    3b0c:	0e 94 e0 18 	call	0x31c0	; 0x31c0 <xTaskResumeAll>
    3b10:	20 97       	sbiw	r28, 0x00	; 0
    3b12:	11 f4       	brne	.+4      	; 0x3b18 <pvPortMalloc+0x1e>
    3b14:	0e 94 ec 1c 	call	0x39d8	; 0x39d8 <vApplicationMallocFailedHook>
    3b18:	ce 01       	movw	r24, r28
    3b1a:	df 91       	pop	r29
    3b1c:	cf 91       	pop	r28
    3b1e:	08 95       	ret

00003b20 <vPortFree>:
    3b20:	cf 93       	push	r28
    3b22:	df 93       	push	r29
    3b24:	00 97       	sbiw	r24, 0x00	; 0
    3b26:	51 f0       	breq	.+20     	; 0x3b3c <vPortFree+0x1c>
    3b28:	ec 01       	movw	r28, r24
    3b2a:	0e 94 24 18 	call	0x3048	; 0x3048 <vTaskSuspendAll>
    3b2e:	ce 01       	movw	r24, r28
    3b30:	0e 94 99 20 	call	0x4132	; 0x4132 <free>
    3b34:	df 91       	pop	r29
    3b36:	cf 91       	pop	r28
    3b38:	0c 94 e0 18 	jmp	0x31c0	; 0x31c0 <xTaskResumeAll>
    3b3c:	df 91       	pop	r29
    3b3e:	cf 91       	pop	r28
    3b40:	08 95       	ret

00003b42 <vListInitialise>:
    3b42:	fc 01       	movw	r30, r24
    3b44:	03 96       	adiw	r24, 0x03	; 3
    3b46:	92 83       	std	Z+2, r25	; 0x02
    3b48:	81 83       	std	Z+1, r24	; 0x01
    3b4a:	2f ef       	ldi	r18, 0xFF	; 255
    3b4c:	3f ef       	ldi	r19, 0xFF	; 255
    3b4e:	34 83       	std	Z+4, r19	; 0x04
    3b50:	23 83       	std	Z+3, r18	; 0x03
    3b52:	96 83       	std	Z+6, r25	; 0x06
    3b54:	85 83       	std	Z+5, r24	; 0x05
    3b56:	90 87       	std	Z+8, r25	; 0x08
    3b58:	87 83       	std	Z+7, r24	; 0x07
    3b5a:	10 82       	st	Z, r1
    3b5c:	08 95       	ret

00003b5e <vListInitialiseItem>:
    3b5e:	fc 01       	movw	r30, r24
    3b60:	11 86       	std	Z+9, r1	; 0x09
    3b62:	10 86       	std	Z+8, r1	; 0x08
    3b64:	08 95       	ret

00003b66 <vListInsertEnd>:
    3b66:	cf 93       	push	r28
    3b68:	df 93       	push	r29
    3b6a:	9c 01       	movw	r18, r24
    3b6c:	fb 01       	movw	r30, r22
    3b6e:	dc 01       	movw	r26, r24
    3b70:	11 96       	adiw	r26, 0x01	; 1
    3b72:	cd 91       	ld	r28, X+
    3b74:	dc 91       	ld	r29, X
    3b76:	12 97       	sbiw	r26, 0x02	; 2
    3b78:	d3 83       	std	Z+3, r29	; 0x03
    3b7a:	c2 83       	std	Z+2, r28	; 0x02
    3b7c:	8c 81       	ldd	r24, Y+4	; 0x04
    3b7e:	9d 81       	ldd	r25, Y+5	; 0x05
    3b80:	95 83       	std	Z+5, r25	; 0x05
    3b82:	84 83       	std	Z+4, r24	; 0x04
    3b84:	8c 81       	ldd	r24, Y+4	; 0x04
    3b86:	9d 81       	ldd	r25, Y+5	; 0x05
    3b88:	dc 01       	movw	r26, r24
    3b8a:	13 96       	adiw	r26, 0x03	; 3
    3b8c:	7c 93       	st	X, r23
    3b8e:	6e 93       	st	-X, r22
    3b90:	12 97       	sbiw	r26, 0x02	; 2
    3b92:	7d 83       	std	Y+5, r23	; 0x05
    3b94:	6c 83       	std	Y+4, r22	; 0x04
    3b96:	31 87       	std	Z+9, r19	; 0x09
    3b98:	20 87       	std	Z+8, r18	; 0x08
    3b9a:	f9 01       	movw	r30, r18
    3b9c:	80 81       	ld	r24, Z
    3b9e:	8f 5f       	subi	r24, 0xFF	; 255
    3ba0:	80 83       	st	Z, r24
    3ba2:	df 91       	pop	r29
    3ba4:	cf 91       	pop	r28
    3ba6:	08 95       	ret

00003ba8 <vListInsert>:
    3ba8:	0f 93       	push	r16
    3baa:	1f 93       	push	r17
    3bac:	cf 93       	push	r28
    3bae:	df 93       	push	r29
    3bb0:	8c 01       	movw	r16, r24
    3bb2:	fb 01       	movw	r30, r22
    3bb4:	80 81       	ld	r24, Z
    3bb6:	91 81       	ldd	r25, Z+1	; 0x01
    3bb8:	8f 3f       	cpi	r24, 0xFF	; 255
    3bba:	2f ef       	ldi	r18, 0xFF	; 255
    3bbc:	92 07       	cpc	r25, r18
    3bbe:	21 f4       	brne	.+8      	; 0x3bc8 <vListInsert+0x20>
    3bc0:	e8 01       	movw	r28, r16
    3bc2:	af 81       	ldd	r26, Y+7	; 0x07
    3bc4:	b8 85       	ldd	r27, Y+8	; 0x08
    3bc6:	0e c0       	rjmp	.+28     	; 0x3be4 <vListInsert+0x3c>
    3bc8:	d8 01       	movw	r26, r16
    3bca:	13 96       	adiw	r26, 0x03	; 3
    3bcc:	12 96       	adiw	r26, 0x02	; 2
    3bce:	2d 91       	ld	r18, X+
    3bd0:	3c 91       	ld	r19, X
    3bd2:	13 97       	sbiw	r26, 0x03	; 3
    3bd4:	e9 01       	movw	r28, r18
    3bd6:	48 81       	ld	r20, Y
    3bd8:	59 81       	ldd	r21, Y+1	; 0x01
    3bda:	84 17       	cp	r24, r20
    3bdc:	95 07       	cpc	r25, r21
    3bde:	10 f0       	brcs	.+4      	; 0x3be4 <vListInsert+0x3c>
    3be0:	d9 01       	movw	r26, r18
    3be2:	f4 cf       	rjmp	.-24     	; 0x3bcc <vListInsert+0x24>
    3be4:	12 96       	adiw	r26, 0x02	; 2
    3be6:	8d 91       	ld	r24, X+
    3be8:	9c 91       	ld	r25, X
    3bea:	13 97       	sbiw	r26, 0x03	; 3
    3bec:	93 83       	std	Z+3, r25	; 0x03
    3bee:	82 83       	std	Z+2, r24	; 0x02
    3bf0:	ec 01       	movw	r28, r24
    3bf2:	fd 83       	std	Y+5, r31	; 0x05
    3bf4:	ec 83       	std	Y+4, r30	; 0x04
    3bf6:	b5 83       	std	Z+5, r27	; 0x05
    3bf8:	a4 83       	std	Z+4, r26	; 0x04
    3bfa:	13 96       	adiw	r26, 0x03	; 3
    3bfc:	fc 93       	st	X, r31
    3bfe:	ee 93       	st	-X, r30
    3c00:	12 97       	sbiw	r26, 0x02	; 2
    3c02:	11 87       	std	Z+9, r17	; 0x09
    3c04:	00 87       	std	Z+8, r16	; 0x08
    3c06:	f8 01       	movw	r30, r16
    3c08:	80 81       	ld	r24, Z
    3c0a:	8f 5f       	subi	r24, 0xFF	; 255
    3c0c:	80 83       	st	Z, r24
    3c0e:	df 91       	pop	r29
    3c10:	cf 91       	pop	r28
    3c12:	1f 91       	pop	r17
    3c14:	0f 91       	pop	r16
    3c16:	08 95       	ret

00003c18 <uxListRemove>:
    3c18:	cf 93       	push	r28
    3c1a:	df 93       	push	r29
    3c1c:	fc 01       	movw	r30, r24
    3c1e:	a0 85       	ldd	r26, Z+8	; 0x08
    3c20:	b1 85       	ldd	r27, Z+9	; 0x09
    3c22:	82 81       	ldd	r24, Z+2	; 0x02
    3c24:	93 81       	ldd	r25, Z+3	; 0x03
    3c26:	24 81       	ldd	r18, Z+4	; 0x04
    3c28:	35 81       	ldd	r19, Z+5	; 0x05
    3c2a:	ec 01       	movw	r28, r24
    3c2c:	3d 83       	std	Y+5, r19	; 0x05
    3c2e:	2c 83       	std	Y+4, r18	; 0x04
    3c30:	c4 81       	ldd	r28, Z+4	; 0x04
    3c32:	d5 81       	ldd	r29, Z+5	; 0x05
    3c34:	9b 83       	std	Y+3, r25	; 0x03
    3c36:	8a 83       	std	Y+2, r24	; 0x02
    3c38:	11 96       	adiw	r26, 0x01	; 1
    3c3a:	8d 91       	ld	r24, X+
    3c3c:	9c 91       	ld	r25, X
    3c3e:	12 97       	sbiw	r26, 0x02	; 2
    3c40:	e8 17       	cp	r30, r24
    3c42:	f9 07       	cpc	r31, r25
    3c44:	21 f4       	brne	.+8      	; 0x3c4e <uxListRemove+0x36>
    3c46:	12 96       	adiw	r26, 0x02	; 2
    3c48:	dc 93       	st	X, r29
    3c4a:	ce 93       	st	-X, r28
    3c4c:	11 97       	sbiw	r26, 0x01	; 1
    3c4e:	11 86       	std	Z+9, r1	; 0x09
    3c50:	10 86       	std	Z+8, r1	; 0x08
    3c52:	8c 91       	ld	r24, X
    3c54:	81 50       	subi	r24, 0x01	; 1
    3c56:	8c 93       	st	X, r24
    3c58:	8c 91       	ld	r24, X
    3c5a:	df 91       	pop	r29
    3c5c:	cf 91       	pop	r28
    3c5e:	08 95       	ret

00003c60 <pxPortInitialiseStack>:
		);
	}
	else
	{
        uint8_t register temp_reg;
		__asm__ __volatile__ (
    3c60:	31 e1       	ldi	r19, 0x11	; 17
    3c62:	fc 01       	movw	r30, r24
    3c64:	30 83       	st	Z, r19
    3c66:	31 97       	sbiw	r30, 0x01	; 1
    3c68:	22 e2       	ldi	r18, 0x22	; 34
    3c6a:	20 83       	st	Z, r18
    3c6c:	31 97       	sbiw	r30, 0x01	; 1
    3c6e:	a3 e3       	ldi	r26, 0x33	; 51
    3c70:	a0 83       	st	Z, r26
    3c72:	31 97       	sbiw	r30, 0x01	; 1
    3c74:	60 83       	st	Z, r22
    3c76:	31 97       	sbiw	r30, 0x01	; 1
    3c78:	70 83       	st	Z, r23
    3c7a:	31 97       	sbiw	r30, 0x01	; 1
    3c7c:	10 82       	st	Z, r1
    3c7e:	31 97       	sbiw	r30, 0x01	; 1
    3c80:	60 e8       	ldi	r22, 0x80	; 128
    3c82:	60 83       	st	Z, r22
    3c84:	31 97       	sbiw	r30, 0x01	; 1
    3c86:	10 82       	st	Z, r1
    3c88:	31 97       	sbiw	r30, 0x01	; 1
    3c8a:	62 e0       	ldi	r22, 0x02	; 2
    3c8c:	60 83       	st	Z, r22
    3c8e:	31 97       	sbiw	r30, 0x01	; 1
    3c90:	63 e0       	ldi	r22, 0x03	; 3
    3c92:	60 83       	st	Z, r22
    3c94:	31 97       	sbiw	r30, 0x01	; 1
    3c96:	64 e0       	ldi	r22, 0x04	; 4
    3c98:	60 83       	st	Z, r22
    3c9a:	31 97       	sbiw	r30, 0x01	; 1
    3c9c:	65 e0       	ldi	r22, 0x05	; 5
    3c9e:	60 83       	st	Z, r22
    3ca0:	31 97       	sbiw	r30, 0x01	; 1
    3ca2:	66 e0       	ldi	r22, 0x06	; 6
    3ca4:	60 83       	st	Z, r22
    3ca6:	31 97       	sbiw	r30, 0x01	; 1
    3ca8:	67 e0       	ldi	r22, 0x07	; 7
    3caa:	60 83       	st	Z, r22
    3cac:	31 97       	sbiw	r30, 0x01	; 1
    3cae:	68 e0       	ldi	r22, 0x08	; 8
    3cb0:	60 83       	st	Z, r22
    3cb2:	31 97       	sbiw	r30, 0x01	; 1
    3cb4:	69 e0       	ldi	r22, 0x09	; 9
    3cb6:	60 83       	st	Z, r22
    3cb8:	31 97       	sbiw	r30, 0x01	; 1
    3cba:	60 e1       	ldi	r22, 0x10	; 16
    3cbc:	60 83       	st	Z, r22
    3cbe:	31 97       	sbiw	r30, 0x01	; 1
    3cc0:	30 83       	st	Z, r19
    3cc2:	31 97       	sbiw	r30, 0x01	; 1
    3cc4:	32 e1       	ldi	r19, 0x12	; 18
    3cc6:	30 83       	st	Z, r19
    3cc8:	31 97       	sbiw	r30, 0x01	; 1
    3cca:	33 e1       	ldi	r19, 0x13	; 19
    3ccc:	30 83       	st	Z, r19
    3cce:	31 97       	sbiw	r30, 0x01	; 1
    3cd0:	34 e1       	ldi	r19, 0x14	; 20
    3cd2:	30 83       	st	Z, r19
    3cd4:	31 97       	sbiw	r30, 0x01	; 1
    3cd6:	35 e1       	ldi	r19, 0x15	; 21
    3cd8:	30 83       	st	Z, r19
    3cda:	31 97       	sbiw	r30, 0x01	; 1
    3cdc:	36 e1       	ldi	r19, 0x16	; 22
    3cde:	30 83       	st	Z, r19
    3ce0:	31 97       	sbiw	r30, 0x01	; 1
    3ce2:	37 e1       	ldi	r19, 0x17	; 23
    3ce4:	30 83       	st	Z, r19
    3ce6:	31 97       	sbiw	r30, 0x01	; 1
    3ce8:	38 e1       	ldi	r19, 0x18	; 24
    3cea:	30 83       	st	Z, r19
    3cec:	31 97       	sbiw	r30, 0x01	; 1
    3cee:	39 e1       	ldi	r19, 0x19	; 25
    3cf0:	30 83       	st	Z, r19
    3cf2:	31 97       	sbiw	r30, 0x01	; 1
    3cf4:	30 e2       	ldi	r19, 0x20	; 32
    3cf6:	30 83       	st	Z, r19
    3cf8:	31 97       	sbiw	r30, 0x01	; 1
    3cfa:	31 e2       	ldi	r19, 0x21	; 33
    3cfc:	30 83       	st	Z, r19
    3cfe:	31 97       	sbiw	r30, 0x01	; 1
    3d00:	20 83       	st	Z, r18
    3d02:	31 97       	sbiw	r30, 0x01	; 1
    3d04:	23 e2       	ldi	r18, 0x23	; 35
    3d06:	20 83       	st	Z, r18
    3d08:	31 97       	sbiw	r30, 0x01	; 1
    3d0a:	40 83       	st	Z, r20
    3d0c:	31 97       	sbiw	r30, 0x01	; 1
    3d0e:	50 83       	st	Z, r21
    3d10:	31 97       	sbiw	r30, 0x01	; 1
    3d12:	26 e2       	ldi	r18, 0x26	; 38
    3d14:	20 83       	st	Z, r18
    3d16:	31 97       	sbiw	r30, 0x01	; 1
    3d18:	27 e2       	ldi	r18, 0x27	; 39
    3d1a:	20 83       	st	Z, r18
    3d1c:	31 97       	sbiw	r30, 0x01	; 1
    3d1e:	28 e2       	ldi	r18, 0x28	; 40
    3d20:	20 83       	st	Z, r18
    3d22:	31 97       	sbiw	r30, 0x01	; 1
    3d24:	29 e2       	ldi	r18, 0x29	; 41
    3d26:	20 83       	st	Z, r18
    3d28:	31 97       	sbiw	r30, 0x01	; 1
    3d2a:	20 e3       	ldi	r18, 0x30	; 48
    3d2c:	20 83       	st	Z, r18
    3d2e:	31 97       	sbiw	r30, 0x01	; 1
    3d30:	21 e3       	ldi	r18, 0x31	; 49
    3d32:	20 83       	st	Z, r18
    3d34:	86 97       	sbiw	r24, 0x26	; 38
    3d36:	08 95       	ret

00003d38 <xPortStartScheduler>:
    3d38:	a8 95       	wdr
    3d3a:	90 ec       	ldi	r25, 0xC0	; 192
    3d3c:	88 e1       	ldi	r24, 0x18	; 24
    3d3e:	0f b6       	in	r0, 0x3f	; 63
    3d40:	f8 94       	cli
    3d42:	a8 95       	wdr
    3d44:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    3d48:	0f be       	out	0x3f, r0	; 63
    3d4a:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__DATA_REGION_ORIGIN__>
    3d4e:	a0 91 7b 05 	lds	r26, 0x057B	; 0x80057b <pxCurrentTCB>
    3d52:	b0 91 7c 05 	lds	r27, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3d56:	cd 91       	ld	r28, X+
    3d58:	cd bf       	out	0x3d, r28	; 61
    3d5a:	dd 91       	ld	r29, X+
    3d5c:	de bf       	out	0x3e, r29	; 62
    3d5e:	ff 91       	pop	r31
    3d60:	ef 91       	pop	r30
    3d62:	df 91       	pop	r29
    3d64:	cf 91       	pop	r28
    3d66:	bf 91       	pop	r27
    3d68:	af 91       	pop	r26
    3d6a:	9f 91       	pop	r25
    3d6c:	8f 91       	pop	r24
    3d6e:	7f 91       	pop	r23
    3d70:	6f 91       	pop	r22
    3d72:	5f 91       	pop	r21
    3d74:	4f 91       	pop	r20
    3d76:	3f 91       	pop	r19
    3d78:	2f 91       	pop	r18
    3d7a:	1f 91       	pop	r17
    3d7c:	0f 91       	pop	r16
    3d7e:	ff 90       	pop	r15
    3d80:	ef 90       	pop	r14
    3d82:	df 90       	pop	r13
    3d84:	cf 90       	pop	r12
    3d86:	bf 90       	pop	r11
    3d88:	af 90       	pop	r10
    3d8a:	9f 90       	pop	r9
    3d8c:	8f 90       	pop	r8
    3d8e:	7f 90       	pop	r7
    3d90:	6f 90       	pop	r6
    3d92:	5f 90       	pop	r5
    3d94:	4f 90       	pop	r4
    3d96:	3f 90       	pop	r3
    3d98:	2f 90       	pop	r2
    3d9a:	1f 90       	pop	r1
    3d9c:	0f 90       	pop	r0
    3d9e:	0f be       	out	0x3f, r0	; 63
    3da0:	0f 90       	pop	r0
    3da2:	08 95       	ret
    3da4:	81 e0       	ldi	r24, 0x01	; 1
    3da6:	08 95       	ret

00003da8 <vPortYield>:
    3da8:	0f 92       	push	r0
    3daa:	0f b6       	in	r0, 0x3f	; 63
    3dac:	f8 94       	cli
    3dae:	0f 92       	push	r0
    3db0:	1f 92       	push	r1
    3db2:	11 24       	eor	r1, r1
    3db4:	2f 92       	push	r2
    3db6:	3f 92       	push	r3
    3db8:	4f 92       	push	r4
    3dba:	5f 92       	push	r5
    3dbc:	6f 92       	push	r6
    3dbe:	7f 92       	push	r7
    3dc0:	8f 92       	push	r8
    3dc2:	9f 92       	push	r9
    3dc4:	af 92       	push	r10
    3dc6:	bf 92       	push	r11
    3dc8:	cf 92       	push	r12
    3dca:	df 92       	push	r13
    3dcc:	ef 92       	push	r14
    3dce:	ff 92       	push	r15
    3dd0:	0f 93       	push	r16
    3dd2:	1f 93       	push	r17
    3dd4:	2f 93       	push	r18
    3dd6:	3f 93       	push	r19
    3dd8:	4f 93       	push	r20
    3dda:	5f 93       	push	r21
    3ddc:	6f 93       	push	r22
    3dde:	7f 93       	push	r23
    3de0:	8f 93       	push	r24
    3de2:	9f 93       	push	r25
    3de4:	af 93       	push	r26
    3de6:	bf 93       	push	r27
    3de8:	cf 93       	push	r28
    3dea:	df 93       	push	r29
    3dec:	ef 93       	push	r30
    3dee:	ff 93       	push	r31
    3df0:	a0 91 7b 05 	lds	r26, 0x057B	; 0x80057b <pxCurrentTCB>
    3df4:	b0 91 7c 05 	lds	r27, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3df8:	0d b6       	in	r0, 0x3d	; 61
    3dfa:	0d 92       	st	X+, r0
    3dfc:	0e b6       	in	r0, 0x3e	; 62
    3dfe:	0d 92       	st	X+, r0
    3e00:	0e 94 87 19 	call	0x330e	; 0x330e <vTaskSwitchContext>
    3e04:	a0 91 7b 05 	lds	r26, 0x057B	; 0x80057b <pxCurrentTCB>
    3e08:	b0 91 7c 05 	lds	r27, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3e0c:	cd 91       	ld	r28, X+
    3e0e:	cd bf       	out	0x3d, r28	; 61
    3e10:	dd 91       	ld	r29, X+
    3e12:	de bf       	out	0x3e, r29	; 62
    3e14:	ff 91       	pop	r31
    3e16:	ef 91       	pop	r30
    3e18:	df 91       	pop	r29
    3e1a:	cf 91       	pop	r28
    3e1c:	bf 91       	pop	r27
    3e1e:	af 91       	pop	r26
    3e20:	9f 91       	pop	r25
    3e22:	8f 91       	pop	r24
    3e24:	7f 91       	pop	r23
    3e26:	6f 91       	pop	r22
    3e28:	5f 91       	pop	r21
    3e2a:	4f 91       	pop	r20
    3e2c:	3f 91       	pop	r19
    3e2e:	2f 91       	pop	r18
    3e30:	1f 91       	pop	r17
    3e32:	0f 91       	pop	r16
    3e34:	ff 90       	pop	r15
    3e36:	ef 90       	pop	r14
    3e38:	df 90       	pop	r13
    3e3a:	cf 90       	pop	r12
    3e3c:	bf 90       	pop	r11
    3e3e:	af 90       	pop	r10
    3e40:	9f 90       	pop	r9
    3e42:	8f 90       	pop	r8
    3e44:	7f 90       	pop	r7
    3e46:	6f 90       	pop	r6
    3e48:	5f 90       	pop	r5
    3e4a:	4f 90       	pop	r4
    3e4c:	3f 90       	pop	r3
    3e4e:	2f 90       	pop	r2
    3e50:	1f 90       	pop	r1
    3e52:	0f 90       	pop	r0
    3e54:	0f be       	out	0x3f, r0	; 63
    3e56:	0f 90       	pop	r0
    3e58:	08 95       	ret

00003e5a <vPortYieldFromTick>:
    3e5a:	0f 92       	push	r0
    3e5c:	0f b6       	in	r0, 0x3f	; 63
    3e5e:	f8 94       	cli
    3e60:	0f 92       	push	r0
    3e62:	1f 92       	push	r1
    3e64:	11 24       	eor	r1, r1
    3e66:	2f 92       	push	r2
    3e68:	3f 92       	push	r3
    3e6a:	4f 92       	push	r4
    3e6c:	5f 92       	push	r5
    3e6e:	6f 92       	push	r6
    3e70:	7f 92       	push	r7
    3e72:	8f 92       	push	r8
    3e74:	9f 92       	push	r9
    3e76:	af 92       	push	r10
    3e78:	bf 92       	push	r11
    3e7a:	cf 92       	push	r12
    3e7c:	df 92       	push	r13
    3e7e:	ef 92       	push	r14
    3e80:	ff 92       	push	r15
    3e82:	0f 93       	push	r16
    3e84:	1f 93       	push	r17
    3e86:	2f 93       	push	r18
    3e88:	3f 93       	push	r19
    3e8a:	4f 93       	push	r20
    3e8c:	5f 93       	push	r21
    3e8e:	6f 93       	push	r22
    3e90:	7f 93       	push	r23
    3e92:	8f 93       	push	r24
    3e94:	9f 93       	push	r25
    3e96:	af 93       	push	r26
    3e98:	bf 93       	push	r27
    3e9a:	cf 93       	push	r28
    3e9c:	df 93       	push	r29
    3e9e:	ef 93       	push	r30
    3ea0:	ff 93       	push	r31
    3ea2:	a0 91 7b 05 	lds	r26, 0x057B	; 0x80057b <pxCurrentTCB>
    3ea6:	b0 91 7c 05 	lds	r27, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3eaa:	0d b6       	in	r0, 0x3d	; 61
    3eac:	0d 92       	st	X+, r0
    3eae:	0e b6       	in	r0, 0x3e	; 62
    3eb0:	0d 92       	st	X+, r0
    3eb2:	13 be       	out	0x33, r1	; 51
    3eb4:	0e 94 34 18 	call	0x3068	; 0x3068 <xTaskIncrementTick>
    3eb8:	81 11       	cpse	r24, r1
    3eba:	0e 94 87 19 	call	0x330e	; 0x330e <vTaskSwitchContext>
    3ebe:	a0 91 7b 05 	lds	r26, 0x057B	; 0x80057b <pxCurrentTCB>
    3ec2:	b0 91 7c 05 	lds	r27, 0x057C	; 0x80057c <pxCurrentTCB+0x1>
    3ec6:	cd 91       	ld	r28, X+
    3ec8:	cd bf       	out	0x3d, r28	; 61
    3eca:	dd 91       	ld	r29, X+
    3ecc:	de bf       	out	0x3e, r29	; 62
    3ece:	ff 91       	pop	r31
    3ed0:	ef 91       	pop	r30
    3ed2:	df 91       	pop	r29
    3ed4:	cf 91       	pop	r28
    3ed6:	bf 91       	pop	r27
    3ed8:	af 91       	pop	r26
    3eda:	9f 91       	pop	r25
    3edc:	8f 91       	pop	r24
    3ede:	7f 91       	pop	r23
    3ee0:	6f 91       	pop	r22
    3ee2:	5f 91       	pop	r21
    3ee4:	4f 91       	pop	r20
    3ee6:	3f 91       	pop	r19
    3ee8:	2f 91       	pop	r18
    3eea:	1f 91       	pop	r17
    3eec:	0f 91       	pop	r16
    3eee:	ff 90       	pop	r15
    3ef0:	ef 90       	pop	r14
    3ef2:	df 90       	pop	r13
    3ef4:	cf 90       	pop	r12
    3ef6:	bf 90       	pop	r11
    3ef8:	af 90       	pop	r10
    3efa:	9f 90       	pop	r9
    3efc:	8f 90       	pop	r8
    3efe:	7f 90       	pop	r7
    3f00:	6f 90       	pop	r6
    3f02:	5f 90       	pop	r5
    3f04:	4f 90       	pop	r4
    3f06:	3f 90       	pop	r3
    3f08:	2f 90       	pop	r2
    3f0a:	1f 90       	pop	r1
    3f0c:	0f 90       	pop	r0
    3f0e:	0f be       	out	0x3f, r0	; 63
    3f10:	0f 90       	pop	r0
    3f12:	08 95       	ret

00003f14 <__vector_6>:
    3f14:	0e 94 2d 1f 	call	0x3e5a	; 0x3e5a <vPortYieldFromTick>
    3f18:	18 95       	reti

00003f1a <__unordsf2>:
    3f1a:	0e 94 95 0c 	call	0x192a	; 0x192a <__fp_cmp>
    3f1e:	88 0b       	sbc	r24, r24
    3f20:	99 0b       	sbc	r25, r25
    3f22:	08 95       	ret

00003f24 <__divmodhi4>:
    3f24:	97 fb       	bst	r25, 7
    3f26:	07 2e       	mov	r0, r23
    3f28:	16 f4       	brtc	.+4      	; 0x3f2e <__divmodhi4+0xa>
    3f2a:	00 94       	com	r0
    3f2c:	07 d0       	rcall	.+14     	; 0x3f3c <__divmodhi4_neg1>
    3f2e:	77 fd       	sbrc	r23, 7
    3f30:	09 d0       	rcall	.+18     	; 0x3f44 <__divmodhi4_neg2>
    3f32:	0e 94 ed 1f 	call	0x3fda	; 0x3fda <__udivmodhi4>
    3f36:	07 fc       	sbrc	r0, 7
    3f38:	05 d0       	rcall	.+10     	; 0x3f44 <__divmodhi4_neg2>
    3f3a:	3e f4       	brtc	.+14     	; 0x3f4a <__divmodhi4_exit>

00003f3c <__divmodhi4_neg1>:
    3f3c:	90 95       	com	r25
    3f3e:	81 95       	neg	r24
    3f40:	9f 4f       	sbci	r25, 0xFF	; 255
    3f42:	08 95       	ret

00003f44 <__divmodhi4_neg2>:
    3f44:	70 95       	com	r23
    3f46:	61 95       	neg	r22
    3f48:	7f 4f       	sbci	r23, 0xFF	; 255

00003f4a <__divmodhi4_exit>:
    3f4a:	08 95       	ret

00003f4c <__udivmodsi4>:
    3f4c:	a1 e2       	ldi	r26, 0x21	; 33
    3f4e:	1a 2e       	mov	r1, r26
    3f50:	aa 1b       	sub	r26, r26
    3f52:	bb 1b       	sub	r27, r27
    3f54:	fd 01       	movw	r30, r26
    3f56:	0d c0       	rjmp	.+26     	; 0x3f72 <__udivmodsi4_ep>

00003f58 <__udivmodsi4_loop>:
    3f58:	aa 1f       	adc	r26, r26
    3f5a:	bb 1f       	adc	r27, r27
    3f5c:	ee 1f       	adc	r30, r30
    3f5e:	ff 1f       	adc	r31, r31
    3f60:	a2 17       	cp	r26, r18
    3f62:	b3 07       	cpc	r27, r19
    3f64:	e4 07       	cpc	r30, r20
    3f66:	f5 07       	cpc	r31, r21
    3f68:	20 f0       	brcs	.+8      	; 0x3f72 <__udivmodsi4_ep>
    3f6a:	a2 1b       	sub	r26, r18
    3f6c:	b3 0b       	sbc	r27, r19
    3f6e:	e4 0b       	sbc	r30, r20
    3f70:	f5 0b       	sbc	r31, r21

00003f72 <__udivmodsi4_ep>:
    3f72:	66 1f       	adc	r22, r22
    3f74:	77 1f       	adc	r23, r23
    3f76:	88 1f       	adc	r24, r24
    3f78:	99 1f       	adc	r25, r25
    3f7a:	1a 94       	dec	r1
    3f7c:	69 f7       	brne	.-38     	; 0x3f58 <__udivmodsi4_loop>
    3f7e:	60 95       	com	r22
    3f80:	70 95       	com	r23
    3f82:	80 95       	com	r24
    3f84:	90 95       	com	r25
    3f86:	9b 01       	movw	r18, r22
    3f88:	ac 01       	movw	r20, r24
    3f8a:	bd 01       	movw	r22, r26
    3f8c:	cf 01       	movw	r24, r30
    3f8e:	08 95       	ret

00003f90 <__divmodsi4>:
    3f90:	05 2e       	mov	r0, r21
    3f92:	97 fb       	bst	r25, 7
    3f94:	1e f4       	brtc	.+6      	; 0x3f9c <__divmodsi4+0xc>
    3f96:	00 94       	com	r0
    3f98:	0e 94 df 1f 	call	0x3fbe	; 0x3fbe <__negsi2>
    3f9c:	57 fd       	sbrc	r21, 7
    3f9e:	07 d0       	rcall	.+14     	; 0x3fae <__divmodsi4_neg2>
    3fa0:	0e 94 a6 1f 	call	0x3f4c	; 0x3f4c <__udivmodsi4>
    3fa4:	07 fc       	sbrc	r0, 7
    3fa6:	03 d0       	rcall	.+6      	; 0x3fae <__divmodsi4_neg2>
    3fa8:	4e f4       	brtc	.+18     	; 0x3fbc <__divmodsi4_exit>
    3faa:	0c 94 df 1f 	jmp	0x3fbe	; 0x3fbe <__negsi2>

00003fae <__divmodsi4_neg2>:
    3fae:	50 95       	com	r21
    3fb0:	40 95       	com	r20
    3fb2:	30 95       	com	r19
    3fb4:	21 95       	neg	r18
    3fb6:	3f 4f       	sbci	r19, 0xFF	; 255
    3fb8:	4f 4f       	sbci	r20, 0xFF	; 255
    3fba:	5f 4f       	sbci	r21, 0xFF	; 255

00003fbc <__divmodsi4_exit>:
    3fbc:	08 95       	ret

00003fbe <__negsi2>:
    3fbe:	90 95       	com	r25
    3fc0:	80 95       	com	r24
    3fc2:	70 95       	com	r23
    3fc4:	61 95       	neg	r22
    3fc6:	7f 4f       	sbci	r23, 0xFF	; 255
    3fc8:	8f 4f       	sbci	r24, 0xFF	; 255
    3fca:	9f 4f       	sbci	r25, 0xFF	; 255
    3fcc:	08 95       	ret

00003fce <__tablejump2__>:
    3fce:	ee 0f       	add	r30, r30
    3fd0:	ff 1f       	adc	r31, r31
    3fd2:	05 90       	lpm	r0, Z+
    3fd4:	f4 91       	lpm	r31, Z
    3fd6:	e0 2d       	mov	r30, r0
    3fd8:	09 94       	ijmp

00003fda <__udivmodhi4>:
    3fda:	aa 1b       	sub	r26, r26
    3fdc:	bb 1b       	sub	r27, r27
    3fde:	51 e1       	ldi	r21, 0x11	; 17
    3fe0:	07 c0       	rjmp	.+14     	; 0x3ff0 <__udivmodhi4_ep>

00003fe2 <__udivmodhi4_loop>:
    3fe2:	aa 1f       	adc	r26, r26
    3fe4:	bb 1f       	adc	r27, r27
    3fe6:	a6 17       	cp	r26, r22
    3fe8:	b7 07       	cpc	r27, r23
    3fea:	10 f0       	brcs	.+4      	; 0x3ff0 <__udivmodhi4_ep>
    3fec:	a6 1b       	sub	r26, r22
    3fee:	b7 0b       	sbc	r27, r23

00003ff0 <__udivmodhi4_ep>:
    3ff0:	88 1f       	adc	r24, r24
    3ff2:	99 1f       	adc	r25, r25
    3ff4:	5a 95       	dec	r21
    3ff6:	a9 f7       	brne	.-22     	; 0x3fe2 <__udivmodhi4_loop>
    3ff8:	80 95       	com	r24
    3ffa:	90 95       	com	r25
    3ffc:	bc 01       	movw	r22, r24
    3ffe:	cd 01       	movw	r24, r26
    4000:	08 95       	ret

00004002 <malloc>:
    4002:	0f 93       	push	r16
    4004:	1f 93       	push	r17
    4006:	cf 93       	push	r28
    4008:	df 93       	push	r29
    400a:	82 30       	cpi	r24, 0x02	; 2
    400c:	91 05       	cpc	r25, r1
    400e:	10 f4       	brcc	.+4      	; 0x4014 <malloc+0x12>
    4010:	82 e0       	ldi	r24, 0x02	; 2
    4012:	90 e0       	ldi	r25, 0x00	; 0
    4014:	e0 91 aa 05 	lds	r30, 0x05AA	; 0x8005aa <__flp>
    4018:	f0 91 ab 05 	lds	r31, 0x05AB	; 0x8005ab <__flp+0x1>
    401c:	20 e0       	ldi	r18, 0x00	; 0
    401e:	30 e0       	ldi	r19, 0x00	; 0
    4020:	a0 e0       	ldi	r26, 0x00	; 0
    4022:	b0 e0       	ldi	r27, 0x00	; 0
    4024:	30 97       	sbiw	r30, 0x00	; 0
    4026:	19 f1       	breq	.+70     	; 0x406e <malloc+0x6c>
    4028:	40 81       	ld	r20, Z
    402a:	51 81       	ldd	r21, Z+1	; 0x01
    402c:	02 81       	ldd	r16, Z+2	; 0x02
    402e:	13 81       	ldd	r17, Z+3	; 0x03
    4030:	48 17       	cp	r20, r24
    4032:	59 07       	cpc	r21, r25
    4034:	c8 f0       	brcs	.+50     	; 0x4068 <malloc+0x66>
    4036:	84 17       	cp	r24, r20
    4038:	95 07       	cpc	r25, r21
    403a:	69 f4       	brne	.+26     	; 0x4056 <malloc+0x54>
    403c:	10 97       	sbiw	r26, 0x00	; 0
    403e:	31 f0       	breq	.+12     	; 0x404c <malloc+0x4a>
    4040:	12 96       	adiw	r26, 0x02	; 2
    4042:	0c 93       	st	X, r16
    4044:	12 97       	sbiw	r26, 0x02	; 2
    4046:	13 96       	adiw	r26, 0x03	; 3
    4048:	1c 93       	st	X, r17
    404a:	27 c0       	rjmp	.+78     	; 0x409a <malloc+0x98>
    404c:	00 93 aa 05 	sts	0x05AA, r16	; 0x8005aa <__flp>
    4050:	10 93 ab 05 	sts	0x05AB, r17	; 0x8005ab <__flp+0x1>
    4054:	22 c0       	rjmp	.+68     	; 0x409a <malloc+0x98>
    4056:	21 15       	cp	r18, r1
    4058:	31 05       	cpc	r19, r1
    405a:	19 f0       	breq	.+6      	; 0x4062 <malloc+0x60>
    405c:	42 17       	cp	r20, r18
    405e:	53 07       	cpc	r21, r19
    4060:	18 f4       	brcc	.+6      	; 0x4068 <malloc+0x66>
    4062:	9a 01       	movw	r18, r20
    4064:	bd 01       	movw	r22, r26
    4066:	ef 01       	movw	r28, r30
    4068:	df 01       	movw	r26, r30
    406a:	f8 01       	movw	r30, r16
    406c:	db cf       	rjmp	.-74     	; 0x4024 <malloc+0x22>
    406e:	21 15       	cp	r18, r1
    4070:	31 05       	cpc	r19, r1
    4072:	f9 f0       	breq	.+62     	; 0x40b2 <malloc+0xb0>
    4074:	28 1b       	sub	r18, r24
    4076:	39 0b       	sbc	r19, r25
    4078:	24 30       	cpi	r18, 0x04	; 4
    407a:	31 05       	cpc	r19, r1
    407c:	80 f4       	brcc	.+32     	; 0x409e <malloc+0x9c>
    407e:	8a 81       	ldd	r24, Y+2	; 0x02
    4080:	9b 81       	ldd	r25, Y+3	; 0x03
    4082:	61 15       	cp	r22, r1
    4084:	71 05       	cpc	r23, r1
    4086:	21 f0       	breq	.+8      	; 0x4090 <malloc+0x8e>
    4088:	fb 01       	movw	r30, r22
    408a:	93 83       	std	Z+3, r25	; 0x03
    408c:	82 83       	std	Z+2, r24	; 0x02
    408e:	04 c0       	rjmp	.+8      	; 0x4098 <malloc+0x96>
    4090:	90 93 ab 05 	sts	0x05AB, r25	; 0x8005ab <__flp+0x1>
    4094:	80 93 aa 05 	sts	0x05AA, r24	; 0x8005aa <__flp>
    4098:	fe 01       	movw	r30, r28
    409a:	32 96       	adiw	r30, 0x02	; 2
    409c:	44 c0       	rjmp	.+136    	; 0x4126 <malloc+0x124>
    409e:	fe 01       	movw	r30, r28
    40a0:	e2 0f       	add	r30, r18
    40a2:	f3 1f       	adc	r31, r19
    40a4:	81 93       	st	Z+, r24
    40a6:	91 93       	st	Z+, r25
    40a8:	22 50       	subi	r18, 0x02	; 2
    40aa:	31 09       	sbc	r19, r1
    40ac:	39 83       	std	Y+1, r19	; 0x01
    40ae:	28 83       	st	Y, r18
    40b0:	3a c0       	rjmp	.+116    	; 0x4126 <malloc+0x124>
    40b2:	20 91 a8 05 	lds	r18, 0x05A8	; 0x8005a8 <__brkval>
    40b6:	30 91 a9 05 	lds	r19, 0x05A9	; 0x8005a9 <__brkval+0x1>
    40ba:	23 2b       	or	r18, r19
    40bc:	41 f4       	brne	.+16     	; 0x40ce <malloc+0xcc>
    40be:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    40c2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    40c6:	30 93 a9 05 	sts	0x05A9, r19	; 0x8005a9 <__brkval+0x1>
    40ca:	20 93 a8 05 	sts	0x05A8, r18	; 0x8005a8 <__brkval>
    40ce:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    40d2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    40d6:	21 15       	cp	r18, r1
    40d8:	31 05       	cpc	r19, r1
    40da:	41 f4       	brne	.+16     	; 0x40ec <malloc+0xea>
    40dc:	2d b7       	in	r18, 0x3d	; 61
    40de:	3e b7       	in	r19, 0x3e	; 62
    40e0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    40e4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    40e8:	24 1b       	sub	r18, r20
    40ea:	35 0b       	sbc	r19, r21
    40ec:	e0 91 a8 05 	lds	r30, 0x05A8	; 0x8005a8 <__brkval>
    40f0:	f0 91 a9 05 	lds	r31, 0x05A9	; 0x8005a9 <__brkval+0x1>
    40f4:	e2 17       	cp	r30, r18
    40f6:	f3 07       	cpc	r31, r19
    40f8:	a0 f4       	brcc	.+40     	; 0x4122 <malloc+0x120>
    40fa:	2e 1b       	sub	r18, r30
    40fc:	3f 0b       	sbc	r19, r31
    40fe:	28 17       	cp	r18, r24
    4100:	39 07       	cpc	r19, r25
    4102:	78 f0       	brcs	.+30     	; 0x4122 <malloc+0x120>
    4104:	ac 01       	movw	r20, r24
    4106:	4e 5f       	subi	r20, 0xFE	; 254
    4108:	5f 4f       	sbci	r21, 0xFF	; 255
    410a:	24 17       	cp	r18, r20
    410c:	35 07       	cpc	r19, r21
    410e:	48 f0       	brcs	.+18     	; 0x4122 <malloc+0x120>
    4110:	4e 0f       	add	r20, r30
    4112:	5f 1f       	adc	r21, r31
    4114:	50 93 a9 05 	sts	0x05A9, r21	; 0x8005a9 <__brkval+0x1>
    4118:	40 93 a8 05 	sts	0x05A8, r20	; 0x8005a8 <__brkval>
    411c:	81 93       	st	Z+, r24
    411e:	91 93       	st	Z+, r25
    4120:	02 c0       	rjmp	.+4      	; 0x4126 <malloc+0x124>
    4122:	e0 e0       	ldi	r30, 0x00	; 0
    4124:	f0 e0       	ldi	r31, 0x00	; 0
    4126:	cf 01       	movw	r24, r30
    4128:	df 91       	pop	r29
    412a:	cf 91       	pop	r28
    412c:	1f 91       	pop	r17
    412e:	0f 91       	pop	r16
    4130:	08 95       	ret

00004132 <free>:
    4132:	cf 93       	push	r28
    4134:	df 93       	push	r29
    4136:	00 97       	sbiw	r24, 0x00	; 0
    4138:	09 f4       	brne	.+2      	; 0x413c <free+0xa>
    413a:	81 c0       	rjmp	.+258    	; 0x423e <free+0x10c>
    413c:	fc 01       	movw	r30, r24
    413e:	32 97       	sbiw	r30, 0x02	; 2
    4140:	13 82       	std	Z+3, r1	; 0x03
    4142:	12 82       	std	Z+2, r1	; 0x02
    4144:	a0 91 aa 05 	lds	r26, 0x05AA	; 0x8005aa <__flp>
    4148:	b0 91 ab 05 	lds	r27, 0x05AB	; 0x8005ab <__flp+0x1>
    414c:	10 97       	sbiw	r26, 0x00	; 0
    414e:	81 f4       	brne	.+32     	; 0x4170 <free+0x3e>
    4150:	20 81       	ld	r18, Z
    4152:	31 81       	ldd	r19, Z+1	; 0x01
    4154:	82 0f       	add	r24, r18
    4156:	93 1f       	adc	r25, r19
    4158:	20 91 a8 05 	lds	r18, 0x05A8	; 0x8005a8 <__brkval>
    415c:	30 91 a9 05 	lds	r19, 0x05A9	; 0x8005a9 <__brkval+0x1>
    4160:	28 17       	cp	r18, r24
    4162:	39 07       	cpc	r19, r25
    4164:	51 f5       	brne	.+84     	; 0x41ba <free+0x88>
    4166:	f0 93 a9 05 	sts	0x05A9, r31	; 0x8005a9 <__brkval+0x1>
    416a:	e0 93 a8 05 	sts	0x05A8, r30	; 0x8005a8 <__brkval>
    416e:	67 c0       	rjmp	.+206    	; 0x423e <free+0x10c>
    4170:	ed 01       	movw	r28, r26
    4172:	20 e0       	ldi	r18, 0x00	; 0
    4174:	30 e0       	ldi	r19, 0x00	; 0
    4176:	ce 17       	cp	r28, r30
    4178:	df 07       	cpc	r29, r31
    417a:	40 f4       	brcc	.+16     	; 0x418c <free+0x5a>
    417c:	4a 81       	ldd	r20, Y+2	; 0x02
    417e:	5b 81       	ldd	r21, Y+3	; 0x03
    4180:	9e 01       	movw	r18, r28
    4182:	41 15       	cp	r20, r1
    4184:	51 05       	cpc	r21, r1
    4186:	f1 f0       	breq	.+60     	; 0x41c4 <free+0x92>
    4188:	ea 01       	movw	r28, r20
    418a:	f5 cf       	rjmp	.-22     	; 0x4176 <free+0x44>
    418c:	d3 83       	std	Z+3, r29	; 0x03
    418e:	c2 83       	std	Z+2, r28	; 0x02
    4190:	40 81       	ld	r20, Z
    4192:	51 81       	ldd	r21, Z+1	; 0x01
    4194:	84 0f       	add	r24, r20
    4196:	95 1f       	adc	r25, r21
    4198:	c8 17       	cp	r28, r24
    419a:	d9 07       	cpc	r29, r25
    419c:	59 f4       	brne	.+22     	; 0x41b4 <free+0x82>
    419e:	88 81       	ld	r24, Y
    41a0:	99 81       	ldd	r25, Y+1	; 0x01
    41a2:	84 0f       	add	r24, r20
    41a4:	95 1f       	adc	r25, r21
    41a6:	02 96       	adiw	r24, 0x02	; 2
    41a8:	91 83       	std	Z+1, r25	; 0x01
    41aa:	80 83       	st	Z, r24
    41ac:	8a 81       	ldd	r24, Y+2	; 0x02
    41ae:	9b 81       	ldd	r25, Y+3	; 0x03
    41b0:	93 83       	std	Z+3, r25	; 0x03
    41b2:	82 83       	std	Z+2, r24	; 0x02
    41b4:	21 15       	cp	r18, r1
    41b6:	31 05       	cpc	r19, r1
    41b8:	29 f4       	brne	.+10     	; 0x41c4 <free+0x92>
    41ba:	f0 93 ab 05 	sts	0x05AB, r31	; 0x8005ab <__flp+0x1>
    41be:	e0 93 aa 05 	sts	0x05AA, r30	; 0x8005aa <__flp>
    41c2:	3d c0       	rjmp	.+122    	; 0x423e <free+0x10c>
    41c4:	e9 01       	movw	r28, r18
    41c6:	fb 83       	std	Y+3, r31	; 0x03
    41c8:	ea 83       	std	Y+2, r30	; 0x02
    41ca:	49 91       	ld	r20, Y+
    41cc:	59 91       	ld	r21, Y+
    41ce:	c4 0f       	add	r28, r20
    41d0:	d5 1f       	adc	r29, r21
    41d2:	ec 17       	cp	r30, r28
    41d4:	fd 07       	cpc	r31, r29
    41d6:	61 f4       	brne	.+24     	; 0x41f0 <free+0xbe>
    41d8:	80 81       	ld	r24, Z
    41da:	91 81       	ldd	r25, Z+1	; 0x01
    41dc:	84 0f       	add	r24, r20
    41de:	95 1f       	adc	r25, r21
    41e0:	02 96       	adiw	r24, 0x02	; 2
    41e2:	e9 01       	movw	r28, r18
    41e4:	99 83       	std	Y+1, r25	; 0x01
    41e6:	88 83       	st	Y, r24
    41e8:	82 81       	ldd	r24, Z+2	; 0x02
    41ea:	93 81       	ldd	r25, Z+3	; 0x03
    41ec:	9b 83       	std	Y+3, r25	; 0x03
    41ee:	8a 83       	std	Y+2, r24	; 0x02
    41f0:	e0 e0       	ldi	r30, 0x00	; 0
    41f2:	f0 e0       	ldi	r31, 0x00	; 0
    41f4:	12 96       	adiw	r26, 0x02	; 2
    41f6:	8d 91       	ld	r24, X+
    41f8:	9c 91       	ld	r25, X
    41fa:	13 97       	sbiw	r26, 0x03	; 3
    41fc:	00 97       	sbiw	r24, 0x00	; 0
    41fe:	19 f0       	breq	.+6      	; 0x4206 <free+0xd4>
    4200:	fd 01       	movw	r30, r26
    4202:	dc 01       	movw	r26, r24
    4204:	f7 cf       	rjmp	.-18     	; 0x41f4 <free+0xc2>
    4206:	8d 91       	ld	r24, X+
    4208:	9c 91       	ld	r25, X
    420a:	11 97       	sbiw	r26, 0x01	; 1
    420c:	9d 01       	movw	r18, r26
    420e:	2e 5f       	subi	r18, 0xFE	; 254
    4210:	3f 4f       	sbci	r19, 0xFF	; 255
    4212:	82 0f       	add	r24, r18
    4214:	93 1f       	adc	r25, r19
    4216:	20 91 a8 05 	lds	r18, 0x05A8	; 0x8005a8 <__brkval>
    421a:	30 91 a9 05 	lds	r19, 0x05A9	; 0x8005a9 <__brkval+0x1>
    421e:	28 17       	cp	r18, r24
    4220:	39 07       	cpc	r19, r25
    4222:	69 f4       	brne	.+26     	; 0x423e <free+0x10c>
    4224:	30 97       	sbiw	r30, 0x00	; 0
    4226:	29 f4       	brne	.+10     	; 0x4232 <free+0x100>
    4228:	10 92 ab 05 	sts	0x05AB, r1	; 0x8005ab <__flp+0x1>
    422c:	10 92 aa 05 	sts	0x05AA, r1	; 0x8005aa <__flp>
    4230:	02 c0       	rjmp	.+4      	; 0x4236 <free+0x104>
    4232:	13 82       	std	Z+3, r1	; 0x03
    4234:	12 82       	std	Z+2, r1	; 0x02
    4236:	b0 93 a9 05 	sts	0x05A9, r27	; 0x8005a9 <__brkval+0x1>
    423a:	a0 93 a8 05 	sts	0x05A8, r26	; 0x8005a8 <__brkval>
    423e:	df 91       	pop	r29
    4240:	cf 91       	pop	r28
    4242:	08 95       	ret

00004244 <memcpy>:
    4244:	fb 01       	movw	r30, r22
    4246:	dc 01       	movw	r26, r24
    4248:	02 c0       	rjmp	.+4      	; 0x424e <memcpy+0xa>
    424a:	01 90       	ld	r0, Z+
    424c:	0d 92       	st	X+, r0
    424e:	41 50       	subi	r20, 0x01	; 1
    4250:	50 40       	sbci	r21, 0x00	; 0
    4252:	d8 f7       	brcc	.-10     	; 0x424a <memcpy+0x6>
    4254:	08 95       	ret

00004256 <memset>:
    4256:	dc 01       	movw	r26, r24
    4258:	01 c0       	rjmp	.+2      	; 0x425c <memset+0x6>
    425a:	6d 93       	st	X+, r22
    425c:	41 50       	subi	r20, 0x01	; 1
    425e:	50 40       	sbci	r21, 0x00	; 0
    4260:	e0 f7       	brcc	.-8      	; 0x425a <memset+0x4>
    4262:	08 95       	ret

00004264 <eeprom_read_byte>:
    4264:	f9 99       	sbic	0x1f, 1	; 31
    4266:	fe cf       	rjmp	.-4      	; 0x4264 <eeprom_read_byte>
    4268:	92 bd       	out	0x22, r25	; 34
    426a:	81 bd       	out	0x21, r24	; 33
    426c:	f8 9a       	sbi	0x1f, 0	; 31
    426e:	99 27       	eor	r25, r25
    4270:	80 b5       	in	r24, 0x20	; 32
    4272:	08 95       	ret

00004274 <eeprom_write_byte>:
    4274:	26 2f       	mov	r18, r22

00004276 <eeprom_write_r18>:
    4276:	f9 99       	sbic	0x1f, 1	; 31
    4278:	fe cf       	rjmp	.-4      	; 0x4276 <eeprom_write_r18>
    427a:	1f ba       	out	0x1f, r1	; 31
    427c:	92 bd       	out	0x22, r25	; 34
    427e:	81 bd       	out	0x21, r24	; 33
    4280:	20 bd       	out	0x20, r18	; 32
    4282:	0f b6       	in	r0, 0x3f	; 63
    4284:	f8 94       	cli
    4286:	fa 9a       	sbi	0x1f, 2	; 31
    4288:	f9 9a       	sbi	0x1f, 1	; 31
    428a:	0f be       	out	0x3f, r0	; 63
    428c:	01 96       	adiw	r24, 0x01	; 1
    428e:	08 95       	ret

00004290 <__do_global_dtors>:
    4290:	10 e0       	ldi	r17, 0x00	; 0
    4292:	ce e7       	ldi	r28, 0x7E	; 126
    4294:	d0 e0       	ldi	r29, 0x00	; 0
    4296:	04 c0       	rjmp	.+8      	; 0x42a0 <__do_global_dtors+0x10>
    4298:	fe 01       	movw	r30, r28
    429a:	0e 94 e7 1f 	call	0x3fce	; 0x3fce <__tablejump2__>
    429e:	21 96       	adiw	r28, 0x01	; 1
    42a0:	c0 38       	cpi	r28, 0x80	; 128
    42a2:	d1 07       	cpc	r29, r17
    42a4:	c9 f7       	brne	.-14     	; 0x4298 <__do_global_dtors+0x8>
    42a6:	f8 94       	cli

000042a8 <__stop_program>:
    42a8:	ff cf       	rjmp	.-2      	; 0x42a8 <__stop_program>
